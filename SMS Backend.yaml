openapi: 3.0.3
info:
  title: SMS Backend
  version: 1.0.0
paths:
  /api/academic-years/:
    get:
      operationId: academic_years_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      tags:
      - academic-years
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcademicYearList'
          description: ''
    post:
      operationId: academic_years_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - academic-years
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicYear'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicYear'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicYear'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
  /api/academic-years/{id}/:
    get:
      operationId: academic_years_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic year.
        required: true
      tags:
      - academic-years
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    put:
      operationId: academic_years_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic year.
        required: true
      tags:
      - academic-years
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicYear'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicYear'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicYear'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    patch:
      operationId: academic_years_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic year.
        required: true
      tags:
      - academic-years
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYear'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYear'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYear'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    delete:
      operationId: academic_years_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic year.
        required: true
      tags:
      - academic-years
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/all-device-readings/:
    get:
      operationId: all_device_readings_list
      description: This ViewSet allows GET access to AllDeviceReadings stored in default
        DB.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - all-device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllDeviceReadingsList'
          description: ''
  /api/all-device-readings/{id}/:
    get:
      operationId: all_device_readings_retrieve
      description: This ViewSet allows GET access to AllDeviceReadings stored in default
        DB.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this all device readings.
        required: true
      tags:
      - all-device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllDeviceReadings'
          description: ''
  /api/amenities/:
    get:
      operationId: amenities_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: amenities_type
        required: false
        in: query
        description: amenities_type
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: count
        required: false
        in: query
        description: count
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - amenities
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAmenitiesList'
          description: ''
    post:
      operationId: amenities_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - amenities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amenities'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Amenities'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Amenities'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenities'
          description: ''
  /api/amenities-types/:
    get:
      operationId: amenities_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - amenities-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAmenitiesTypeList'
          description: ''
    post:
      operationId: amenities_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - amenities-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenitiesType'
          description: ''
  /api/amenities-types/{id}/:
    get:
      operationId: amenities_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities type.
        required: true
      tags:
      - amenities-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenitiesType'
          description: ''
    put:
      operationId: amenities_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities type.
        required: true
      tags:
      - amenities-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AmenitiesType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenitiesType'
          description: ''
    patch:
      operationId: amenities_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities type.
        required: true
      tags:
      - amenities-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAmenitiesType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAmenitiesType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAmenitiesType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenitiesType'
          description: ''
    delete:
      operationId: amenities_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities type.
        required: true
      tags:
      - amenities-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/amenities/{id}/:
    get:
      operationId: amenities_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities.
        required: true
      tags:
      - amenities
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenities'
          description: ''
    put:
      operationId: amenities_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities.
        required: true
      tags:
      - amenities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amenities'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Amenities'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Amenities'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenities'
          description: ''
    patch:
      operationId: amenities_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities.
        required: true
      tags:
      - amenities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAmenities'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAmenities'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAmenities'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenities'
          description: ''
    delete:
      operationId: amenities_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this amenities.
        required: true
      tags:
      - amenities
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/announcements/:
    get:
      operationId: announcements_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - announcements
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnouncementList'
          description: ''
    post:
      operationId: announcements_create
      tags:
      - announcements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
  /api/announcements/{id}/:
    get:
      operationId: announcements_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - announcements
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    put:
      operationId: announcements_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - announcements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    patch:
      operationId: announcements_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - announcements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    delete:
      operationId: announcements_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - announcements
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/annual-leave-quotas/:
    get:
      operationId: annual_leave_quotas_list
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: leave_type
        required: false
        in: query
        description: leave_type
        schema:
          type: string
          enum:
          - Casual
          - Sick
          - Earned
          - Maternity
          - Paternity
          - Compensatory
          - Special
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - annual-leave-quotas
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnualLeaveQuotaList'
          description: ''
    post:
      operationId: annual_leave_quotas_create
      tags:
      - annual-leave-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualLeaveQuota'
          description: ''
  /api/annual-leave-quotas/{id}/:
    get:
      operationId: annual_leave_quotas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annual leave quota for
          department.
        required: true
      tags:
      - annual-leave-quotas
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualLeaveQuota'
          description: ''
    put:
      operationId: annual_leave_quotas_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annual leave quota for
          department.
        required: true
      tags:
      - annual-leave-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnualLeaveQuota'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualLeaveQuota'
          description: ''
    patch:
      operationId: annual_leave_quotas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annual leave quota for
          department.
        required: true
      tags:
      - annual-leave-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnualLeaveQuota'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnualLeaveQuota'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnualLeaveQuota'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualLeaveQuota'
          description: ''
    delete:
      operationId: annual_leave_quotas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annual leave quota for
          department.
        required: true
      tags:
      - annual-leave-quotas
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/answers/:
    get:
      operationId: answers_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: exam_answer
        required: false
        in: query
        description: exam_answer
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: option
        required: false
        in: query
        description: option
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: question
        required: false
        in: query
        description: question
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnswerList'
          description: ''
    post:
      operationId: answers_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/answers/{id}/:
    get:
      operationId: answers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: answers_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: answers_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: answers_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/attendance/:
    get:
      operationId: attendance_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: attendance
        required: false
        in: query
        description: attendance
        schema:
          type: string
      - name: attendance_date
        required: false
        in: query
        description: attendance_date
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: period
        required: false
        in: query
        description: period
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: attendance_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/attendance-absents/report/:
    get:
      operationId: attendance_absents_report_retrieve
      tags:
      - attendance-absents
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/attendance-dashboard/{id}/user-dashboard/:
    get:
      operationId: attendance_dashboard_user_dashboard_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - attendance-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/attendance-dashboard/dashboard/:
    get:
      operationId: attendance_dashboard_dashboard_retrieve
      tags:
      - attendance-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/attendance/{id}/:
    get:
      operationId: attendance_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: attendance_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: attendance_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: attendance_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/attendance/attendance-report-section/:
    get:
      operationId: attendance_attendance_report_section_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/attendance/attendance-report-student/:
    get:
      operationId: attendance_attendance_report_student_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/availability/available-periods/:
    get:
      operationId: availability_available_periods_retrieve
      tags:
      - availability
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/availability/available-teachers/:
    get:
      operationId: availability_available_teachers_retrieve
      tags:
      - availability
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/biometric/:
    get:
      operationId: biometric_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - biometric
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserBiometricDataList'
          description: ''
    post:
      operationId: biometric_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
  /api/biometric/{id}/:
    get:
      operationId: biometric_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user biometric data.
        required: true
      tags:
      - biometric
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
    put:
      operationId: biometric_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user biometric data.
        required: true
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
    patch:
      operationId: biometric_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user biometric data.
        required: true
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
    delete:
      operationId: biometric_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user biometric data.
        required: true
      tags:
      - biometric
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/biometric/delete-biometric-data/:
    post:
      operationId: biometric_delete_biometric_data_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
  /api/biometric/update-biometric-data/:
    patch:
      operationId: biometric_update_biometric_data_partial_update
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserBiometricData'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
  /api/biometric/upload-biometric-data/:
    post:
      operationId: biometric_upload_biometric_data_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - biometric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserBiometricData'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBiometricData'
          description: ''
  /api/branches/:
    get:
      operationId: branches_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_main_branch
        required: false
        in: query
        description: is_main_branch
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - branches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: branches_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/branches/{id}/:
    get:
      operationId: branches_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/bulk-attendance/bulk-create/:
    post:
      operationId: bulk_attendance_bulk_create_create
      tags:
      - bulk-attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkAttendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAttendance'
          description: ''
  /api/chat/:
    get:
      operationId: chat_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMessageList'
          description: ''
    post:
      operationId: chat_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessage'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
  /api/chat/{id}/:
    get:
      operationId: chat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat message.
        required: true
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
    put:
      operationId: chat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessage'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
    patch:
      operationId: chat_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatMessage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
    delete:
      operationId: chat_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat message.
        required: true
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/chat/all-received-chats/:
    get:
      operationId: chat_all_received_chats_retrieve
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
  /api/chat/chat_with/:
    get:
      operationId: chat_chat_with_retrieve
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
  /api/chat/is_user_online/{user_id}/:
    get:
      operationId: chat_is_user_online_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - chat
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/chat/mark_as_read/:
    post:
      operationId: chat_mark_as_read_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessage'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
  /api/departments/:
    get:
      operationId: departments_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: department_type
        required: false
        in: query
        description: department_type
        schema:
          type: string
          enum:
          - Teaching
          - Non-Teaching
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__endswith
        required: false
        in: query
        description: name__endswith
        schema:
          type: string
      - name: name__gt
        required: false
        in: query
        description: name__gt
        schema:
          type: string
      - name: name__gte
        required: false
        in: query
        description: name__gte
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: name__iendswith
        required: false
        in: query
        description: name__iendswith
        schema:
          type: string
      - name: name__iexact
        required: false
        in: query
        description: name__iexact
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: name__iregex
        required: false
        in: query
        description: name__iregex
        schema:
          type: string
      - name: name__isnull
        required: false
        in: query
        description: name__isnull
        schema:
          type: string
      - name: name__istartswith
        required: false
        in: query
        description: name__istartswith
        schema:
          type: string
      - name: name__lt
        required: false
        in: query
        description: name__lt
        schema:
          type: string
      - name: name__lte
        required: false
        in: query
        description: name__lte
        schema:
          type: string
      - name: name__range
        required: false
        in: query
        description: name__range
        schema:
          type: string
      - name: name__regex
        required: false
        in: query
        description: name__regex
        schema:
          type: string
      - name: name__startswith
        required: false
        in: query
        description: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - departments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentList'
          description: ''
    post:
      operationId: departments_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/departments/{id}/:
    get:
      operationId: departments_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: departments_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: departments_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: departments_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/departments/{id}/add-teachers/:
    post:
      operationId: departments_add_teachers_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffListID'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffListID'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffListID'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffListID'
          description: ''
  /api/designations/:
    get:
      operationId: designations_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - designations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDesignationList'
          description: ''
    post:
      operationId: designations_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - designations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Designation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Designation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Designation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
  /api/designations/{id}/:
    get:
      operationId: designations_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - designations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    put:
      operationId: designations_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - designations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Designation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Designation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Designation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    patch:
      operationId: designations_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - designations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    delete:
      operationId: designations_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - designations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/device-readings/:
    get:
      operationId: device_readings_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceReadingList'
          description: ''
    post:
      operationId: device_readings_create
      tags:
      - device-readings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceReading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceReading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceReading'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceReading'
          description: ''
  /api/device-readings/{id}/:
    get:
      operationId: device_readings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceReading'
          description: ''
    put:
      operationId: device_readings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - device-readings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceReading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceReading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceReading'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceReading'
          description: ''
    patch:
      operationId: device_readings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - device-readings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceReading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceReading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceReading'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceReading'
          description: ''
    delete:
      operationId: device_readings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/device-readings/live-device-readings/:
    get:
      operationId: device_readings_live_device_readings_retrieve
      tags:
      - device-readings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceReading'
          description: ''
  /api/device-registry/:
    get:
      operationId: device_registry_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device-registry
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceRegistryList'
          description: ''
    post:
      operationId: device_registry_create
      tags:
      - device-registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
          description: ''
  /api/device-registry/{id}/:
    get:
      operationId: device_registry_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device registry.
        required: true
      tags:
      - device-registry
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
          description: ''
    put:
      operationId: device_registry_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device registry.
        required: true
      tags:
      - device-registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
          description: ''
    patch:
      operationId: device_registry_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device registry.
        required: true
      tags:
      - device-registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceRegistry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceRegistry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceRegistry'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
          description: ''
    delete:
      operationId: device_registry_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device registry.
        required: true
      tags:
      - device-registry
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/device-thresholds/:
    get:
      operationId: device_thresholds_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device-thresholds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceThresholdList'
          description: ''
    post:
      operationId: device_thresholds_create
      tags:
      - device-thresholds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
  /api/device-thresholds/{id}/:
    get:
      operationId: device_thresholds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device threshold.
        required: true
      tags:
      - device-thresholds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
    put:
      operationId: device_thresholds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device threshold.
        required: true
      tags:
      - device-thresholds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
    patch:
      operationId: device_thresholds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device threshold.
        required: true
      tags:
      - device-thresholds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceThreshold'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceThreshold'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceThreshold'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
    delete:
      operationId: device_thresholds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device threshold.
        required: true
      tags:
      - device-thresholds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/device-thresholds/bulk-create/:
    post:
      operationId: device_thresholds_bulk_create_create
      tags:
      - device-thresholds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceThreshold'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
  /api/device-thresholds/check-alerts/:
    get:
      operationId: device_thresholds_check_alerts_retrieve
      tags:
      - device-thresholds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThreshold'
          description: ''
  /api/devices/:
    get:
      operationId: devices_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - devices
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceList'
          description: ''
    post:
      operationId: devices_create
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/devices/{id}/:
    get:
      operationId: devices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    put:
      operationId: devices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    patch:
      operationId: devices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    delete:
      operationId: devices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/devices/all-devices/:
    get:
      operationId: devices_all_devices_retrieve
      tags:
      - devices
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/documents/:
    get:
      operationId: documents_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: document
        required: false
        in: query
        description: document
        schema:
          type: string
      - name: document_name
        required: false
        in: query
        description: document_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documents_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/{id}/:
    get:
      operationId: documents_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documents_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: documents_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: documents_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/domains/:
    get:
      operationId: domains_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - domains
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDomainList'
          description: ''
  /api/domains/{id}/:
    get:
      operationId: domains_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain.
        required: true
      tags:
      - domains
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
  /api/ems-rooms/:
    get:
      operationId: ems_rooms_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - ems-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomList'
          description: ''
    post:
      operationId: ems_rooms_create
      tags:
      - ems-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/ems-rooms/{id}/:
    get:
      operationId: ems_rooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - ems-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: ems_rooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - ems-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: ems_rooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - ems-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: ems_rooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - ems-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/ems-rooms/get-room-data/:
    get:
      operationId: ems_rooms_get_room_data_retrieve
      tags:
      - ems-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/ems-schedules/:
    get:
      operationId: ems_schedules_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - ems-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleList'
          description: ''
    post:
      operationId: ems_schedules_create
      tags:
      - ems-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/ems-schedules/{id}/:
    get:
      operationId: ems_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - ems-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: ems_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - ems-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: ems_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - ems-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: ems_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - ems-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/ems-schedules/{id}/toggle/:
    patch:
      operationId: ems_schedules_toggle_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - ems-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/ems-schedules/control-now/:
    post:
      operationId: ems_schedules_control_now_create
      tags:
      - ems-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/events/:
    get:
      operationId: events_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: applies_to
        required: false
        in: query
        description: applies_to
        schema:
          type: string
      - name: branches
        required: false
        in: query
        description: branches
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: departments
        required: false
        in: query
        description: departments
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__contained_by
        required: false
        in: query
        description: end_date__contained_by
        schema:
          type: string
      - name: end_date__contains
        required: false
        in: query
        description: end_date__contains
        schema:
          type: string
      - name: end_date__date
        required: false
        in: query
        description: end_date__date
        schema:
          type: string
      - name: end_date__date__contained_by
        required: false
        in: query
        description: end_date__date__contained_by
        schema:
          type: string
      - name: end_date__date__contains
        required: false
        in: query
        description: end_date__date__contains
        schema:
          type: string
      - name: end_date__date__day
        required: false
        in: query
        description: end_date__date__day
        schema:
          type: string
      - name: end_date__date__day__contained_by
        required: false
        in: query
        description: end_date__date__day__contained_by
        schema:
          type: string
      - name: end_date__date__day__contains
        required: false
        in: query
        description: end_date__date__day__contains
        schema:
          type: string
      - name: end_date__date__day__endswith
        required: false
        in: query
        description: end_date__date__day__endswith
        schema:
          type: string
      - name: end_date__date__day__gt
        required: false
        in: query
        description: end_date__date__day__gt
        schema:
          type: string
      - name: end_date__date__day__gte
        required: false
        in: query
        description: end_date__date__day__gte
        schema:
          type: string
      - name: end_date__date__day__icontains
        required: false
        in: query
        description: end_date__date__day__icontains
        schema:
          type: string
      - name: end_date__date__day__iendswith
        required: false
        in: query
        description: end_date__date__day__iendswith
        schema:
          type: string
      - name: end_date__date__day__iexact
        required: false
        in: query
        description: end_date__date__day__iexact
        schema:
          type: string
      - name: end_date__date__day__in
        required: false
        in: query
        description: end_date__date__day__in
        schema:
          type: string
      - name: end_date__date__day__iregex
        required: false
        in: query
        description: end_date__date__day__iregex
        schema:
          type: string
      - name: end_date__date__day__isnull
        required: false
        in: query
        description: end_date__date__day__isnull
        schema:
          type: string
      - name: end_date__date__day__istartswith
        required: false
        in: query
        description: end_date__date__day__istartswith
        schema:
          type: string
      - name: end_date__date__day__lt
        required: false
        in: query
        description: end_date__date__day__lt
        schema:
          type: string
      - name: end_date__date__day__lte
        required: false
        in: query
        description: end_date__date__day__lte
        schema:
          type: string
      - name: end_date__date__day__range
        required: false
        in: query
        description: end_date__date__day__range
        schema:
          type: string
      - name: end_date__date__day__regex
        required: false
        in: query
        description: end_date__date__day__regex
        schema:
          type: string
      - name: end_date__date__day__startswith
        required: false
        in: query
        description: end_date__date__day__startswith
        schema:
          type: string
      - name: end_date__date__endswith
        required: false
        in: query
        description: end_date__date__endswith
        schema:
          type: string
      - name: end_date__date__gt
        required: false
        in: query
        description: end_date__date__gt
        schema:
          type: string
      - name: end_date__date__gte
        required: false
        in: query
        description: end_date__date__gte
        schema:
          type: string
      - name: end_date__date__icontains
        required: false
        in: query
        description: end_date__date__icontains
        schema:
          type: string
      - name: end_date__date__iendswith
        required: false
        in: query
        description: end_date__date__iendswith
        schema:
          type: string
      - name: end_date__date__iexact
        required: false
        in: query
        description: end_date__date__iexact
        schema:
          type: string
      - name: end_date__date__in
        required: false
        in: query
        description: end_date__date__in
        schema:
          type: string
      - name: end_date__date__iregex
        required: false
        in: query
        description: end_date__date__iregex
        schema:
          type: string
      - name: end_date__date__isnull
        required: false
        in: query
        description: end_date__date__isnull
        schema:
          type: string
      - name: end_date__date__iso_week_day
        required: false
        in: query
        description: end_date__date__iso_week_day
        schema:
          type: string
      - name: end_date__date__iso_week_day__contained_by
        required: false
        in: query
        description: end_date__date__iso_week_day__contained_by
        schema:
          type: string
      - name: end_date__date__iso_week_day__contains
        required: false
        in: query
        description: end_date__date__iso_week_day__contains
        schema:
          type: string
      - name: end_date__date__iso_week_day__endswith
        required: false
        in: query
        description: end_date__date__iso_week_day__endswith
        schema:
          type: string
      - name: end_date__date__iso_week_day__gt
        required: false
        in: query
        description: end_date__date__iso_week_day__gt
        schema:
          type: string
      - name: end_date__date__iso_week_day__gte
        required: false
        in: query
        description: end_date__date__iso_week_day__gte
        schema:
          type: string
      - name: end_date__date__iso_week_day__icontains
        required: false
        in: query
        description: end_date__date__iso_week_day__icontains
        schema:
          type: string
      - name: end_date__date__iso_week_day__iendswith
        required: false
        in: query
        description: end_date__date__iso_week_day__iendswith
        schema:
          type: string
      - name: end_date__date__iso_week_day__iexact
        required: false
        in: query
        description: end_date__date__iso_week_day__iexact
        schema:
          type: string
      - name: end_date__date__iso_week_day__in
        required: false
        in: query
        description: end_date__date__iso_week_day__in
        schema:
          type: string
      - name: end_date__date__iso_week_day__iregex
        required: false
        in: query
        description: end_date__date__iso_week_day__iregex
        schema:
          type: string
      - name: end_date__date__iso_week_day__isnull
        required: false
        in: query
        description: end_date__date__iso_week_day__isnull
        schema:
          type: string
      - name: end_date__date__iso_week_day__istartswith
        required: false
        in: query
        description: end_date__date__iso_week_day__istartswith
        schema:
          type: string
      - name: end_date__date__iso_week_day__lt
        required: false
        in: query
        description: end_date__date__iso_week_day__lt
        schema:
          type: string
      - name: end_date__date__iso_week_day__lte
        required: false
        in: query
        description: end_date__date__iso_week_day__lte
        schema:
          type: string
      - name: end_date__date__iso_week_day__range
        required: false
        in: query
        description: end_date__date__iso_week_day__range
        schema:
          type: string
      - name: end_date__date__iso_week_day__regex
        required: false
        in: query
        description: end_date__date__iso_week_day__regex
        schema:
          type: string
      - name: end_date__date__iso_week_day__startswith
        required: false
        in: query
        description: end_date__date__iso_week_day__startswith
        schema:
          type: string
      - name: end_date__date__iso_year
        required: false
        in: query
        description: end_date__date__iso_year
        schema:
          type: string
      - name: end_date__date__iso_year__contained_by
        required: false
        in: query
        description: end_date__date__iso_year__contained_by
        schema:
          type: string
      - name: end_date__date__iso_year__contains
        required: false
        in: query
        description: end_date__date__iso_year__contains
        schema:
          type: string
      - name: end_date__date__iso_year__endswith
        required: false
        in: query
        description: end_date__date__iso_year__endswith
        schema:
          type: string
      - name: end_date__date__iso_year__gt
        required: false
        in: query
        description: end_date__date__iso_year__gt
        schema:
          type: string
      - name: end_date__date__iso_year__gte
        required: false
        in: query
        description: end_date__date__iso_year__gte
        schema:
          type: string
      - name: end_date__date__iso_year__icontains
        required: false
        in: query
        description: end_date__date__iso_year__icontains
        schema:
          type: string
      - name: end_date__date__iso_year__iendswith
        required: false
        in: query
        description: end_date__date__iso_year__iendswith
        schema:
          type: string
      - name: end_date__date__iso_year__iexact
        required: false
        in: query
        description: end_date__date__iso_year__iexact
        schema:
          type: string
      - name: end_date__date__iso_year__in
        required: false
        in: query
        description: end_date__date__iso_year__in
        schema:
          type: string
      - name: end_date__date__iso_year__iregex
        required: false
        in: query
        description: end_date__date__iso_year__iregex
        schema:
          type: string
      - name: end_date__date__iso_year__isnull
        required: false
        in: query
        description: end_date__date__iso_year__isnull
        schema:
          type: string
      - name: end_date__date__iso_year__istartswith
        required: false
        in: query
        description: end_date__date__iso_year__istartswith
        schema:
          type: string
      - name: end_date__date__iso_year__lt
        required: false
        in: query
        description: end_date__date__iso_year__lt
        schema:
          type: string
      - name: end_date__date__iso_year__lte
        required: false
        in: query
        description: end_date__date__iso_year__lte
        schema:
          type: string
      - name: end_date__date__iso_year__range
        required: false
        in: query
        description: end_date__date__iso_year__range
        schema:
          type: string
      - name: end_date__date__iso_year__regex
        required: false
        in: query
        description: end_date__date__iso_year__regex
        schema:
          type: string
      - name: end_date__date__iso_year__startswith
        required: false
        in: query
        description: end_date__date__iso_year__startswith
        schema:
          type: string
      - name: end_date__date__istartswith
        required: false
        in: query
        description: end_date__date__istartswith
        schema:
          type: string
      - name: end_date__date__lt
        required: false
        in: query
        description: end_date__date__lt
        schema:
          type: string
      - name: end_date__date__lte
        required: false
        in: query
        description: end_date__date__lte
        schema:
          type: string
      - name: end_date__date__month
        required: false
        in: query
        description: end_date__date__month
        schema:
          type: string
      - name: end_date__date__month__contained_by
        required: false
        in: query
        description: end_date__date__month__contained_by
        schema:
          type: string
      - name: end_date__date__month__contains
        required: false
        in: query
        description: end_date__date__month__contains
        schema:
          type: string
      - name: end_date__date__month__endswith
        required: false
        in: query
        description: end_date__date__month__endswith
        schema:
          type: string
      - name: end_date__date__month__gt
        required: false
        in: query
        description: end_date__date__month__gt
        schema:
          type: string
      - name: end_date__date__month__gte
        required: false
        in: query
        description: end_date__date__month__gte
        schema:
          type: string
      - name: end_date__date__month__icontains
        required: false
        in: query
        description: end_date__date__month__icontains
        schema:
          type: string
      - name: end_date__date__month__iendswith
        required: false
        in: query
        description: end_date__date__month__iendswith
        schema:
          type: string
      - name: end_date__date__month__iexact
        required: false
        in: query
        description: end_date__date__month__iexact
        schema:
          type: string
      - name: end_date__date__month__in
        required: false
        in: query
        description: end_date__date__month__in
        schema:
          type: string
      - name: end_date__date__month__iregex
        required: false
        in: query
        description: end_date__date__month__iregex
        schema:
          type: string
      - name: end_date__date__month__isnull
        required: false
        in: query
        description: end_date__date__month__isnull
        schema:
          type: string
      - name: end_date__date__month__istartswith
        required: false
        in: query
        description: end_date__date__month__istartswith
        schema:
          type: string
      - name: end_date__date__month__lt
        required: false
        in: query
        description: end_date__date__month__lt
        schema:
          type: string
      - name: end_date__date__month__lte
        required: false
        in: query
        description: end_date__date__month__lte
        schema:
          type: string
      - name: end_date__date__month__range
        required: false
        in: query
        description: end_date__date__month__range
        schema:
          type: string
      - name: end_date__date__month__regex
        required: false
        in: query
        description: end_date__date__month__regex
        schema:
          type: string
      - name: end_date__date__month__startswith
        required: false
        in: query
        description: end_date__date__month__startswith
        schema:
          type: string
      - name: end_date__date__quarter
        required: false
        in: query
        description: end_date__date__quarter
        schema:
          type: string
      - name: end_date__date__quarter__contained_by
        required: false
        in: query
        description: end_date__date__quarter__contained_by
        schema:
          type: string
      - name: end_date__date__quarter__contains
        required: false
        in: query
        description: end_date__date__quarter__contains
        schema:
          type: string
      - name: end_date__date__quarter__endswith
        required: false
        in: query
        description: end_date__date__quarter__endswith
        schema:
          type: string
      - name: end_date__date__quarter__gt
        required: false
        in: query
        description: end_date__date__quarter__gt
        schema:
          type: string
      - name: end_date__date__quarter__gte
        required: false
        in: query
        description: end_date__date__quarter__gte
        schema:
          type: string
      - name: end_date__date__quarter__icontains
        required: false
        in: query
        description: end_date__date__quarter__icontains
        schema:
          type: string
      - name: end_date__date__quarter__iendswith
        required: false
        in: query
        description: end_date__date__quarter__iendswith
        schema:
          type: string
      - name: end_date__date__quarter__iexact
        required: false
        in: query
        description: end_date__date__quarter__iexact
        schema:
          type: string
      - name: end_date__date__quarter__in
        required: false
        in: query
        description: end_date__date__quarter__in
        schema:
          type: string
      - name: end_date__date__quarter__iregex
        required: false
        in: query
        description: end_date__date__quarter__iregex
        schema:
          type: string
      - name: end_date__date__quarter__isnull
        required: false
        in: query
        description: end_date__date__quarter__isnull
        schema:
          type: string
      - name: end_date__date__quarter__istartswith
        required: false
        in: query
        description: end_date__date__quarter__istartswith
        schema:
          type: string
      - name: end_date__date__quarter__lt
        required: false
        in: query
        description: end_date__date__quarter__lt
        schema:
          type: string
      - name: end_date__date__quarter__lte
        required: false
        in: query
        description: end_date__date__quarter__lte
        schema:
          type: string
      - name: end_date__date__quarter__range
        required: false
        in: query
        description: end_date__date__quarter__range
        schema:
          type: string
      - name: end_date__date__quarter__regex
        required: false
        in: query
        description: end_date__date__quarter__regex
        schema:
          type: string
      - name: end_date__date__quarter__startswith
        required: false
        in: query
        description: end_date__date__quarter__startswith
        schema:
          type: string
      - name: end_date__date__range
        required: false
        in: query
        description: end_date__date__range
        schema:
          type: string
      - name: end_date__date__regex
        required: false
        in: query
        description: end_date__date__regex
        schema:
          type: string
      - name: end_date__date__startswith
        required: false
        in: query
        description: end_date__date__startswith
        schema:
          type: string
      - name: end_date__date__week
        required: false
        in: query
        description: end_date__date__week
        schema:
          type: string
      - name: end_date__date__week__contained_by
        required: false
        in: query
        description: end_date__date__week__contained_by
        schema:
          type: string
      - name: end_date__date__week__contains
        required: false
        in: query
        description: end_date__date__week__contains
        schema:
          type: string
      - name: end_date__date__week__endswith
        required: false
        in: query
        description: end_date__date__week__endswith
        schema:
          type: string
      - name: end_date__date__week__gt
        required: false
        in: query
        description: end_date__date__week__gt
        schema:
          type: string
      - name: end_date__date__week__gte
        required: false
        in: query
        description: end_date__date__week__gte
        schema:
          type: string
      - name: end_date__date__week__icontains
        required: false
        in: query
        description: end_date__date__week__icontains
        schema:
          type: string
      - name: end_date__date__week__iendswith
        required: false
        in: query
        description: end_date__date__week__iendswith
        schema:
          type: string
      - name: end_date__date__week__iexact
        required: false
        in: query
        description: end_date__date__week__iexact
        schema:
          type: string
      - name: end_date__date__week__in
        required: false
        in: query
        description: end_date__date__week__in
        schema:
          type: string
      - name: end_date__date__week__iregex
        required: false
        in: query
        description: end_date__date__week__iregex
        schema:
          type: string
      - name: end_date__date__week__isnull
        required: false
        in: query
        description: end_date__date__week__isnull
        schema:
          type: string
      - name: end_date__date__week__istartswith
        required: false
        in: query
        description: end_date__date__week__istartswith
        schema:
          type: string
      - name: end_date__date__week__lt
        required: false
        in: query
        description: end_date__date__week__lt
        schema:
          type: string
      - name: end_date__date__week__lte
        required: false
        in: query
        description: end_date__date__week__lte
        schema:
          type: string
      - name: end_date__date__week__range
        required: false
        in: query
        description: end_date__date__week__range
        schema:
          type: string
      - name: end_date__date__week__regex
        required: false
        in: query
        description: end_date__date__week__regex
        schema:
          type: string
      - name: end_date__date__week__startswith
        required: false
        in: query
        description: end_date__date__week__startswith
        schema:
          type: string
      - name: end_date__date__week_day
        required: false
        in: query
        description: end_date__date__week_day
        schema:
          type: string
      - name: end_date__date__week_day__contained_by
        required: false
        in: query
        description: end_date__date__week_day__contained_by
        schema:
          type: string
      - name: end_date__date__week_day__contains
        required: false
        in: query
        description: end_date__date__week_day__contains
        schema:
          type: string
      - name: end_date__date__week_day__endswith
        required: false
        in: query
        description: end_date__date__week_day__endswith
        schema:
          type: string
      - name: end_date__date__week_day__gt
        required: false
        in: query
        description: end_date__date__week_day__gt
        schema:
          type: string
      - name: end_date__date__week_day__gte
        required: false
        in: query
        description: end_date__date__week_day__gte
        schema:
          type: string
      - name: end_date__date__week_day__icontains
        required: false
        in: query
        description: end_date__date__week_day__icontains
        schema:
          type: string
      - name: end_date__date__week_day__iendswith
        required: false
        in: query
        description: end_date__date__week_day__iendswith
        schema:
          type: string
      - name: end_date__date__week_day__iexact
        required: false
        in: query
        description: end_date__date__week_day__iexact
        schema:
          type: string
      - name: end_date__date__week_day__in
        required: false
        in: query
        description: end_date__date__week_day__in
        schema:
          type: string
      - name: end_date__date__week_day__iregex
        required: false
        in: query
        description: end_date__date__week_day__iregex
        schema:
          type: string
      - name: end_date__date__week_day__isnull
        required: false
        in: query
        description: end_date__date__week_day__isnull
        schema:
          type: string
      - name: end_date__date__week_day__istartswith
        required: false
        in: query
        description: end_date__date__week_day__istartswith
        schema:
          type: string
      - name: end_date__date__week_day__lt
        required: false
        in: query
        description: end_date__date__week_day__lt
        schema:
          type: string
      - name: end_date__date__week_day__lte
        required: false
        in: query
        description: end_date__date__week_day__lte
        schema:
          type: string
      - name: end_date__date__week_day__range
        required: false
        in: query
        description: end_date__date__week_day__range
        schema:
          type: string
      - name: end_date__date__week_day__regex
        required: false
        in: query
        description: end_date__date__week_day__regex
        schema:
          type: string
      - name: end_date__date__week_day__startswith
        required: false
        in: query
        description: end_date__date__week_day__startswith
        schema:
          type: string
      - name: end_date__date__year
        required: false
        in: query
        description: end_date__date__year
        schema:
          type: string
      - name: end_date__date__year__contained_by
        required: false
        in: query
        description: end_date__date__year__contained_by
        schema:
          type: string
      - name: end_date__date__year__contains
        required: false
        in: query
        description: end_date__date__year__contains
        schema:
          type: string
      - name: end_date__date__year__endswith
        required: false
        in: query
        description: end_date__date__year__endswith
        schema:
          type: string
      - name: end_date__date__year__gt
        required: false
        in: query
        description: end_date__date__year__gt
        schema:
          type: string
      - name: end_date__date__year__gte
        required: false
        in: query
        description: end_date__date__year__gte
        schema:
          type: string
      - name: end_date__date__year__icontains
        required: false
        in: query
        description: end_date__date__year__icontains
        schema:
          type: string
      - name: end_date__date__year__iendswith
        required: false
        in: query
        description: end_date__date__year__iendswith
        schema:
          type: string
      - name: end_date__date__year__iexact
        required: false
        in: query
        description: end_date__date__year__iexact
        schema:
          type: string
      - name: end_date__date__year__in
        required: false
        in: query
        description: end_date__date__year__in
        schema:
          type: string
      - name: end_date__date__year__iregex
        required: false
        in: query
        description: end_date__date__year__iregex
        schema:
          type: string
      - name: end_date__date__year__isnull
        required: false
        in: query
        description: end_date__date__year__isnull
        schema:
          type: string
      - name: end_date__date__year__istartswith
        required: false
        in: query
        description: end_date__date__year__istartswith
        schema:
          type: string
      - name: end_date__date__year__lt
        required: false
        in: query
        description: end_date__date__year__lt
        schema:
          type: string
      - name: end_date__date__year__lte
        required: false
        in: query
        description: end_date__date__year__lte
        schema:
          type: string
      - name: end_date__date__year__range
        required: false
        in: query
        description: end_date__date__year__range
        schema:
          type: string
      - name: end_date__date__year__regex
        required: false
        in: query
        description: end_date__date__year__regex
        schema:
          type: string
      - name: end_date__date__year__startswith
        required: false
        in: query
        description: end_date__date__year__startswith
        schema:
          type: string
      - name: end_date__day
        required: false
        in: query
        description: end_date__day
        schema:
          type: string
      - name: end_date__day__contained_by
        required: false
        in: query
        description: end_date__day__contained_by
        schema:
          type: string
      - name: end_date__day__contains
        required: false
        in: query
        description: end_date__day__contains
        schema:
          type: string
      - name: end_date__day__endswith
        required: false
        in: query
        description: end_date__day__endswith
        schema:
          type: string
      - name: end_date__day__gt
        required: false
        in: query
        description: end_date__day__gt
        schema:
          type: string
      - name: end_date__day__gte
        required: false
        in: query
        description: end_date__day__gte
        schema:
          type: string
      - name: end_date__day__icontains
        required: false
        in: query
        description: end_date__day__icontains
        schema:
          type: string
      - name: end_date__day__iendswith
        required: false
        in: query
        description: end_date__day__iendswith
        schema:
          type: string
      - name: end_date__day__iexact
        required: false
        in: query
        description: end_date__day__iexact
        schema:
          type: string
      - name: end_date__day__in
        required: false
        in: query
        description: end_date__day__in
        schema:
          type: string
      - name: end_date__day__iregex
        required: false
        in: query
        description: end_date__day__iregex
        schema:
          type: string
      - name: end_date__day__isnull
        required: false
        in: query
        description: end_date__day__isnull
        schema:
          type: string
      - name: end_date__day__istartswith
        required: false
        in: query
        description: end_date__day__istartswith
        schema:
          type: string
      - name: end_date__day__lt
        required: false
        in: query
        description: end_date__day__lt
        schema:
          type: string
      - name: end_date__day__lte
        required: false
        in: query
        description: end_date__day__lte
        schema:
          type: string
      - name: end_date__day__range
        required: false
        in: query
        description: end_date__day__range
        schema:
          type: string
      - name: end_date__day__regex
        required: false
        in: query
        description: end_date__day__regex
        schema:
          type: string
      - name: end_date__day__startswith
        required: false
        in: query
        description: end_date__day__startswith
        schema:
          type: string
      - name: end_date__endswith
        required: false
        in: query
        description: end_date__endswith
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__gte
        required: false
        in: query
        description: end_date__gte
        schema:
          type: string
      - name: end_date__hour
        required: false
        in: query
        description: end_date__hour
        schema:
          type: string
      - name: end_date__hour__contained_by
        required: false
        in: query
        description: end_date__hour__contained_by
        schema:
          type: string
      - name: end_date__hour__contains
        required: false
        in: query
        description: end_date__hour__contains
        schema:
          type: string
      - name: end_date__hour__endswith
        required: false
        in: query
        description: end_date__hour__endswith
        schema:
          type: string
      - name: end_date__hour__gt
        required: false
        in: query
        description: end_date__hour__gt
        schema:
          type: string
      - name: end_date__hour__gte
        required: false
        in: query
        description: end_date__hour__gte
        schema:
          type: string
      - name: end_date__hour__icontains
        required: false
        in: query
        description: end_date__hour__icontains
        schema:
          type: string
      - name: end_date__hour__iendswith
        required: false
        in: query
        description: end_date__hour__iendswith
        schema:
          type: string
      - name: end_date__hour__iexact
        required: false
        in: query
        description: end_date__hour__iexact
        schema:
          type: string
      - name: end_date__hour__in
        required: false
        in: query
        description: end_date__hour__in
        schema:
          type: string
      - name: end_date__hour__iregex
        required: false
        in: query
        description: end_date__hour__iregex
        schema:
          type: string
      - name: end_date__hour__isnull
        required: false
        in: query
        description: end_date__hour__isnull
        schema:
          type: string
      - name: end_date__hour__istartswith
        required: false
        in: query
        description: end_date__hour__istartswith
        schema:
          type: string
      - name: end_date__hour__lt
        required: false
        in: query
        description: end_date__hour__lt
        schema:
          type: string
      - name: end_date__hour__lte
        required: false
        in: query
        description: end_date__hour__lte
        schema:
          type: string
      - name: end_date__hour__range
        required: false
        in: query
        description: end_date__hour__range
        schema:
          type: string
      - name: end_date__hour__regex
        required: false
        in: query
        description: end_date__hour__regex
        schema:
          type: string
      - name: end_date__hour__startswith
        required: false
        in: query
        description: end_date__hour__startswith
        schema:
          type: string
      - name: end_date__icontains
        required: false
        in: query
        description: end_date__icontains
        schema:
          type: string
      - name: end_date__iendswith
        required: false
        in: query
        description: end_date__iendswith
        schema:
          type: string
      - name: end_date__iexact
        required: false
        in: query
        description: end_date__iexact
        schema:
          type: string
      - name: end_date__in
        required: false
        in: query
        description: end_date__in
        schema:
          type: string
      - name: end_date__iregex
        required: false
        in: query
        description: end_date__iregex
        schema:
          type: string
      - name: end_date__isnull
        required: false
        in: query
        description: end_date__isnull
        schema:
          type: string
      - name: end_date__iso_week_day
        required: false
        in: query
        description: end_date__iso_week_day
        schema:
          type: string
      - name: end_date__iso_week_day__contained_by
        required: false
        in: query
        description: end_date__iso_week_day__contained_by
        schema:
          type: string
      - name: end_date__iso_week_day__contains
        required: false
        in: query
        description: end_date__iso_week_day__contains
        schema:
          type: string
      - name: end_date__iso_week_day__endswith
        required: false
        in: query
        description: end_date__iso_week_day__endswith
        schema:
          type: string
      - name: end_date__iso_week_day__gt
        required: false
        in: query
        description: end_date__iso_week_day__gt
        schema:
          type: string
      - name: end_date__iso_week_day__gte
        required: false
        in: query
        description: end_date__iso_week_day__gte
        schema:
          type: string
      - name: end_date__iso_week_day__icontains
        required: false
        in: query
        description: end_date__iso_week_day__icontains
        schema:
          type: string
      - name: end_date__iso_week_day__iendswith
        required: false
        in: query
        description: end_date__iso_week_day__iendswith
        schema:
          type: string
      - name: end_date__iso_week_day__iexact
        required: false
        in: query
        description: end_date__iso_week_day__iexact
        schema:
          type: string
      - name: end_date__iso_week_day__in
        required: false
        in: query
        description: end_date__iso_week_day__in
        schema:
          type: string
      - name: end_date__iso_week_day__iregex
        required: false
        in: query
        description: end_date__iso_week_day__iregex
        schema:
          type: string
      - name: end_date__iso_week_day__isnull
        required: false
        in: query
        description: end_date__iso_week_day__isnull
        schema:
          type: string
      - name: end_date__iso_week_day__istartswith
        required: false
        in: query
        description: end_date__iso_week_day__istartswith
        schema:
          type: string
      - name: end_date__iso_week_day__lt
        required: false
        in: query
        description: end_date__iso_week_day__lt
        schema:
          type: string
      - name: end_date__iso_week_day__lte
        required: false
        in: query
        description: end_date__iso_week_day__lte
        schema:
          type: string
      - name: end_date__iso_week_day__range
        required: false
        in: query
        description: end_date__iso_week_day__range
        schema:
          type: string
      - name: end_date__iso_week_day__regex
        required: false
        in: query
        description: end_date__iso_week_day__regex
        schema:
          type: string
      - name: end_date__iso_week_day__startswith
        required: false
        in: query
        description: end_date__iso_week_day__startswith
        schema:
          type: string
      - name: end_date__iso_year
        required: false
        in: query
        description: end_date__iso_year
        schema:
          type: string
      - name: end_date__iso_year__contained_by
        required: false
        in: query
        description: end_date__iso_year__contained_by
        schema:
          type: string
      - name: end_date__iso_year__contains
        required: false
        in: query
        description: end_date__iso_year__contains
        schema:
          type: string
      - name: end_date__iso_year__endswith
        required: false
        in: query
        description: end_date__iso_year__endswith
        schema:
          type: string
      - name: end_date__iso_year__gt
        required: false
        in: query
        description: end_date__iso_year__gt
        schema:
          type: string
      - name: end_date__iso_year__gte
        required: false
        in: query
        description: end_date__iso_year__gte
        schema:
          type: string
      - name: end_date__iso_year__icontains
        required: false
        in: query
        description: end_date__iso_year__icontains
        schema:
          type: string
      - name: end_date__iso_year__iendswith
        required: false
        in: query
        description: end_date__iso_year__iendswith
        schema:
          type: string
      - name: end_date__iso_year__iexact
        required: false
        in: query
        description: end_date__iso_year__iexact
        schema:
          type: string
      - name: end_date__iso_year__in
        required: false
        in: query
        description: end_date__iso_year__in
        schema:
          type: string
      - name: end_date__iso_year__iregex
        required: false
        in: query
        description: end_date__iso_year__iregex
        schema:
          type: string
      - name: end_date__iso_year__isnull
        required: false
        in: query
        description: end_date__iso_year__isnull
        schema:
          type: string
      - name: end_date__iso_year__istartswith
        required: false
        in: query
        description: end_date__iso_year__istartswith
        schema:
          type: string
      - name: end_date__iso_year__lt
        required: false
        in: query
        description: end_date__iso_year__lt
        schema:
          type: string
      - name: end_date__iso_year__lte
        required: false
        in: query
        description: end_date__iso_year__lte
        schema:
          type: string
      - name: end_date__iso_year__range
        required: false
        in: query
        description: end_date__iso_year__range
        schema:
          type: string
      - name: end_date__iso_year__regex
        required: false
        in: query
        description: end_date__iso_year__regex
        schema:
          type: string
      - name: end_date__iso_year__startswith
        required: false
        in: query
        description: end_date__iso_year__startswith
        schema:
          type: string
      - name: end_date__istartswith
        required: false
        in: query
        description: end_date__istartswith
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: end_date__lte
        required: false
        in: query
        description: end_date__lte
        schema:
          type: string
      - name: end_date__minute
        required: false
        in: query
        description: end_date__minute
        schema:
          type: string
      - name: end_date__minute__contained_by
        required: false
        in: query
        description: end_date__minute__contained_by
        schema:
          type: string
      - name: end_date__minute__contains
        required: false
        in: query
        description: end_date__minute__contains
        schema:
          type: string
      - name: end_date__minute__endswith
        required: false
        in: query
        description: end_date__minute__endswith
        schema:
          type: string
      - name: end_date__minute__gt
        required: false
        in: query
        description: end_date__minute__gt
        schema:
          type: string
      - name: end_date__minute__gte
        required: false
        in: query
        description: end_date__minute__gte
        schema:
          type: string
      - name: end_date__minute__icontains
        required: false
        in: query
        description: end_date__minute__icontains
        schema:
          type: string
      - name: end_date__minute__iendswith
        required: false
        in: query
        description: end_date__minute__iendswith
        schema:
          type: string
      - name: end_date__minute__iexact
        required: false
        in: query
        description: end_date__minute__iexact
        schema:
          type: string
      - name: end_date__minute__in
        required: false
        in: query
        description: end_date__minute__in
        schema:
          type: string
      - name: end_date__minute__iregex
        required: false
        in: query
        description: end_date__minute__iregex
        schema:
          type: string
      - name: end_date__minute__isnull
        required: false
        in: query
        description: end_date__minute__isnull
        schema:
          type: string
      - name: end_date__minute__istartswith
        required: false
        in: query
        description: end_date__minute__istartswith
        schema:
          type: string
      - name: end_date__minute__lt
        required: false
        in: query
        description: end_date__minute__lt
        schema:
          type: string
      - name: end_date__minute__lte
        required: false
        in: query
        description: end_date__minute__lte
        schema:
          type: string
      - name: end_date__minute__range
        required: false
        in: query
        description: end_date__minute__range
        schema:
          type: string
      - name: end_date__minute__regex
        required: false
        in: query
        description: end_date__minute__regex
        schema:
          type: string
      - name: end_date__minute__startswith
        required: false
        in: query
        description: end_date__minute__startswith
        schema:
          type: string
      - name: end_date__month
        required: false
        in: query
        description: end_date__month
        schema:
          type: string
      - name: end_date__month__contained_by
        required: false
        in: query
        description: end_date__month__contained_by
        schema:
          type: string
      - name: end_date__month__contains
        required: false
        in: query
        description: end_date__month__contains
        schema:
          type: string
      - name: end_date__month__endswith
        required: false
        in: query
        description: end_date__month__endswith
        schema:
          type: string
      - name: end_date__month__gt
        required: false
        in: query
        description: end_date__month__gt
        schema:
          type: string
      - name: end_date__month__gte
        required: false
        in: query
        description: end_date__month__gte
        schema:
          type: string
      - name: end_date__month__icontains
        required: false
        in: query
        description: end_date__month__icontains
        schema:
          type: string
      - name: end_date__month__iendswith
        required: false
        in: query
        description: end_date__month__iendswith
        schema:
          type: string
      - name: end_date__month__iexact
        required: false
        in: query
        description: end_date__month__iexact
        schema:
          type: string
      - name: end_date__month__in
        required: false
        in: query
        description: end_date__month__in
        schema:
          type: string
      - name: end_date__month__iregex
        required: false
        in: query
        description: end_date__month__iregex
        schema:
          type: string
      - name: end_date__month__isnull
        required: false
        in: query
        description: end_date__month__isnull
        schema:
          type: string
      - name: end_date__month__istartswith
        required: false
        in: query
        description: end_date__month__istartswith
        schema:
          type: string
      - name: end_date__month__lt
        required: false
        in: query
        description: end_date__month__lt
        schema:
          type: string
      - name: end_date__month__lte
        required: false
        in: query
        description: end_date__month__lte
        schema:
          type: string
      - name: end_date__month__range
        required: false
        in: query
        description: end_date__month__range
        schema:
          type: string
      - name: end_date__month__regex
        required: false
        in: query
        description: end_date__month__regex
        schema:
          type: string
      - name: end_date__month__startswith
        required: false
        in: query
        description: end_date__month__startswith
        schema:
          type: string
      - name: end_date__quarter
        required: false
        in: query
        description: end_date__quarter
        schema:
          type: string
      - name: end_date__quarter__contained_by
        required: false
        in: query
        description: end_date__quarter__contained_by
        schema:
          type: string
      - name: end_date__quarter__contains
        required: false
        in: query
        description: end_date__quarter__contains
        schema:
          type: string
      - name: end_date__quarter__endswith
        required: false
        in: query
        description: end_date__quarter__endswith
        schema:
          type: string
      - name: end_date__quarter__gt
        required: false
        in: query
        description: end_date__quarter__gt
        schema:
          type: string
      - name: end_date__quarter__gte
        required: false
        in: query
        description: end_date__quarter__gte
        schema:
          type: string
      - name: end_date__quarter__icontains
        required: false
        in: query
        description: end_date__quarter__icontains
        schema:
          type: string
      - name: end_date__quarter__iendswith
        required: false
        in: query
        description: end_date__quarter__iendswith
        schema:
          type: string
      - name: end_date__quarter__iexact
        required: false
        in: query
        description: end_date__quarter__iexact
        schema:
          type: string
      - name: end_date__quarter__in
        required: false
        in: query
        description: end_date__quarter__in
        schema:
          type: string
      - name: end_date__quarter__iregex
        required: false
        in: query
        description: end_date__quarter__iregex
        schema:
          type: string
      - name: end_date__quarter__isnull
        required: false
        in: query
        description: end_date__quarter__isnull
        schema:
          type: string
      - name: end_date__quarter__istartswith
        required: false
        in: query
        description: end_date__quarter__istartswith
        schema:
          type: string
      - name: end_date__quarter__lt
        required: false
        in: query
        description: end_date__quarter__lt
        schema:
          type: string
      - name: end_date__quarter__lte
        required: false
        in: query
        description: end_date__quarter__lte
        schema:
          type: string
      - name: end_date__quarter__range
        required: false
        in: query
        description: end_date__quarter__range
        schema:
          type: string
      - name: end_date__quarter__regex
        required: false
        in: query
        description: end_date__quarter__regex
        schema:
          type: string
      - name: end_date__quarter__startswith
        required: false
        in: query
        description: end_date__quarter__startswith
        schema:
          type: string
      - name: end_date__range
        required: false
        in: query
        description: end_date__range
        schema:
          type: string
      - name: end_date__regex
        required: false
        in: query
        description: end_date__regex
        schema:
          type: string
      - name: end_date__second
        required: false
        in: query
        description: end_date__second
        schema:
          type: string
      - name: end_date__second__contained_by
        required: false
        in: query
        description: end_date__second__contained_by
        schema:
          type: string
      - name: end_date__second__contains
        required: false
        in: query
        description: end_date__second__contains
        schema:
          type: string
      - name: end_date__second__endswith
        required: false
        in: query
        description: end_date__second__endswith
        schema:
          type: string
      - name: end_date__second__gt
        required: false
        in: query
        description: end_date__second__gt
        schema:
          type: string
      - name: end_date__second__gte
        required: false
        in: query
        description: end_date__second__gte
        schema:
          type: string
      - name: end_date__second__icontains
        required: false
        in: query
        description: end_date__second__icontains
        schema:
          type: string
      - name: end_date__second__iendswith
        required: false
        in: query
        description: end_date__second__iendswith
        schema:
          type: string
      - name: end_date__second__iexact
        required: false
        in: query
        description: end_date__second__iexact
        schema:
          type: string
      - name: end_date__second__in
        required: false
        in: query
        description: end_date__second__in
        schema:
          type: string
      - name: end_date__second__iregex
        required: false
        in: query
        description: end_date__second__iregex
        schema:
          type: string
      - name: end_date__second__isnull
        required: false
        in: query
        description: end_date__second__isnull
        schema:
          type: string
      - name: end_date__second__istartswith
        required: false
        in: query
        description: end_date__second__istartswith
        schema:
          type: string
      - name: end_date__second__lt
        required: false
        in: query
        description: end_date__second__lt
        schema:
          type: string
      - name: end_date__second__lte
        required: false
        in: query
        description: end_date__second__lte
        schema:
          type: string
      - name: end_date__second__range
        required: false
        in: query
        description: end_date__second__range
        schema:
          type: string
      - name: end_date__second__regex
        required: false
        in: query
        description: end_date__second__regex
        schema:
          type: string
      - name: end_date__second__startswith
        required: false
        in: query
        description: end_date__second__startswith
        schema:
          type: string
      - name: end_date__startswith
        required: false
        in: query
        description: end_date__startswith
        schema:
          type: string
      - name: end_date__time
        required: false
        in: query
        description: end_date__time
        schema:
          type: string
      - name: end_date__time__contains
        required: false
        in: query
        description: end_date__time__contains
        schema:
          type: string
      - name: end_date__time__endswith
        required: false
        in: query
        description: end_date__time__endswith
        schema:
          type: string
      - name: end_date__time__gt
        required: false
        in: query
        description: end_date__time__gt
        schema:
          type: string
      - name: end_date__time__gte
        required: false
        in: query
        description: end_date__time__gte
        schema:
          type: string
      - name: end_date__time__hour
        required: false
        in: query
        description: end_date__time__hour
        schema:
          type: string
      - name: end_date__time__hour__contained_by
        required: false
        in: query
        description: end_date__time__hour__contained_by
        schema:
          type: string
      - name: end_date__time__hour__contains
        required: false
        in: query
        description: end_date__time__hour__contains
        schema:
          type: string
      - name: end_date__time__hour__endswith
        required: false
        in: query
        description: end_date__time__hour__endswith
        schema:
          type: string
      - name: end_date__time__hour__gt
        required: false
        in: query
        description: end_date__time__hour__gt
        schema:
          type: string
      - name: end_date__time__hour__gte
        required: false
        in: query
        description: end_date__time__hour__gte
        schema:
          type: string
      - name: end_date__time__hour__icontains
        required: false
        in: query
        description: end_date__time__hour__icontains
        schema:
          type: string
      - name: end_date__time__hour__iendswith
        required: false
        in: query
        description: end_date__time__hour__iendswith
        schema:
          type: string
      - name: end_date__time__hour__iexact
        required: false
        in: query
        description: end_date__time__hour__iexact
        schema:
          type: string
      - name: end_date__time__hour__in
        required: false
        in: query
        description: end_date__time__hour__in
        schema:
          type: string
      - name: end_date__time__hour__iregex
        required: false
        in: query
        description: end_date__time__hour__iregex
        schema:
          type: string
      - name: end_date__time__hour__isnull
        required: false
        in: query
        description: end_date__time__hour__isnull
        schema:
          type: string
      - name: end_date__time__hour__istartswith
        required: false
        in: query
        description: end_date__time__hour__istartswith
        schema:
          type: string
      - name: end_date__time__hour__lt
        required: false
        in: query
        description: end_date__time__hour__lt
        schema:
          type: string
      - name: end_date__time__hour__lte
        required: false
        in: query
        description: end_date__time__hour__lte
        schema:
          type: string
      - name: end_date__time__hour__range
        required: false
        in: query
        description: end_date__time__hour__range
        schema:
          type: string
      - name: end_date__time__hour__regex
        required: false
        in: query
        description: end_date__time__hour__regex
        schema:
          type: string
      - name: end_date__time__hour__startswith
        required: false
        in: query
        description: end_date__time__hour__startswith
        schema:
          type: string
      - name: end_date__time__icontains
        required: false
        in: query
        description: end_date__time__icontains
        schema:
          type: string
      - name: end_date__time__iendswith
        required: false
        in: query
        description: end_date__time__iendswith
        schema:
          type: string
      - name: end_date__time__iexact
        required: false
        in: query
        description: end_date__time__iexact
        schema:
          type: string
      - name: end_date__time__in
        required: false
        in: query
        description: end_date__time__in
        schema:
          type: string
      - name: end_date__time__iregex
        required: false
        in: query
        description: end_date__time__iregex
        schema:
          type: string
      - name: end_date__time__isnull
        required: false
        in: query
        description: end_date__time__isnull
        schema:
          type: string
      - name: end_date__time__istartswith
        required: false
        in: query
        description: end_date__time__istartswith
        schema:
          type: string
      - name: end_date__time__lt
        required: false
        in: query
        description: end_date__time__lt
        schema:
          type: string
      - name: end_date__time__lte
        required: false
        in: query
        description: end_date__time__lte
        schema:
          type: string
      - name: end_date__time__minute
        required: false
        in: query
        description: end_date__time__minute
        schema:
          type: string
      - name: end_date__time__minute__contained_by
        required: false
        in: query
        description: end_date__time__minute__contained_by
        schema:
          type: string
      - name: end_date__time__minute__contains
        required: false
        in: query
        description: end_date__time__minute__contains
        schema:
          type: string
      - name: end_date__time__minute__endswith
        required: false
        in: query
        description: end_date__time__minute__endswith
        schema:
          type: string
      - name: end_date__time__minute__gt
        required: false
        in: query
        description: end_date__time__minute__gt
        schema:
          type: string
      - name: end_date__time__minute__gte
        required: false
        in: query
        description: end_date__time__minute__gte
        schema:
          type: string
      - name: end_date__time__minute__icontains
        required: false
        in: query
        description: end_date__time__minute__icontains
        schema:
          type: string
      - name: end_date__time__minute__iendswith
        required: false
        in: query
        description: end_date__time__minute__iendswith
        schema:
          type: string
      - name: end_date__time__minute__iexact
        required: false
        in: query
        description: end_date__time__minute__iexact
        schema:
          type: string
      - name: end_date__time__minute__in
        required: false
        in: query
        description: end_date__time__minute__in
        schema:
          type: string
      - name: end_date__time__minute__iregex
        required: false
        in: query
        description: end_date__time__minute__iregex
        schema:
          type: string
      - name: end_date__time__minute__isnull
        required: false
        in: query
        description: end_date__time__minute__isnull
        schema:
          type: string
      - name: end_date__time__minute__istartswith
        required: false
        in: query
        description: end_date__time__minute__istartswith
        schema:
          type: string
      - name: end_date__time__minute__lt
        required: false
        in: query
        description: end_date__time__minute__lt
        schema:
          type: string
      - name: end_date__time__minute__lte
        required: false
        in: query
        description: end_date__time__minute__lte
        schema:
          type: string
      - name: end_date__time__minute__range
        required: false
        in: query
        description: end_date__time__minute__range
        schema:
          type: string
      - name: end_date__time__minute__regex
        required: false
        in: query
        description: end_date__time__minute__regex
        schema:
          type: string
      - name: end_date__time__minute__startswith
        required: false
        in: query
        description: end_date__time__minute__startswith
        schema:
          type: string
      - name: end_date__time__range
        required: false
        in: query
        description: end_date__time__range
        schema:
          type: string
      - name: end_date__time__regex
        required: false
        in: query
        description: end_date__time__regex
        schema:
          type: string
      - name: end_date__time__second
        required: false
        in: query
        description: end_date__time__second
        schema:
          type: string
      - name: end_date__time__second__contained_by
        required: false
        in: query
        description: end_date__time__second__contained_by
        schema:
          type: string
      - name: end_date__time__second__contains
        required: false
        in: query
        description: end_date__time__second__contains
        schema:
          type: string
      - name: end_date__time__second__endswith
        required: false
        in: query
        description: end_date__time__second__endswith
        schema:
          type: string
      - name: end_date__time__second__gt
        required: false
        in: query
        description: end_date__time__second__gt
        schema:
          type: string
      - name: end_date__time__second__gte
        required: false
        in: query
        description: end_date__time__second__gte
        schema:
          type: string
      - name: end_date__time__second__icontains
        required: false
        in: query
        description: end_date__time__second__icontains
        schema:
          type: string
      - name: end_date__time__second__iendswith
        required: false
        in: query
        description: end_date__time__second__iendswith
        schema:
          type: string
      - name: end_date__time__second__iexact
        required: false
        in: query
        description: end_date__time__second__iexact
        schema:
          type: string
      - name: end_date__time__second__in
        required: false
        in: query
        description: end_date__time__second__in
        schema:
          type: string
      - name: end_date__time__second__iregex
        required: false
        in: query
        description: end_date__time__second__iregex
        schema:
          type: string
      - name: end_date__time__second__isnull
        required: false
        in: query
        description: end_date__time__second__isnull
        schema:
          type: string
      - name: end_date__time__second__istartswith
        required: false
        in: query
        description: end_date__time__second__istartswith
        schema:
          type: string
      - name: end_date__time__second__lt
        required: false
        in: query
        description: end_date__time__second__lt
        schema:
          type: string
      - name: end_date__time__second__lte
        required: false
        in: query
        description: end_date__time__second__lte
        schema:
          type: string
      - name: end_date__time__second__range
        required: false
        in: query
        description: end_date__time__second__range
        schema:
          type: string
      - name: end_date__time__second__regex
        required: false
        in: query
        description: end_date__time__second__regex
        schema:
          type: string
      - name: end_date__time__second__startswith
        required: false
        in: query
        description: end_date__time__second__startswith
        schema:
          type: string
      - name: end_date__time__startswith
        required: false
        in: query
        description: end_date__time__startswith
        schema:
          type: string
      - name: end_date__week
        required: false
        in: query
        description: end_date__week
        schema:
          type: string
      - name: end_date__week__contained_by
        required: false
        in: query
        description: end_date__week__contained_by
        schema:
          type: string
      - name: end_date__week__contains
        required: false
        in: query
        description: end_date__week__contains
        schema:
          type: string
      - name: end_date__week__endswith
        required: false
        in: query
        description: end_date__week__endswith
        schema:
          type: string
      - name: end_date__week__gt
        required: false
        in: query
        description: end_date__week__gt
        schema:
          type: string
      - name: end_date__week__gte
        required: false
        in: query
        description: end_date__week__gte
        schema:
          type: string
      - name: end_date__week__icontains
        required: false
        in: query
        description: end_date__week__icontains
        schema:
          type: string
      - name: end_date__week__iendswith
        required: false
        in: query
        description: end_date__week__iendswith
        schema:
          type: string
      - name: end_date__week__iexact
        required: false
        in: query
        description: end_date__week__iexact
        schema:
          type: string
      - name: end_date__week__in
        required: false
        in: query
        description: end_date__week__in
        schema:
          type: string
      - name: end_date__week__iregex
        required: false
        in: query
        description: end_date__week__iregex
        schema:
          type: string
      - name: end_date__week__isnull
        required: false
        in: query
        description: end_date__week__isnull
        schema:
          type: string
      - name: end_date__week__istartswith
        required: false
        in: query
        description: end_date__week__istartswith
        schema:
          type: string
      - name: end_date__week__lt
        required: false
        in: query
        description: end_date__week__lt
        schema:
          type: string
      - name: end_date__week__lte
        required: false
        in: query
        description: end_date__week__lte
        schema:
          type: string
      - name: end_date__week__range
        required: false
        in: query
        description: end_date__week__range
        schema:
          type: string
      - name: end_date__week__regex
        required: false
        in: query
        description: end_date__week__regex
        schema:
          type: string
      - name: end_date__week__startswith
        required: false
        in: query
        description: end_date__week__startswith
        schema:
          type: string
      - name: end_date__week_day
        required: false
        in: query
        description: end_date__week_day
        schema:
          type: string
      - name: end_date__week_day__contained_by
        required: false
        in: query
        description: end_date__week_day__contained_by
        schema:
          type: string
      - name: end_date__week_day__contains
        required: false
        in: query
        description: end_date__week_day__contains
        schema:
          type: string
      - name: end_date__week_day__endswith
        required: false
        in: query
        description: end_date__week_day__endswith
        schema:
          type: string
      - name: end_date__week_day__gt
        required: false
        in: query
        description: end_date__week_day__gt
        schema:
          type: string
      - name: end_date__week_day__gte
        required: false
        in: query
        description: end_date__week_day__gte
        schema:
          type: string
      - name: end_date__week_day__icontains
        required: false
        in: query
        description: end_date__week_day__icontains
        schema:
          type: string
      - name: end_date__week_day__iendswith
        required: false
        in: query
        description: end_date__week_day__iendswith
        schema:
          type: string
      - name: end_date__week_day__iexact
        required: false
        in: query
        description: end_date__week_day__iexact
        schema:
          type: string
      - name: end_date__week_day__in
        required: false
        in: query
        description: end_date__week_day__in
        schema:
          type: string
      - name: end_date__week_day__iregex
        required: false
        in: query
        description: end_date__week_day__iregex
        schema:
          type: string
      - name: end_date__week_day__isnull
        required: false
        in: query
        description: end_date__week_day__isnull
        schema:
          type: string
      - name: end_date__week_day__istartswith
        required: false
        in: query
        description: end_date__week_day__istartswith
        schema:
          type: string
      - name: end_date__week_day__lt
        required: false
        in: query
        description: end_date__week_day__lt
        schema:
          type: string
      - name: end_date__week_day__lte
        required: false
        in: query
        description: end_date__week_day__lte
        schema:
          type: string
      - name: end_date__week_day__range
        required: false
        in: query
        description: end_date__week_day__range
        schema:
          type: string
      - name: end_date__week_day__regex
        required: false
        in: query
        description: end_date__week_day__regex
        schema:
          type: string
      - name: end_date__week_day__startswith
        required: false
        in: query
        description: end_date__week_day__startswith
        schema:
          type: string
      - name: end_date__year
        required: false
        in: query
        description: end_date__year
        schema:
          type: string
      - name: end_date__year__contained_by
        required: false
        in: query
        description: end_date__year__contained_by
        schema:
          type: string
      - name: end_date__year__contains
        required: false
        in: query
        description: end_date__year__contains
        schema:
          type: string
      - name: end_date__year__endswith
        required: false
        in: query
        description: end_date__year__endswith
        schema:
          type: string
      - name: end_date__year__gt
        required: false
        in: query
        description: end_date__year__gt
        schema:
          type: string
      - name: end_date__year__gte
        required: false
        in: query
        description: end_date__year__gte
        schema:
          type: string
      - name: end_date__year__icontains
        required: false
        in: query
        description: end_date__year__icontains
        schema:
          type: string
      - name: end_date__year__iendswith
        required: false
        in: query
        description: end_date__year__iendswith
        schema:
          type: string
      - name: end_date__year__iexact
        required: false
        in: query
        description: end_date__year__iexact
        schema:
          type: string
      - name: end_date__year__in
        required: false
        in: query
        description: end_date__year__in
        schema:
          type: string
      - name: end_date__year__iregex
        required: false
        in: query
        description: end_date__year__iregex
        schema:
          type: string
      - name: end_date__year__isnull
        required: false
        in: query
        description: end_date__year__isnull
        schema:
          type: string
      - name: end_date__year__istartswith
        required: false
        in: query
        description: end_date__year__istartswith
        schema:
          type: string
      - name: end_date__year__lt
        required: false
        in: query
        description: end_date__year__lt
        schema:
          type: string
      - name: end_date__year__lte
        required: false
        in: query
        description: end_date__year__lte
        schema:
          type: string
      - name: end_date__year__range
        required: false
        in: query
        description: end_date__year__range
        schema:
          type: string
      - name: end_date__year__regex
        required: false
        in: query
        description: end_date__year__regex
        schema:
          type: string
      - name: end_date__year__startswith
        required: false
        in: query
        description: end_date__year__startswith
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sections
        required: false
        in: query
        description: sections
        schema:
          type: string
      - name: standards
        required: false
        in: query
        description: standards
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__contained_by
        required: false
        in: query
        description: start_date__contained_by
        schema:
          type: string
      - name: start_date__contains
        required: false
        in: query
        description: start_date__contains
        schema:
          type: string
      - name: start_date__date
        required: false
        in: query
        description: start_date__date
        schema:
          type: string
      - name: start_date__date__contained_by
        required: false
        in: query
        description: start_date__date__contained_by
        schema:
          type: string
      - name: start_date__date__contains
        required: false
        in: query
        description: start_date__date__contains
        schema:
          type: string
      - name: start_date__date__day
        required: false
        in: query
        description: start_date__date__day
        schema:
          type: string
      - name: start_date__date__day__contained_by
        required: false
        in: query
        description: start_date__date__day__contained_by
        schema:
          type: string
      - name: start_date__date__day__contains
        required: false
        in: query
        description: start_date__date__day__contains
        schema:
          type: string
      - name: start_date__date__day__endswith
        required: false
        in: query
        description: start_date__date__day__endswith
        schema:
          type: string
      - name: start_date__date__day__gt
        required: false
        in: query
        description: start_date__date__day__gt
        schema:
          type: string
      - name: start_date__date__day__gte
        required: false
        in: query
        description: start_date__date__day__gte
        schema:
          type: string
      - name: start_date__date__day__icontains
        required: false
        in: query
        description: start_date__date__day__icontains
        schema:
          type: string
      - name: start_date__date__day__iendswith
        required: false
        in: query
        description: start_date__date__day__iendswith
        schema:
          type: string
      - name: start_date__date__day__iexact
        required: false
        in: query
        description: start_date__date__day__iexact
        schema:
          type: string
      - name: start_date__date__day__in
        required: false
        in: query
        description: start_date__date__day__in
        schema:
          type: string
      - name: start_date__date__day__iregex
        required: false
        in: query
        description: start_date__date__day__iregex
        schema:
          type: string
      - name: start_date__date__day__isnull
        required: false
        in: query
        description: start_date__date__day__isnull
        schema:
          type: string
      - name: start_date__date__day__istartswith
        required: false
        in: query
        description: start_date__date__day__istartswith
        schema:
          type: string
      - name: start_date__date__day__lt
        required: false
        in: query
        description: start_date__date__day__lt
        schema:
          type: string
      - name: start_date__date__day__lte
        required: false
        in: query
        description: start_date__date__day__lte
        schema:
          type: string
      - name: start_date__date__day__range
        required: false
        in: query
        description: start_date__date__day__range
        schema:
          type: string
      - name: start_date__date__day__regex
        required: false
        in: query
        description: start_date__date__day__regex
        schema:
          type: string
      - name: start_date__date__day__startswith
        required: false
        in: query
        description: start_date__date__day__startswith
        schema:
          type: string
      - name: start_date__date__endswith
        required: false
        in: query
        description: start_date__date__endswith
        schema:
          type: string
      - name: start_date__date__gt
        required: false
        in: query
        description: start_date__date__gt
        schema:
          type: string
      - name: start_date__date__gte
        required: false
        in: query
        description: start_date__date__gte
        schema:
          type: string
      - name: start_date__date__icontains
        required: false
        in: query
        description: start_date__date__icontains
        schema:
          type: string
      - name: start_date__date__iendswith
        required: false
        in: query
        description: start_date__date__iendswith
        schema:
          type: string
      - name: start_date__date__iexact
        required: false
        in: query
        description: start_date__date__iexact
        schema:
          type: string
      - name: start_date__date__in
        required: false
        in: query
        description: start_date__date__in
        schema:
          type: string
      - name: start_date__date__iregex
        required: false
        in: query
        description: start_date__date__iregex
        schema:
          type: string
      - name: start_date__date__isnull
        required: false
        in: query
        description: start_date__date__isnull
        schema:
          type: string
      - name: start_date__date__iso_week_day
        required: false
        in: query
        description: start_date__date__iso_week_day
        schema:
          type: string
      - name: start_date__date__iso_week_day__contained_by
        required: false
        in: query
        description: start_date__date__iso_week_day__contained_by
        schema:
          type: string
      - name: start_date__date__iso_week_day__contains
        required: false
        in: query
        description: start_date__date__iso_week_day__contains
        schema:
          type: string
      - name: start_date__date__iso_week_day__endswith
        required: false
        in: query
        description: start_date__date__iso_week_day__endswith
        schema:
          type: string
      - name: start_date__date__iso_week_day__gt
        required: false
        in: query
        description: start_date__date__iso_week_day__gt
        schema:
          type: string
      - name: start_date__date__iso_week_day__gte
        required: false
        in: query
        description: start_date__date__iso_week_day__gte
        schema:
          type: string
      - name: start_date__date__iso_week_day__icontains
        required: false
        in: query
        description: start_date__date__iso_week_day__icontains
        schema:
          type: string
      - name: start_date__date__iso_week_day__iendswith
        required: false
        in: query
        description: start_date__date__iso_week_day__iendswith
        schema:
          type: string
      - name: start_date__date__iso_week_day__iexact
        required: false
        in: query
        description: start_date__date__iso_week_day__iexact
        schema:
          type: string
      - name: start_date__date__iso_week_day__in
        required: false
        in: query
        description: start_date__date__iso_week_day__in
        schema:
          type: string
      - name: start_date__date__iso_week_day__iregex
        required: false
        in: query
        description: start_date__date__iso_week_day__iregex
        schema:
          type: string
      - name: start_date__date__iso_week_day__isnull
        required: false
        in: query
        description: start_date__date__iso_week_day__isnull
        schema:
          type: string
      - name: start_date__date__iso_week_day__istartswith
        required: false
        in: query
        description: start_date__date__iso_week_day__istartswith
        schema:
          type: string
      - name: start_date__date__iso_week_day__lt
        required: false
        in: query
        description: start_date__date__iso_week_day__lt
        schema:
          type: string
      - name: start_date__date__iso_week_day__lte
        required: false
        in: query
        description: start_date__date__iso_week_day__lte
        schema:
          type: string
      - name: start_date__date__iso_week_day__range
        required: false
        in: query
        description: start_date__date__iso_week_day__range
        schema:
          type: string
      - name: start_date__date__iso_week_day__regex
        required: false
        in: query
        description: start_date__date__iso_week_day__regex
        schema:
          type: string
      - name: start_date__date__iso_week_day__startswith
        required: false
        in: query
        description: start_date__date__iso_week_day__startswith
        schema:
          type: string
      - name: start_date__date__iso_year
        required: false
        in: query
        description: start_date__date__iso_year
        schema:
          type: string
      - name: start_date__date__iso_year__contained_by
        required: false
        in: query
        description: start_date__date__iso_year__contained_by
        schema:
          type: string
      - name: start_date__date__iso_year__contains
        required: false
        in: query
        description: start_date__date__iso_year__contains
        schema:
          type: string
      - name: start_date__date__iso_year__endswith
        required: false
        in: query
        description: start_date__date__iso_year__endswith
        schema:
          type: string
      - name: start_date__date__iso_year__gt
        required: false
        in: query
        description: start_date__date__iso_year__gt
        schema:
          type: string
      - name: start_date__date__iso_year__gte
        required: false
        in: query
        description: start_date__date__iso_year__gte
        schema:
          type: string
      - name: start_date__date__iso_year__icontains
        required: false
        in: query
        description: start_date__date__iso_year__icontains
        schema:
          type: string
      - name: start_date__date__iso_year__iendswith
        required: false
        in: query
        description: start_date__date__iso_year__iendswith
        schema:
          type: string
      - name: start_date__date__iso_year__iexact
        required: false
        in: query
        description: start_date__date__iso_year__iexact
        schema:
          type: string
      - name: start_date__date__iso_year__in
        required: false
        in: query
        description: start_date__date__iso_year__in
        schema:
          type: string
      - name: start_date__date__iso_year__iregex
        required: false
        in: query
        description: start_date__date__iso_year__iregex
        schema:
          type: string
      - name: start_date__date__iso_year__isnull
        required: false
        in: query
        description: start_date__date__iso_year__isnull
        schema:
          type: string
      - name: start_date__date__iso_year__istartswith
        required: false
        in: query
        description: start_date__date__iso_year__istartswith
        schema:
          type: string
      - name: start_date__date__iso_year__lt
        required: false
        in: query
        description: start_date__date__iso_year__lt
        schema:
          type: string
      - name: start_date__date__iso_year__lte
        required: false
        in: query
        description: start_date__date__iso_year__lte
        schema:
          type: string
      - name: start_date__date__iso_year__range
        required: false
        in: query
        description: start_date__date__iso_year__range
        schema:
          type: string
      - name: start_date__date__iso_year__regex
        required: false
        in: query
        description: start_date__date__iso_year__regex
        schema:
          type: string
      - name: start_date__date__iso_year__startswith
        required: false
        in: query
        description: start_date__date__iso_year__startswith
        schema:
          type: string
      - name: start_date__date__istartswith
        required: false
        in: query
        description: start_date__date__istartswith
        schema:
          type: string
      - name: start_date__date__lt
        required: false
        in: query
        description: start_date__date__lt
        schema:
          type: string
      - name: start_date__date__lte
        required: false
        in: query
        description: start_date__date__lte
        schema:
          type: string
      - name: start_date__date__month
        required: false
        in: query
        description: start_date__date__month
        schema:
          type: string
      - name: start_date__date__month__contained_by
        required: false
        in: query
        description: start_date__date__month__contained_by
        schema:
          type: string
      - name: start_date__date__month__contains
        required: false
        in: query
        description: start_date__date__month__contains
        schema:
          type: string
      - name: start_date__date__month__endswith
        required: false
        in: query
        description: start_date__date__month__endswith
        schema:
          type: string
      - name: start_date__date__month__gt
        required: false
        in: query
        description: start_date__date__month__gt
        schema:
          type: string
      - name: start_date__date__month__gte
        required: false
        in: query
        description: start_date__date__month__gte
        schema:
          type: string
      - name: start_date__date__month__icontains
        required: false
        in: query
        description: start_date__date__month__icontains
        schema:
          type: string
      - name: start_date__date__month__iendswith
        required: false
        in: query
        description: start_date__date__month__iendswith
        schema:
          type: string
      - name: start_date__date__month__iexact
        required: false
        in: query
        description: start_date__date__month__iexact
        schema:
          type: string
      - name: start_date__date__month__in
        required: false
        in: query
        description: start_date__date__month__in
        schema:
          type: string
      - name: start_date__date__month__iregex
        required: false
        in: query
        description: start_date__date__month__iregex
        schema:
          type: string
      - name: start_date__date__month__isnull
        required: false
        in: query
        description: start_date__date__month__isnull
        schema:
          type: string
      - name: start_date__date__month__istartswith
        required: false
        in: query
        description: start_date__date__month__istartswith
        schema:
          type: string
      - name: start_date__date__month__lt
        required: false
        in: query
        description: start_date__date__month__lt
        schema:
          type: string
      - name: start_date__date__month__lte
        required: false
        in: query
        description: start_date__date__month__lte
        schema:
          type: string
      - name: start_date__date__month__range
        required: false
        in: query
        description: start_date__date__month__range
        schema:
          type: string
      - name: start_date__date__month__regex
        required: false
        in: query
        description: start_date__date__month__regex
        schema:
          type: string
      - name: start_date__date__month__startswith
        required: false
        in: query
        description: start_date__date__month__startswith
        schema:
          type: string
      - name: start_date__date__quarter
        required: false
        in: query
        description: start_date__date__quarter
        schema:
          type: string
      - name: start_date__date__quarter__contained_by
        required: false
        in: query
        description: start_date__date__quarter__contained_by
        schema:
          type: string
      - name: start_date__date__quarter__contains
        required: false
        in: query
        description: start_date__date__quarter__contains
        schema:
          type: string
      - name: start_date__date__quarter__endswith
        required: false
        in: query
        description: start_date__date__quarter__endswith
        schema:
          type: string
      - name: start_date__date__quarter__gt
        required: false
        in: query
        description: start_date__date__quarter__gt
        schema:
          type: string
      - name: start_date__date__quarter__gte
        required: false
        in: query
        description: start_date__date__quarter__gte
        schema:
          type: string
      - name: start_date__date__quarter__icontains
        required: false
        in: query
        description: start_date__date__quarter__icontains
        schema:
          type: string
      - name: start_date__date__quarter__iendswith
        required: false
        in: query
        description: start_date__date__quarter__iendswith
        schema:
          type: string
      - name: start_date__date__quarter__iexact
        required: false
        in: query
        description: start_date__date__quarter__iexact
        schema:
          type: string
      - name: start_date__date__quarter__in
        required: false
        in: query
        description: start_date__date__quarter__in
        schema:
          type: string
      - name: start_date__date__quarter__iregex
        required: false
        in: query
        description: start_date__date__quarter__iregex
        schema:
          type: string
      - name: start_date__date__quarter__isnull
        required: false
        in: query
        description: start_date__date__quarter__isnull
        schema:
          type: string
      - name: start_date__date__quarter__istartswith
        required: false
        in: query
        description: start_date__date__quarter__istartswith
        schema:
          type: string
      - name: start_date__date__quarter__lt
        required: false
        in: query
        description: start_date__date__quarter__lt
        schema:
          type: string
      - name: start_date__date__quarter__lte
        required: false
        in: query
        description: start_date__date__quarter__lte
        schema:
          type: string
      - name: start_date__date__quarter__range
        required: false
        in: query
        description: start_date__date__quarter__range
        schema:
          type: string
      - name: start_date__date__quarter__regex
        required: false
        in: query
        description: start_date__date__quarter__regex
        schema:
          type: string
      - name: start_date__date__quarter__startswith
        required: false
        in: query
        description: start_date__date__quarter__startswith
        schema:
          type: string
      - name: start_date__date__range
        required: false
        in: query
        description: start_date__date__range
        schema:
          type: string
      - name: start_date__date__regex
        required: false
        in: query
        description: start_date__date__regex
        schema:
          type: string
      - name: start_date__date__startswith
        required: false
        in: query
        description: start_date__date__startswith
        schema:
          type: string
      - name: start_date__date__week
        required: false
        in: query
        description: start_date__date__week
        schema:
          type: string
      - name: start_date__date__week__contained_by
        required: false
        in: query
        description: start_date__date__week__contained_by
        schema:
          type: string
      - name: start_date__date__week__contains
        required: false
        in: query
        description: start_date__date__week__contains
        schema:
          type: string
      - name: start_date__date__week__endswith
        required: false
        in: query
        description: start_date__date__week__endswith
        schema:
          type: string
      - name: start_date__date__week__gt
        required: false
        in: query
        description: start_date__date__week__gt
        schema:
          type: string
      - name: start_date__date__week__gte
        required: false
        in: query
        description: start_date__date__week__gte
        schema:
          type: string
      - name: start_date__date__week__icontains
        required: false
        in: query
        description: start_date__date__week__icontains
        schema:
          type: string
      - name: start_date__date__week__iendswith
        required: false
        in: query
        description: start_date__date__week__iendswith
        schema:
          type: string
      - name: start_date__date__week__iexact
        required: false
        in: query
        description: start_date__date__week__iexact
        schema:
          type: string
      - name: start_date__date__week__in
        required: false
        in: query
        description: start_date__date__week__in
        schema:
          type: string
      - name: start_date__date__week__iregex
        required: false
        in: query
        description: start_date__date__week__iregex
        schema:
          type: string
      - name: start_date__date__week__isnull
        required: false
        in: query
        description: start_date__date__week__isnull
        schema:
          type: string
      - name: start_date__date__week__istartswith
        required: false
        in: query
        description: start_date__date__week__istartswith
        schema:
          type: string
      - name: start_date__date__week__lt
        required: false
        in: query
        description: start_date__date__week__lt
        schema:
          type: string
      - name: start_date__date__week__lte
        required: false
        in: query
        description: start_date__date__week__lte
        schema:
          type: string
      - name: start_date__date__week__range
        required: false
        in: query
        description: start_date__date__week__range
        schema:
          type: string
      - name: start_date__date__week__regex
        required: false
        in: query
        description: start_date__date__week__regex
        schema:
          type: string
      - name: start_date__date__week__startswith
        required: false
        in: query
        description: start_date__date__week__startswith
        schema:
          type: string
      - name: start_date__date__week_day
        required: false
        in: query
        description: start_date__date__week_day
        schema:
          type: string
      - name: start_date__date__week_day__contained_by
        required: false
        in: query
        description: start_date__date__week_day__contained_by
        schema:
          type: string
      - name: start_date__date__week_day__contains
        required: false
        in: query
        description: start_date__date__week_day__contains
        schema:
          type: string
      - name: start_date__date__week_day__endswith
        required: false
        in: query
        description: start_date__date__week_day__endswith
        schema:
          type: string
      - name: start_date__date__week_day__gt
        required: false
        in: query
        description: start_date__date__week_day__gt
        schema:
          type: string
      - name: start_date__date__week_day__gte
        required: false
        in: query
        description: start_date__date__week_day__gte
        schema:
          type: string
      - name: start_date__date__week_day__icontains
        required: false
        in: query
        description: start_date__date__week_day__icontains
        schema:
          type: string
      - name: start_date__date__week_day__iendswith
        required: false
        in: query
        description: start_date__date__week_day__iendswith
        schema:
          type: string
      - name: start_date__date__week_day__iexact
        required: false
        in: query
        description: start_date__date__week_day__iexact
        schema:
          type: string
      - name: start_date__date__week_day__in
        required: false
        in: query
        description: start_date__date__week_day__in
        schema:
          type: string
      - name: start_date__date__week_day__iregex
        required: false
        in: query
        description: start_date__date__week_day__iregex
        schema:
          type: string
      - name: start_date__date__week_day__isnull
        required: false
        in: query
        description: start_date__date__week_day__isnull
        schema:
          type: string
      - name: start_date__date__week_day__istartswith
        required: false
        in: query
        description: start_date__date__week_day__istartswith
        schema:
          type: string
      - name: start_date__date__week_day__lt
        required: false
        in: query
        description: start_date__date__week_day__lt
        schema:
          type: string
      - name: start_date__date__week_day__lte
        required: false
        in: query
        description: start_date__date__week_day__lte
        schema:
          type: string
      - name: start_date__date__week_day__range
        required: false
        in: query
        description: start_date__date__week_day__range
        schema:
          type: string
      - name: start_date__date__week_day__regex
        required: false
        in: query
        description: start_date__date__week_day__regex
        schema:
          type: string
      - name: start_date__date__week_day__startswith
        required: false
        in: query
        description: start_date__date__week_day__startswith
        schema:
          type: string
      - name: start_date__date__year
        required: false
        in: query
        description: start_date__date__year
        schema:
          type: string
      - name: start_date__date__year__contained_by
        required: false
        in: query
        description: start_date__date__year__contained_by
        schema:
          type: string
      - name: start_date__date__year__contains
        required: false
        in: query
        description: start_date__date__year__contains
        schema:
          type: string
      - name: start_date__date__year__endswith
        required: false
        in: query
        description: start_date__date__year__endswith
        schema:
          type: string
      - name: start_date__date__year__gt
        required: false
        in: query
        description: start_date__date__year__gt
        schema:
          type: string
      - name: start_date__date__year__gte
        required: false
        in: query
        description: start_date__date__year__gte
        schema:
          type: string
      - name: start_date__date__year__icontains
        required: false
        in: query
        description: start_date__date__year__icontains
        schema:
          type: string
      - name: start_date__date__year__iendswith
        required: false
        in: query
        description: start_date__date__year__iendswith
        schema:
          type: string
      - name: start_date__date__year__iexact
        required: false
        in: query
        description: start_date__date__year__iexact
        schema:
          type: string
      - name: start_date__date__year__in
        required: false
        in: query
        description: start_date__date__year__in
        schema:
          type: string
      - name: start_date__date__year__iregex
        required: false
        in: query
        description: start_date__date__year__iregex
        schema:
          type: string
      - name: start_date__date__year__isnull
        required: false
        in: query
        description: start_date__date__year__isnull
        schema:
          type: string
      - name: start_date__date__year__istartswith
        required: false
        in: query
        description: start_date__date__year__istartswith
        schema:
          type: string
      - name: start_date__date__year__lt
        required: false
        in: query
        description: start_date__date__year__lt
        schema:
          type: string
      - name: start_date__date__year__lte
        required: false
        in: query
        description: start_date__date__year__lte
        schema:
          type: string
      - name: start_date__date__year__range
        required: false
        in: query
        description: start_date__date__year__range
        schema:
          type: string
      - name: start_date__date__year__regex
        required: false
        in: query
        description: start_date__date__year__regex
        schema:
          type: string
      - name: start_date__date__year__startswith
        required: false
        in: query
        description: start_date__date__year__startswith
        schema:
          type: string
      - name: start_date__day
        required: false
        in: query
        description: start_date__day
        schema:
          type: string
      - name: start_date__day__contained_by
        required: false
        in: query
        description: start_date__day__contained_by
        schema:
          type: string
      - name: start_date__day__contains
        required: false
        in: query
        description: start_date__day__contains
        schema:
          type: string
      - name: start_date__day__endswith
        required: false
        in: query
        description: start_date__day__endswith
        schema:
          type: string
      - name: start_date__day__gt
        required: false
        in: query
        description: start_date__day__gt
        schema:
          type: string
      - name: start_date__day__gte
        required: false
        in: query
        description: start_date__day__gte
        schema:
          type: string
      - name: start_date__day__icontains
        required: false
        in: query
        description: start_date__day__icontains
        schema:
          type: string
      - name: start_date__day__iendswith
        required: false
        in: query
        description: start_date__day__iendswith
        schema:
          type: string
      - name: start_date__day__iexact
        required: false
        in: query
        description: start_date__day__iexact
        schema:
          type: string
      - name: start_date__day__in
        required: false
        in: query
        description: start_date__day__in
        schema:
          type: string
      - name: start_date__day__iregex
        required: false
        in: query
        description: start_date__day__iregex
        schema:
          type: string
      - name: start_date__day__isnull
        required: false
        in: query
        description: start_date__day__isnull
        schema:
          type: string
      - name: start_date__day__istartswith
        required: false
        in: query
        description: start_date__day__istartswith
        schema:
          type: string
      - name: start_date__day__lt
        required: false
        in: query
        description: start_date__day__lt
        schema:
          type: string
      - name: start_date__day__lte
        required: false
        in: query
        description: start_date__day__lte
        schema:
          type: string
      - name: start_date__day__range
        required: false
        in: query
        description: start_date__day__range
        schema:
          type: string
      - name: start_date__day__regex
        required: false
        in: query
        description: start_date__day__regex
        schema:
          type: string
      - name: start_date__day__startswith
        required: false
        in: query
        description: start_date__day__startswith
        schema:
          type: string
      - name: start_date__endswith
        required: false
        in: query
        description: start_date__endswith
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__gte
        required: false
        in: query
        description: start_date__gte
        schema:
          type: string
      - name: start_date__hour
        required: false
        in: query
        description: start_date__hour
        schema:
          type: string
      - name: start_date__hour__contained_by
        required: false
        in: query
        description: start_date__hour__contained_by
        schema:
          type: string
      - name: start_date__hour__contains
        required: false
        in: query
        description: start_date__hour__contains
        schema:
          type: string
      - name: start_date__hour__endswith
        required: false
        in: query
        description: start_date__hour__endswith
        schema:
          type: string
      - name: start_date__hour__gt
        required: false
        in: query
        description: start_date__hour__gt
        schema:
          type: string
      - name: start_date__hour__gte
        required: false
        in: query
        description: start_date__hour__gte
        schema:
          type: string
      - name: start_date__hour__icontains
        required: false
        in: query
        description: start_date__hour__icontains
        schema:
          type: string
      - name: start_date__hour__iendswith
        required: false
        in: query
        description: start_date__hour__iendswith
        schema:
          type: string
      - name: start_date__hour__iexact
        required: false
        in: query
        description: start_date__hour__iexact
        schema:
          type: string
      - name: start_date__hour__in
        required: false
        in: query
        description: start_date__hour__in
        schema:
          type: string
      - name: start_date__hour__iregex
        required: false
        in: query
        description: start_date__hour__iregex
        schema:
          type: string
      - name: start_date__hour__isnull
        required: false
        in: query
        description: start_date__hour__isnull
        schema:
          type: string
      - name: start_date__hour__istartswith
        required: false
        in: query
        description: start_date__hour__istartswith
        schema:
          type: string
      - name: start_date__hour__lt
        required: false
        in: query
        description: start_date__hour__lt
        schema:
          type: string
      - name: start_date__hour__lte
        required: false
        in: query
        description: start_date__hour__lte
        schema:
          type: string
      - name: start_date__hour__range
        required: false
        in: query
        description: start_date__hour__range
        schema:
          type: string
      - name: start_date__hour__regex
        required: false
        in: query
        description: start_date__hour__regex
        schema:
          type: string
      - name: start_date__hour__startswith
        required: false
        in: query
        description: start_date__hour__startswith
        schema:
          type: string
      - name: start_date__icontains
        required: false
        in: query
        description: start_date__icontains
        schema:
          type: string
      - name: start_date__iendswith
        required: false
        in: query
        description: start_date__iendswith
        schema:
          type: string
      - name: start_date__iexact
        required: false
        in: query
        description: start_date__iexact
        schema:
          type: string
      - name: start_date__in
        required: false
        in: query
        description: start_date__in
        schema:
          type: string
      - name: start_date__iregex
        required: false
        in: query
        description: start_date__iregex
        schema:
          type: string
      - name: start_date__isnull
        required: false
        in: query
        description: start_date__isnull
        schema:
          type: string
      - name: start_date__iso_week_day
        required: false
        in: query
        description: start_date__iso_week_day
        schema:
          type: string
      - name: start_date__iso_week_day__contained_by
        required: false
        in: query
        description: start_date__iso_week_day__contained_by
        schema:
          type: string
      - name: start_date__iso_week_day__contains
        required: false
        in: query
        description: start_date__iso_week_day__contains
        schema:
          type: string
      - name: start_date__iso_week_day__endswith
        required: false
        in: query
        description: start_date__iso_week_day__endswith
        schema:
          type: string
      - name: start_date__iso_week_day__gt
        required: false
        in: query
        description: start_date__iso_week_day__gt
        schema:
          type: string
      - name: start_date__iso_week_day__gte
        required: false
        in: query
        description: start_date__iso_week_day__gte
        schema:
          type: string
      - name: start_date__iso_week_day__icontains
        required: false
        in: query
        description: start_date__iso_week_day__icontains
        schema:
          type: string
      - name: start_date__iso_week_day__iendswith
        required: false
        in: query
        description: start_date__iso_week_day__iendswith
        schema:
          type: string
      - name: start_date__iso_week_day__iexact
        required: false
        in: query
        description: start_date__iso_week_day__iexact
        schema:
          type: string
      - name: start_date__iso_week_day__in
        required: false
        in: query
        description: start_date__iso_week_day__in
        schema:
          type: string
      - name: start_date__iso_week_day__iregex
        required: false
        in: query
        description: start_date__iso_week_day__iregex
        schema:
          type: string
      - name: start_date__iso_week_day__isnull
        required: false
        in: query
        description: start_date__iso_week_day__isnull
        schema:
          type: string
      - name: start_date__iso_week_day__istartswith
        required: false
        in: query
        description: start_date__iso_week_day__istartswith
        schema:
          type: string
      - name: start_date__iso_week_day__lt
        required: false
        in: query
        description: start_date__iso_week_day__lt
        schema:
          type: string
      - name: start_date__iso_week_day__lte
        required: false
        in: query
        description: start_date__iso_week_day__lte
        schema:
          type: string
      - name: start_date__iso_week_day__range
        required: false
        in: query
        description: start_date__iso_week_day__range
        schema:
          type: string
      - name: start_date__iso_week_day__regex
        required: false
        in: query
        description: start_date__iso_week_day__regex
        schema:
          type: string
      - name: start_date__iso_week_day__startswith
        required: false
        in: query
        description: start_date__iso_week_day__startswith
        schema:
          type: string
      - name: start_date__iso_year
        required: false
        in: query
        description: start_date__iso_year
        schema:
          type: string
      - name: start_date__iso_year__contained_by
        required: false
        in: query
        description: start_date__iso_year__contained_by
        schema:
          type: string
      - name: start_date__iso_year__contains
        required: false
        in: query
        description: start_date__iso_year__contains
        schema:
          type: string
      - name: start_date__iso_year__endswith
        required: false
        in: query
        description: start_date__iso_year__endswith
        schema:
          type: string
      - name: start_date__iso_year__gt
        required: false
        in: query
        description: start_date__iso_year__gt
        schema:
          type: string
      - name: start_date__iso_year__gte
        required: false
        in: query
        description: start_date__iso_year__gte
        schema:
          type: string
      - name: start_date__iso_year__icontains
        required: false
        in: query
        description: start_date__iso_year__icontains
        schema:
          type: string
      - name: start_date__iso_year__iendswith
        required: false
        in: query
        description: start_date__iso_year__iendswith
        schema:
          type: string
      - name: start_date__iso_year__iexact
        required: false
        in: query
        description: start_date__iso_year__iexact
        schema:
          type: string
      - name: start_date__iso_year__in
        required: false
        in: query
        description: start_date__iso_year__in
        schema:
          type: string
      - name: start_date__iso_year__iregex
        required: false
        in: query
        description: start_date__iso_year__iregex
        schema:
          type: string
      - name: start_date__iso_year__isnull
        required: false
        in: query
        description: start_date__iso_year__isnull
        schema:
          type: string
      - name: start_date__iso_year__istartswith
        required: false
        in: query
        description: start_date__iso_year__istartswith
        schema:
          type: string
      - name: start_date__iso_year__lt
        required: false
        in: query
        description: start_date__iso_year__lt
        schema:
          type: string
      - name: start_date__iso_year__lte
        required: false
        in: query
        description: start_date__iso_year__lte
        schema:
          type: string
      - name: start_date__iso_year__range
        required: false
        in: query
        description: start_date__iso_year__range
        schema:
          type: string
      - name: start_date__iso_year__regex
        required: false
        in: query
        description: start_date__iso_year__regex
        schema:
          type: string
      - name: start_date__iso_year__startswith
        required: false
        in: query
        description: start_date__iso_year__startswith
        schema:
          type: string
      - name: start_date__istartswith
        required: false
        in: query
        description: start_date__istartswith
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: start_date__lte
        required: false
        in: query
        description: start_date__lte
        schema:
          type: string
      - name: start_date__minute
        required: false
        in: query
        description: start_date__minute
        schema:
          type: string
      - name: start_date__minute__contained_by
        required: false
        in: query
        description: start_date__minute__contained_by
        schema:
          type: string
      - name: start_date__minute__contains
        required: false
        in: query
        description: start_date__minute__contains
        schema:
          type: string
      - name: start_date__minute__endswith
        required: false
        in: query
        description: start_date__minute__endswith
        schema:
          type: string
      - name: start_date__minute__gt
        required: false
        in: query
        description: start_date__minute__gt
        schema:
          type: string
      - name: start_date__minute__gte
        required: false
        in: query
        description: start_date__minute__gte
        schema:
          type: string
      - name: start_date__minute__icontains
        required: false
        in: query
        description: start_date__minute__icontains
        schema:
          type: string
      - name: start_date__minute__iendswith
        required: false
        in: query
        description: start_date__minute__iendswith
        schema:
          type: string
      - name: start_date__minute__iexact
        required: false
        in: query
        description: start_date__minute__iexact
        schema:
          type: string
      - name: start_date__minute__in
        required: false
        in: query
        description: start_date__minute__in
        schema:
          type: string
      - name: start_date__minute__iregex
        required: false
        in: query
        description: start_date__minute__iregex
        schema:
          type: string
      - name: start_date__minute__isnull
        required: false
        in: query
        description: start_date__minute__isnull
        schema:
          type: string
      - name: start_date__minute__istartswith
        required: false
        in: query
        description: start_date__minute__istartswith
        schema:
          type: string
      - name: start_date__minute__lt
        required: false
        in: query
        description: start_date__minute__lt
        schema:
          type: string
      - name: start_date__minute__lte
        required: false
        in: query
        description: start_date__minute__lte
        schema:
          type: string
      - name: start_date__minute__range
        required: false
        in: query
        description: start_date__minute__range
        schema:
          type: string
      - name: start_date__minute__regex
        required: false
        in: query
        description: start_date__minute__regex
        schema:
          type: string
      - name: start_date__minute__startswith
        required: false
        in: query
        description: start_date__minute__startswith
        schema:
          type: string
      - name: start_date__month
        required: false
        in: query
        description: start_date__month
        schema:
          type: string
      - name: start_date__month__contained_by
        required: false
        in: query
        description: start_date__month__contained_by
        schema:
          type: string
      - name: start_date__month__contains
        required: false
        in: query
        description: start_date__month__contains
        schema:
          type: string
      - name: start_date__month__endswith
        required: false
        in: query
        description: start_date__month__endswith
        schema:
          type: string
      - name: start_date__month__gt
        required: false
        in: query
        description: start_date__month__gt
        schema:
          type: string
      - name: start_date__month__gte
        required: false
        in: query
        description: start_date__month__gte
        schema:
          type: string
      - name: start_date__month__icontains
        required: false
        in: query
        description: start_date__month__icontains
        schema:
          type: string
      - name: start_date__month__iendswith
        required: false
        in: query
        description: start_date__month__iendswith
        schema:
          type: string
      - name: start_date__month__iexact
        required: false
        in: query
        description: start_date__month__iexact
        schema:
          type: string
      - name: start_date__month__in
        required: false
        in: query
        description: start_date__month__in
        schema:
          type: string
      - name: start_date__month__iregex
        required: false
        in: query
        description: start_date__month__iregex
        schema:
          type: string
      - name: start_date__month__isnull
        required: false
        in: query
        description: start_date__month__isnull
        schema:
          type: string
      - name: start_date__month__istartswith
        required: false
        in: query
        description: start_date__month__istartswith
        schema:
          type: string
      - name: start_date__month__lt
        required: false
        in: query
        description: start_date__month__lt
        schema:
          type: string
      - name: start_date__month__lte
        required: false
        in: query
        description: start_date__month__lte
        schema:
          type: string
      - name: start_date__month__range
        required: false
        in: query
        description: start_date__month__range
        schema:
          type: string
      - name: start_date__month__regex
        required: false
        in: query
        description: start_date__month__regex
        schema:
          type: string
      - name: start_date__month__startswith
        required: false
        in: query
        description: start_date__month__startswith
        schema:
          type: string
      - name: start_date__quarter
        required: false
        in: query
        description: start_date__quarter
        schema:
          type: string
      - name: start_date__quarter__contained_by
        required: false
        in: query
        description: start_date__quarter__contained_by
        schema:
          type: string
      - name: start_date__quarter__contains
        required: false
        in: query
        description: start_date__quarter__contains
        schema:
          type: string
      - name: start_date__quarter__endswith
        required: false
        in: query
        description: start_date__quarter__endswith
        schema:
          type: string
      - name: start_date__quarter__gt
        required: false
        in: query
        description: start_date__quarter__gt
        schema:
          type: string
      - name: start_date__quarter__gte
        required: false
        in: query
        description: start_date__quarter__gte
        schema:
          type: string
      - name: start_date__quarter__icontains
        required: false
        in: query
        description: start_date__quarter__icontains
        schema:
          type: string
      - name: start_date__quarter__iendswith
        required: false
        in: query
        description: start_date__quarter__iendswith
        schema:
          type: string
      - name: start_date__quarter__iexact
        required: false
        in: query
        description: start_date__quarter__iexact
        schema:
          type: string
      - name: start_date__quarter__in
        required: false
        in: query
        description: start_date__quarter__in
        schema:
          type: string
      - name: start_date__quarter__iregex
        required: false
        in: query
        description: start_date__quarter__iregex
        schema:
          type: string
      - name: start_date__quarter__isnull
        required: false
        in: query
        description: start_date__quarter__isnull
        schema:
          type: string
      - name: start_date__quarter__istartswith
        required: false
        in: query
        description: start_date__quarter__istartswith
        schema:
          type: string
      - name: start_date__quarter__lt
        required: false
        in: query
        description: start_date__quarter__lt
        schema:
          type: string
      - name: start_date__quarter__lte
        required: false
        in: query
        description: start_date__quarter__lte
        schema:
          type: string
      - name: start_date__quarter__range
        required: false
        in: query
        description: start_date__quarter__range
        schema:
          type: string
      - name: start_date__quarter__regex
        required: false
        in: query
        description: start_date__quarter__regex
        schema:
          type: string
      - name: start_date__quarter__startswith
        required: false
        in: query
        description: start_date__quarter__startswith
        schema:
          type: string
      - name: start_date__range
        required: false
        in: query
        description: start_date__range
        schema:
          type: string
      - name: start_date__regex
        required: false
        in: query
        description: start_date__regex
        schema:
          type: string
      - name: start_date__second
        required: false
        in: query
        description: start_date__second
        schema:
          type: string
      - name: start_date__second__contained_by
        required: false
        in: query
        description: start_date__second__contained_by
        schema:
          type: string
      - name: start_date__second__contains
        required: false
        in: query
        description: start_date__second__contains
        schema:
          type: string
      - name: start_date__second__endswith
        required: false
        in: query
        description: start_date__second__endswith
        schema:
          type: string
      - name: start_date__second__gt
        required: false
        in: query
        description: start_date__second__gt
        schema:
          type: string
      - name: start_date__second__gte
        required: false
        in: query
        description: start_date__second__gte
        schema:
          type: string
      - name: start_date__second__icontains
        required: false
        in: query
        description: start_date__second__icontains
        schema:
          type: string
      - name: start_date__second__iendswith
        required: false
        in: query
        description: start_date__second__iendswith
        schema:
          type: string
      - name: start_date__second__iexact
        required: false
        in: query
        description: start_date__second__iexact
        schema:
          type: string
      - name: start_date__second__in
        required: false
        in: query
        description: start_date__second__in
        schema:
          type: string
      - name: start_date__second__iregex
        required: false
        in: query
        description: start_date__second__iregex
        schema:
          type: string
      - name: start_date__second__isnull
        required: false
        in: query
        description: start_date__second__isnull
        schema:
          type: string
      - name: start_date__second__istartswith
        required: false
        in: query
        description: start_date__second__istartswith
        schema:
          type: string
      - name: start_date__second__lt
        required: false
        in: query
        description: start_date__second__lt
        schema:
          type: string
      - name: start_date__second__lte
        required: false
        in: query
        description: start_date__second__lte
        schema:
          type: string
      - name: start_date__second__range
        required: false
        in: query
        description: start_date__second__range
        schema:
          type: string
      - name: start_date__second__regex
        required: false
        in: query
        description: start_date__second__regex
        schema:
          type: string
      - name: start_date__second__startswith
        required: false
        in: query
        description: start_date__second__startswith
        schema:
          type: string
      - name: start_date__startswith
        required: false
        in: query
        description: start_date__startswith
        schema:
          type: string
      - name: start_date__time
        required: false
        in: query
        description: start_date__time
        schema:
          type: string
      - name: start_date__time__contains
        required: false
        in: query
        description: start_date__time__contains
        schema:
          type: string
      - name: start_date__time__endswith
        required: false
        in: query
        description: start_date__time__endswith
        schema:
          type: string
      - name: start_date__time__gt
        required: false
        in: query
        description: start_date__time__gt
        schema:
          type: string
      - name: start_date__time__gte
        required: false
        in: query
        description: start_date__time__gte
        schema:
          type: string
      - name: start_date__time__hour
        required: false
        in: query
        description: start_date__time__hour
        schema:
          type: string
      - name: start_date__time__hour__contained_by
        required: false
        in: query
        description: start_date__time__hour__contained_by
        schema:
          type: string
      - name: start_date__time__hour__contains
        required: false
        in: query
        description: start_date__time__hour__contains
        schema:
          type: string
      - name: start_date__time__hour__endswith
        required: false
        in: query
        description: start_date__time__hour__endswith
        schema:
          type: string
      - name: start_date__time__hour__gt
        required: false
        in: query
        description: start_date__time__hour__gt
        schema:
          type: string
      - name: start_date__time__hour__gte
        required: false
        in: query
        description: start_date__time__hour__gte
        schema:
          type: string
      - name: start_date__time__hour__icontains
        required: false
        in: query
        description: start_date__time__hour__icontains
        schema:
          type: string
      - name: start_date__time__hour__iendswith
        required: false
        in: query
        description: start_date__time__hour__iendswith
        schema:
          type: string
      - name: start_date__time__hour__iexact
        required: false
        in: query
        description: start_date__time__hour__iexact
        schema:
          type: string
      - name: start_date__time__hour__in
        required: false
        in: query
        description: start_date__time__hour__in
        schema:
          type: string
      - name: start_date__time__hour__iregex
        required: false
        in: query
        description: start_date__time__hour__iregex
        schema:
          type: string
      - name: start_date__time__hour__isnull
        required: false
        in: query
        description: start_date__time__hour__isnull
        schema:
          type: string
      - name: start_date__time__hour__istartswith
        required: false
        in: query
        description: start_date__time__hour__istartswith
        schema:
          type: string
      - name: start_date__time__hour__lt
        required: false
        in: query
        description: start_date__time__hour__lt
        schema:
          type: string
      - name: start_date__time__hour__lte
        required: false
        in: query
        description: start_date__time__hour__lte
        schema:
          type: string
      - name: start_date__time__hour__range
        required: false
        in: query
        description: start_date__time__hour__range
        schema:
          type: string
      - name: start_date__time__hour__regex
        required: false
        in: query
        description: start_date__time__hour__regex
        schema:
          type: string
      - name: start_date__time__hour__startswith
        required: false
        in: query
        description: start_date__time__hour__startswith
        schema:
          type: string
      - name: start_date__time__icontains
        required: false
        in: query
        description: start_date__time__icontains
        schema:
          type: string
      - name: start_date__time__iendswith
        required: false
        in: query
        description: start_date__time__iendswith
        schema:
          type: string
      - name: start_date__time__iexact
        required: false
        in: query
        description: start_date__time__iexact
        schema:
          type: string
      - name: start_date__time__in
        required: false
        in: query
        description: start_date__time__in
        schema:
          type: string
      - name: start_date__time__iregex
        required: false
        in: query
        description: start_date__time__iregex
        schema:
          type: string
      - name: start_date__time__isnull
        required: false
        in: query
        description: start_date__time__isnull
        schema:
          type: string
      - name: start_date__time__istartswith
        required: false
        in: query
        description: start_date__time__istartswith
        schema:
          type: string
      - name: start_date__time__lt
        required: false
        in: query
        description: start_date__time__lt
        schema:
          type: string
      - name: start_date__time__lte
        required: false
        in: query
        description: start_date__time__lte
        schema:
          type: string
      - name: start_date__time__minute
        required: false
        in: query
        description: start_date__time__minute
        schema:
          type: string
      - name: start_date__time__minute__contained_by
        required: false
        in: query
        description: start_date__time__minute__contained_by
        schema:
          type: string
      - name: start_date__time__minute__contains
        required: false
        in: query
        description: start_date__time__minute__contains
        schema:
          type: string
      - name: start_date__time__minute__endswith
        required: false
        in: query
        description: start_date__time__minute__endswith
        schema:
          type: string
      - name: start_date__time__minute__gt
        required: false
        in: query
        description: start_date__time__minute__gt
        schema:
          type: string
      - name: start_date__time__minute__gte
        required: false
        in: query
        description: start_date__time__minute__gte
        schema:
          type: string
      - name: start_date__time__minute__icontains
        required: false
        in: query
        description: start_date__time__minute__icontains
        schema:
          type: string
      - name: start_date__time__minute__iendswith
        required: false
        in: query
        description: start_date__time__minute__iendswith
        schema:
          type: string
      - name: start_date__time__minute__iexact
        required: false
        in: query
        description: start_date__time__minute__iexact
        schema:
          type: string
      - name: start_date__time__minute__in
        required: false
        in: query
        description: start_date__time__minute__in
        schema:
          type: string
      - name: start_date__time__minute__iregex
        required: false
        in: query
        description: start_date__time__minute__iregex
        schema:
          type: string
      - name: start_date__time__minute__isnull
        required: false
        in: query
        description: start_date__time__minute__isnull
        schema:
          type: string
      - name: start_date__time__minute__istartswith
        required: false
        in: query
        description: start_date__time__minute__istartswith
        schema:
          type: string
      - name: start_date__time__minute__lt
        required: false
        in: query
        description: start_date__time__minute__lt
        schema:
          type: string
      - name: start_date__time__minute__lte
        required: false
        in: query
        description: start_date__time__minute__lte
        schema:
          type: string
      - name: start_date__time__minute__range
        required: false
        in: query
        description: start_date__time__minute__range
        schema:
          type: string
      - name: start_date__time__minute__regex
        required: false
        in: query
        description: start_date__time__minute__regex
        schema:
          type: string
      - name: start_date__time__minute__startswith
        required: false
        in: query
        description: start_date__time__minute__startswith
        schema:
          type: string
      - name: start_date__time__range
        required: false
        in: query
        description: start_date__time__range
        schema:
          type: string
      - name: start_date__time__regex
        required: false
        in: query
        description: start_date__time__regex
        schema:
          type: string
      - name: start_date__time__second
        required: false
        in: query
        description: start_date__time__second
        schema:
          type: string
      - name: start_date__time__second__contained_by
        required: false
        in: query
        description: start_date__time__second__contained_by
        schema:
          type: string
      - name: start_date__time__second__contains
        required: false
        in: query
        description: start_date__time__second__contains
        schema:
          type: string
      - name: start_date__time__second__endswith
        required: false
        in: query
        description: start_date__time__second__endswith
        schema:
          type: string
      - name: start_date__time__second__gt
        required: false
        in: query
        description: start_date__time__second__gt
        schema:
          type: string
      - name: start_date__time__second__gte
        required: false
        in: query
        description: start_date__time__second__gte
        schema:
          type: string
      - name: start_date__time__second__icontains
        required: false
        in: query
        description: start_date__time__second__icontains
        schema:
          type: string
      - name: start_date__time__second__iendswith
        required: false
        in: query
        description: start_date__time__second__iendswith
        schema:
          type: string
      - name: start_date__time__second__iexact
        required: false
        in: query
        description: start_date__time__second__iexact
        schema:
          type: string
      - name: start_date__time__second__in
        required: false
        in: query
        description: start_date__time__second__in
        schema:
          type: string
      - name: start_date__time__second__iregex
        required: false
        in: query
        description: start_date__time__second__iregex
        schema:
          type: string
      - name: start_date__time__second__isnull
        required: false
        in: query
        description: start_date__time__second__isnull
        schema:
          type: string
      - name: start_date__time__second__istartswith
        required: false
        in: query
        description: start_date__time__second__istartswith
        schema:
          type: string
      - name: start_date__time__second__lt
        required: false
        in: query
        description: start_date__time__second__lt
        schema:
          type: string
      - name: start_date__time__second__lte
        required: false
        in: query
        description: start_date__time__second__lte
        schema:
          type: string
      - name: start_date__time__second__range
        required: false
        in: query
        description: start_date__time__second__range
        schema:
          type: string
      - name: start_date__time__second__regex
        required: false
        in: query
        description: start_date__time__second__regex
        schema:
          type: string
      - name: start_date__time__second__startswith
        required: false
        in: query
        description: start_date__time__second__startswith
        schema:
          type: string
      - name: start_date__time__startswith
        required: false
        in: query
        description: start_date__time__startswith
        schema:
          type: string
      - name: start_date__week
        required: false
        in: query
        description: start_date__week
        schema:
          type: string
      - name: start_date__week__contained_by
        required: false
        in: query
        description: start_date__week__contained_by
        schema:
          type: string
      - name: start_date__week__contains
        required: false
        in: query
        description: start_date__week__contains
        schema:
          type: string
      - name: start_date__week__endswith
        required: false
        in: query
        description: start_date__week__endswith
        schema:
          type: string
      - name: start_date__week__gt
        required: false
        in: query
        description: start_date__week__gt
        schema:
          type: string
      - name: start_date__week__gte
        required: false
        in: query
        description: start_date__week__gte
        schema:
          type: string
      - name: start_date__week__icontains
        required: false
        in: query
        description: start_date__week__icontains
        schema:
          type: string
      - name: start_date__week__iendswith
        required: false
        in: query
        description: start_date__week__iendswith
        schema:
          type: string
      - name: start_date__week__iexact
        required: false
        in: query
        description: start_date__week__iexact
        schema:
          type: string
      - name: start_date__week__in
        required: false
        in: query
        description: start_date__week__in
        schema:
          type: string
      - name: start_date__week__iregex
        required: false
        in: query
        description: start_date__week__iregex
        schema:
          type: string
      - name: start_date__week__isnull
        required: false
        in: query
        description: start_date__week__isnull
        schema:
          type: string
      - name: start_date__week__istartswith
        required: false
        in: query
        description: start_date__week__istartswith
        schema:
          type: string
      - name: start_date__week__lt
        required: false
        in: query
        description: start_date__week__lt
        schema:
          type: string
      - name: start_date__week__lte
        required: false
        in: query
        description: start_date__week__lte
        schema:
          type: string
      - name: start_date__week__range
        required: false
        in: query
        description: start_date__week__range
        schema:
          type: string
      - name: start_date__week__regex
        required: false
        in: query
        description: start_date__week__regex
        schema:
          type: string
      - name: start_date__week__startswith
        required: false
        in: query
        description: start_date__week__startswith
        schema:
          type: string
      - name: start_date__week_day
        required: false
        in: query
        description: start_date__week_day
        schema:
          type: string
      - name: start_date__week_day__contained_by
        required: false
        in: query
        description: start_date__week_day__contained_by
        schema:
          type: string
      - name: start_date__week_day__contains
        required: false
        in: query
        description: start_date__week_day__contains
        schema:
          type: string
      - name: start_date__week_day__endswith
        required: false
        in: query
        description: start_date__week_day__endswith
        schema:
          type: string
      - name: start_date__week_day__gt
        required: false
        in: query
        description: start_date__week_day__gt
        schema:
          type: string
      - name: start_date__week_day__gte
        required: false
        in: query
        description: start_date__week_day__gte
        schema:
          type: string
      - name: start_date__week_day__icontains
        required: false
        in: query
        description: start_date__week_day__icontains
        schema:
          type: string
      - name: start_date__week_day__iendswith
        required: false
        in: query
        description: start_date__week_day__iendswith
        schema:
          type: string
      - name: start_date__week_day__iexact
        required: false
        in: query
        description: start_date__week_day__iexact
        schema:
          type: string
      - name: start_date__week_day__in
        required: false
        in: query
        description: start_date__week_day__in
        schema:
          type: string
      - name: start_date__week_day__iregex
        required: false
        in: query
        description: start_date__week_day__iregex
        schema:
          type: string
      - name: start_date__week_day__isnull
        required: false
        in: query
        description: start_date__week_day__isnull
        schema:
          type: string
      - name: start_date__week_day__istartswith
        required: false
        in: query
        description: start_date__week_day__istartswith
        schema:
          type: string
      - name: start_date__week_day__lt
        required: false
        in: query
        description: start_date__week_day__lt
        schema:
          type: string
      - name: start_date__week_day__lte
        required: false
        in: query
        description: start_date__week_day__lte
        schema:
          type: string
      - name: start_date__week_day__range
        required: false
        in: query
        description: start_date__week_day__range
        schema:
          type: string
      - name: start_date__week_day__regex
        required: false
        in: query
        description: start_date__week_day__regex
        schema:
          type: string
      - name: start_date__week_day__startswith
        required: false
        in: query
        description: start_date__week_day__startswith
        schema:
          type: string
      - name: start_date__year
        required: false
        in: query
        description: start_date__year
        schema:
          type: string
      - name: start_date__year__contained_by
        required: false
        in: query
        description: start_date__year__contained_by
        schema:
          type: string
      - name: start_date__year__contains
        required: false
        in: query
        description: start_date__year__contains
        schema:
          type: string
      - name: start_date__year__endswith
        required: false
        in: query
        description: start_date__year__endswith
        schema:
          type: string
      - name: start_date__year__gt
        required: false
        in: query
        description: start_date__year__gt
        schema:
          type: string
      - name: start_date__year__gte
        required: false
        in: query
        description: start_date__year__gte
        schema:
          type: string
      - name: start_date__year__icontains
        required: false
        in: query
        description: start_date__year__icontains
        schema:
          type: string
      - name: start_date__year__iendswith
        required: false
        in: query
        description: start_date__year__iendswith
        schema:
          type: string
      - name: start_date__year__iexact
        required: false
        in: query
        description: start_date__year__iexact
        schema:
          type: string
      - name: start_date__year__in
        required: false
        in: query
        description: start_date__year__in
        schema:
          type: string
      - name: start_date__year__iregex
        required: false
        in: query
        description: start_date__year__iregex
        schema:
          type: string
      - name: start_date__year__isnull
        required: false
        in: query
        description: start_date__year__isnull
        schema:
          type: string
      - name: start_date__year__istartswith
        required: false
        in: query
        description: start_date__year__istartswith
        schema:
          type: string
      - name: start_date__year__lt
        required: false
        in: query
        description: start_date__year__lt
        schema:
          type: string
      - name: start_date__year__lte
        required: false
        in: query
        description: start_date__year__lte
        schema:
          type: string
      - name: start_date__year__range
        required: false
        in: query
        description: start_date__year__range
        schema:
          type: string
      - name: start_date__year__regex
        required: false
        in: query
        description: start_date__year__regex
        schema:
          type: string
      - name: start_date__year__startswith
        required: false
        in: query
        description: start_date__year__startswith
        schema:
          type: string
      - name: users
        required: false
        in: query
        description: users
        schema:
          type: string
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: events_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: events_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/exam-answers/:
    get:
      operationId: exam_answers_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: exam
        required: false
        in: query
        description: exam
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Pending
          - Submitted
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - exam-answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamAnswerList'
          description: ''
    post:
      operationId: exam_answers_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - exam-answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAnswer'
          description: ''
  /api/exam-answers/{id}/:
    get:
      operationId: exam_answers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam answer.
        required: true
      tags:
      - exam-answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAnswer'
          description: ''
    put:
      operationId: exam_answers_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam answer.
        required: true
      tags:
      - exam-answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAnswer'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAnswer'
          description: ''
    patch:
      operationId: exam_answers_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam answer.
        required: true
      tags:
      - exam-answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamAnswer'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAnswer'
          description: ''
    delete:
      operationId: exam_answers_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam answer.
        required: true
      tags:
      - exam-answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/exam-answers/{id}/submit/:
    get:
      operationId: exam_answers_submit_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam answer.
        required: true
      tags:
      - exam-answers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAnswer'
          description: ''
  /api/exam-schedules/:
    get:
      operationId: exam_schedules_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: end_time
        required: false
        in: query
        description: end_time
        schema:
          type: string
      - name: exam
        required: false
        in: query
        description: exam
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: marks
        required: false
        in: query
        description: marks
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_time
        required: false
        in: query
        description: start_time
        schema:
          type: string
      tags:
      - exam-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamScheduleList'
          description: ''
    post:
      operationId: exam_schedules_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - exam-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/exam-schedules/{id}/:
    get:
      operationId: exam_schedules_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam schedule.
        required: true
      tags:
      - exam-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
    put:
      operationId: exam_schedules_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam schedule.
        required: true
      tags:
      - exam-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
    patch:
      operationId: exam_schedules_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam schedule.
        required: true
      tags:
      - exam-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
    delete:
      operationId: exam_schedules_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam schedule.
        required: true
      tags:
      - exam-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/exam-schedules/{id}/get-question-paper/:
    get:
      operationId: exam_schedules_get_question_paper_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam schedule.
        required: true
      tags:
      - exam-schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/exam-types/:
    get:
      operationId: exam_types_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - exam-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamTypesList'
          description: ''
    post:
      operationId: exam_types_create
      tags:
      - exam-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamTypes'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypes'
          description: ''
  /api/exam-types/{id}/:
    get:
      operationId: exam_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam types.
        required: true
      tags:
      - exam-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypes'
          description: ''
    put:
      operationId: exam_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam types.
        required: true
      tags:
      - exam-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamTypes'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypes'
          description: ''
    patch:
      operationId: exam_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam types.
        required: true
      tags:
      - exam-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamTypes'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypes'
          description: ''
    delete:
      operationId: exam_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam types.
        required: true
      tags:
      - exam-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/exams/:
    get:
      operationId: exams_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__contained_by
        required: false
        in: query
        description: end_date__contained_by
        schema:
          type: string
      - name: end_date__contains
        required: false
        in: query
        description: end_date__contains
        schema:
          type: string
      - name: end_date__day
        required: false
        in: query
        description: end_date__day
        schema:
          type: string
      - name: end_date__day__contained_by
        required: false
        in: query
        description: end_date__day__contained_by
        schema:
          type: string
      - name: end_date__day__contains
        required: false
        in: query
        description: end_date__day__contains
        schema:
          type: string
      - name: end_date__day__endswith
        required: false
        in: query
        description: end_date__day__endswith
        schema:
          type: string
      - name: end_date__day__gt
        required: false
        in: query
        description: end_date__day__gt
        schema:
          type: string
      - name: end_date__day__gte
        required: false
        in: query
        description: end_date__day__gte
        schema:
          type: string
      - name: end_date__day__icontains
        required: false
        in: query
        description: end_date__day__icontains
        schema:
          type: string
      - name: end_date__day__iendswith
        required: false
        in: query
        description: end_date__day__iendswith
        schema:
          type: string
      - name: end_date__day__iexact
        required: false
        in: query
        description: end_date__day__iexact
        schema:
          type: string
      - name: end_date__day__in
        required: false
        in: query
        description: end_date__day__in
        schema:
          type: string
      - name: end_date__day__iregex
        required: false
        in: query
        description: end_date__day__iregex
        schema:
          type: string
      - name: end_date__day__isnull
        required: false
        in: query
        description: end_date__day__isnull
        schema:
          type: string
      - name: end_date__day__istartswith
        required: false
        in: query
        description: end_date__day__istartswith
        schema:
          type: string
      - name: end_date__day__lt
        required: false
        in: query
        description: end_date__day__lt
        schema:
          type: string
      - name: end_date__day__lte
        required: false
        in: query
        description: end_date__day__lte
        schema:
          type: string
      - name: end_date__day__range
        required: false
        in: query
        description: end_date__day__range
        schema:
          type: string
      - name: end_date__day__regex
        required: false
        in: query
        description: end_date__day__regex
        schema:
          type: string
      - name: end_date__day__startswith
        required: false
        in: query
        description: end_date__day__startswith
        schema:
          type: string
      - name: end_date__endswith
        required: false
        in: query
        description: end_date__endswith
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__gte
        required: false
        in: query
        description: end_date__gte
        schema:
          type: string
      - name: end_date__icontains
        required: false
        in: query
        description: end_date__icontains
        schema:
          type: string
      - name: end_date__iendswith
        required: false
        in: query
        description: end_date__iendswith
        schema:
          type: string
      - name: end_date__iexact
        required: false
        in: query
        description: end_date__iexact
        schema:
          type: string
      - name: end_date__in
        required: false
        in: query
        description: end_date__in
        schema:
          type: string
      - name: end_date__iregex
        required: false
        in: query
        description: end_date__iregex
        schema:
          type: string
      - name: end_date__isnull
        required: false
        in: query
        description: end_date__isnull
        schema:
          type: string
      - name: end_date__iso_week_day
        required: false
        in: query
        description: end_date__iso_week_day
        schema:
          type: string
      - name: end_date__iso_week_day__contained_by
        required: false
        in: query
        description: end_date__iso_week_day__contained_by
        schema:
          type: string
      - name: end_date__iso_week_day__contains
        required: false
        in: query
        description: end_date__iso_week_day__contains
        schema:
          type: string
      - name: end_date__iso_week_day__endswith
        required: false
        in: query
        description: end_date__iso_week_day__endswith
        schema:
          type: string
      - name: end_date__iso_week_day__gt
        required: false
        in: query
        description: end_date__iso_week_day__gt
        schema:
          type: string
      - name: end_date__iso_week_day__gte
        required: false
        in: query
        description: end_date__iso_week_day__gte
        schema:
          type: string
      - name: end_date__iso_week_day__icontains
        required: false
        in: query
        description: end_date__iso_week_day__icontains
        schema:
          type: string
      - name: end_date__iso_week_day__iendswith
        required: false
        in: query
        description: end_date__iso_week_day__iendswith
        schema:
          type: string
      - name: end_date__iso_week_day__iexact
        required: false
        in: query
        description: end_date__iso_week_day__iexact
        schema:
          type: string
      - name: end_date__iso_week_day__in
        required: false
        in: query
        description: end_date__iso_week_day__in
        schema:
          type: string
      - name: end_date__iso_week_day__iregex
        required: false
        in: query
        description: end_date__iso_week_day__iregex
        schema:
          type: string
      - name: end_date__iso_week_day__isnull
        required: false
        in: query
        description: end_date__iso_week_day__isnull
        schema:
          type: string
      - name: end_date__iso_week_day__istartswith
        required: false
        in: query
        description: end_date__iso_week_day__istartswith
        schema:
          type: string
      - name: end_date__iso_week_day__lt
        required: false
        in: query
        description: end_date__iso_week_day__lt
        schema:
          type: string
      - name: end_date__iso_week_day__lte
        required: false
        in: query
        description: end_date__iso_week_day__lte
        schema:
          type: string
      - name: end_date__iso_week_day__range
        required: false
        in: query
        description: end_date__iso_week_day__range
        schema:
          type: string
      - name: end_date__iso_week_day__regex
        required: false
        in: query
        description: end_date__iso_week_day__regex
        schema:
          type: string
      - name: end_date__iso_week_day__startswith
        required: false
        in: query
        description: end_date__iso_week_day__startswith
        schema:
          type: string
      - name: end_date__iso_year
        required: false
        in: query
        description: end_date__iso_year
        schema:
          type: string
      - name: end_date__iso_year__contained_by
        required: false
        in: query
        description: end_date__iso_year__contained_by
        schema:
          type: string
      - name: end_date__iso_year__contains
        required: false
        in: query
        description: end_date__iso_year__contains
        schema:
          type: string
      - name: end_date__iso_year__endswith
        required: false
        in: query
        description: end_date__iso_year__endswith
        schema:
          type: string
      - name: end_date__iso_year__gt
        required: false
        in: query
        description: end_date__iso_year__gt
        schema:
          type: string
      - name: end_date__iso_year__gte
        required: false
        in: query
        description: end_date__iso_year__gte
        schema:
          type: string
      - name: end_date__iso_year__icontains
        required: false
        in: query
        description: end_date__iso_year__icontains
        schema:
          type: string
      - name: end_date__iso_year__iendswith
        required: false
        in: query
        description: end_date__iso_year__iendswith
        schema:
          type: string
      - name: end_date__iso_year__iexact
        required: false
        in: query
        description: end_date__iso_year__iexact
        schema:
          type: string
      - name: end_date__iso_year__in
        required: false
        in: query
        description: end_date__iso_year__in
        schema:
          type: string
      - name: end_date__iso_year__iregex
        required: false
        in: query
        description: end_date__iso_year__iregex
        schema:
          type: string
      - name: end_date__iso_year__isnull
        required: false
        in: query
        description: end_date__iso_year__isnull
        schema:
          type: string
      - name: end_date__iso_year__istartswith
        required: false
        in: query
        description: end_date__iso_year__istartswith
        schema:
          type: string
      - name: end_date__iso_year__lt
        required: false
        in: query
        description: end_date__iso_year__lt
        schema:
          type: string
      - name: end_date__iso_year__lte
        required: false
        in: query
        description: end_date__iso_year__lte
        schema:
          type: string
      - name: end_date__iso_year__range
        required: false
        in: query
        description: end_date__iso_year__range
        schema:
          type: string
      - name: end_date__iso_year__regex
        required: false
        in: query
        description: end_date__iso_year__regex
        schema:
          type: string
      - name: end_date__iso_year__startswith
        required: false
        in: query
        description: end_date__iso_year__startswith
        schema:
          type: string
      - name: end_date__istartswith
        required: false
        in: query
        description: end_date__istartswith
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: end_date__lte
        required: false
        in: query
        description: end_date__lte
        schema:
          type: string
      - name: end_date__month
        required: false
        in: query
        description: end_date__month
        schema:
          type: string
      - name: end_date__month__contained_by
        required: false
        in: query
        description: end_date__month__contained_by
        schema:
          type: string
      - name: end_date__month__contains
        required: false
        in: query
        description: end_date__month__contains
        schema:
          type: string
      - name: end_date__month__endswith
        required: false
        in: query
        description: end_date__month__endswith
        schema:
          type: string
      - name: end_date__month__gt
        required: false
        in: query
        description: end_date__month__gt
        schema:
          type: string
      - name: end_date__month__gte
        required: false
        in: query
        description: end_date__month__gte
        schema:
          type: string
      - name: end_date__month__icontains
        required: false
        in: query
        description: end_date__month__icontains
        schema:
          type: string
      - name: end_date__month__iendswith
        required: false
        in: query
        description: end_date__month__iendswith
        schema:
          type: string
      - name: end_date__month__iexact
        required: false
        in: query
        description: end_date__month__iexact
        schema:
          type: string
      - name: end_date__month__in
        required: false
        in: query
        description: end_date__month__in
        schema:
          type: string
      - name: end_date__month__iregex
        required: false
        in: query
        description: end_date__month__iregex
        schema:
          type: string
      - name: end_date__month__isnull
        required: false
        in: query
        description: end_date__month__isnull
        schema:
          type: string
      - name: end_date__month__istartswith
        required: false
        in: query
        description: end_date__month__istartswith
        schema:
          type: string
      - name: end_date__month__lt
        required: false
        in: query
        description: end_date__month__lt
        schema:
          type: string
      - name: end_date__month__lte
        required: false
        in: query
        description: end_date__month__lte
        schema:
          type: string
      - name: end_date__month__range
        required: false
        in: query
        description: end_date__month__range
        schema:
          type: string
      - name: end_date__month__regex
        required: false
        in: query
        description: end_date__month__regex
        schema:
          type: string
      - name: end_date__month__startswith
        required: false
        in: query
        description: end_date__month__startswith
        schema:
          type: string
      - name: end_date__quarter
        required: false
        in: query
        description: end_date__quarter
        schema:
          type: string
      - name: end_date__quarter__contained_by
        required: false
        in: query
        description: end_date__quarter__contained_by
        schema:
          type: string
      - name: end_date__quarter__contains
        required: false
        in: query
        description: end_date__quarter__contains
        schema:
          type: string
      - name: end_date__quarter__endswith
        required: false
        in: query
        description: end_date__quarter__endswith
        schema:
          type: string
      - name: end_date__quarter__gt
        required: false
        in: query
        description: end_date__quarter__gt
        schema:
          type: string
      - name: end_date__quarter__gte
        required: false
        in: query
        description: end_date__quarter__gte
        schema:
          type: string
      - name: end_date__quarter__icontains
        required: false
        in: query
        description: end_date__quarter__icontains
        schema:
          type: string
      - name: end_date__quarter__iendswith
        required: false
        in: query
        description: end_date__quarter__iendswith
        schema:
          type: string
      - name: end_date__quarter__iexact
        required: false
        in: query
        description: end_date__quarter__iexact
        schema:
          type: string
      - name: end_date__quarter__in
        required: false
        in: query
        description: end_date__quarter__in
        schema:
          type: string
      - name: end_date__quarter__iregex
        required: false
        in: query
        description: end_date__quarter__iregex
        schema:
          type: string
      - name: end_date__quarter__isnull
        required: false
        in: query
        description: end_date__quarter__isnull
        schema:
          type: string
      - name: end_date__quarter__istartswith
        required: false
        in: query
        description: end_date__quarter__istartswith
        schema:
          type: string
      - name: end_date__quarter__lt
        required: false
        in: query
        description: end_date__quarter__lt
        schema:
          type: string
      - name: end_date__quarter__lte
        required: false
        in: query
        description: end_date__quarter__lte
        schema:
          type: string
      - name: end_date__quarter__range
        required: false
        in: query
        description: end_date__quarter__range
        schema:
          type: string
      - name: end_date__quarter__regex
        required: false
        in: query
        description: end_date__quarter__regex
        schema:
          type: string
      - name: end_date__quarter__startswith
        required: false
        in: query
        description: end_date__quarter__startswith
        schema:
          type: string
      - name: end_date__range
        required: false
        in: query
        description: end_date__range
        schema:
          type: string
      - name: end_date__regex
        required: false
        in: query
        description: end_date__regex
        schema:
          type: string
      - name: end_date__startswith
        required: false
        in: query
        description: end_date__startswith
        schema:
          type: string
      - name: end_date__week
        required: false
        in: query
        description: end_date__week
        schema:
          type: string
      - name: end_date__week__contained_by
        required: false
        in: query
        description: end_date__week__contained_by
        schema:
          type: string
      - name: end_date__week__contains
        required: false
        in: query
        description: end_date__week__contains
        schema:
          type: string
      - name: end_date__week__endswith
        required: false
        in: query
        description: end_date__week__endswith
        schema:
          type: string
      - name: end_date__week__gt
        required: false
        in: query
        description: end_date__week__gt
        schema:
          type: string
      - name: end_date__week__gte
        required: false
        in: query
        description: end_date__week__gte
        schema:
          type: string
      - name: end_date__week__icontains
        required: false
        in: query
        description: end_date__week__icontains
        schema:
          type: string
      - name: end_date__week__iendswith
        required: false
        in: query
        description: end_date__week__iendswith
        schema:
          type: string
      - name: end_date__week__iexact
        required: false
        in: query
        description: end_date__week__iexact
        schema:
          type: string
      - name: end_date__week__in
        required: false
        in: query
        description: end_date__week__in
        schema:
          type: string
      - name: end_date__week__iregex
        required: false
        in: query
        description: end_date__week__iregex
        schema:
          type: string
      - name: end_date__week__isnull
        required: false
        in: query
        description: end_date__week__isnull
        schema:
          type: string
      - name: end_date__week__istartswith
        required: false
        in: query
        description: end_date__week__istartswith
        schema:
          type: string
      - name: end_date__week__lt
        required: false
        in: query
        description: end_date__week__lt
        schema:
          type: string
      - name: end_date__week__lte
        required: false
        in: query
        description: end_date__week__lte
        schema:
          type: string
      - name: end_date__week__range
        required: false
        in: query
        description: end_date__week__range
        schema:
          type: string
      - name: end_date__week__regex
        required: false
        in: query
        description: end_date__week__regex
        schema:
          type: string
      - name: end_date__week__startswith
        required: false
        in: query
        description: end_date__week__startswith
        schema:
          type: string
      - name: end_date__week_day
        required: false
        in: query
        description: end_date__week_day
        schema:
          type: string
      - name: end_date__week_day__contained_by
        required: false
        in: query
        description: end_date__week_day__contained_by
        schema:
          type: string
      - name: end_date__week_day__contains
        required: false
        in: query
        description: end_date__week_day__contains
        schema:
          type: string
      - name: end_date__week_day__endswith
        required: false
        in: query
        description: end_date__week_day__endswith
        schema:
          type: string
      - name: end_date__week_day__gt
        required: false
        in: query
        description: end_date__week_day__gt
        schema:
          type: string
      - name: end_date__week_day__gte
        required: false
        in: query
        description: end_date__week_day__gte
        schema:
          type: string
      - name: end_date__week_day__icontains
        required: false
        in: query
        description: end_date__week_day__icontains
        schema:
          type: string
      - name: end_date__week_day__iendswith
        required: false
        in: query
        description: end_date__week_day__iendswith
        schema:
          type: string
      - name: end_date__week_day__iexact
        required: false
        in: query
        description: end_date__week_day__iexact
        schema:
          type: string
      - name: end_date__week_day__in
        required: false
        in: query
        description: end_date__week_day__in
        schema:
          type: string
      - name: end_date__week_day__iregex
        required: false
        in: query
        description: end_date__week_day__iregex
        schema:
          type: string
      - name: end_date__week_day__isnull
        required: false
        in: query
        description: end_date__week_day__isnull
        schema:
          type: string
      - name: end_date__week_day__istartswith
        required: false
        in: query
        description: end_date__week_day__istartswith
        schema:
          type: string
      - name: end_date__week_day__lt
        required: false
        in: query
        description: end_date__week_day__lt
        schema:
          type: string
      - name: end_date__week_day__lte
        required: false
        in: query
        description: end_date__week_day__lte
        schema:
          type: string
      - name: end_date__week_day__range
        required: false
        in: query
        description: end_date__week_day__range
        schema:
          type: string
      - name: end_date__week_day__regex
        required: false
        in: query
        description: end_date__week_day__regex
        schema:
          type: string
      - name: end_date__week_day__startswith
        required: false
        in: query
        description: end_date__week_day__startswith
        schema:
          type: string
      - name: end_date__year
        required: false
        in: query
        description: end_date__year
        schema:
          type: string
      - name: end_date__year__contained_by
        required: false
        in: query
        description: end_date__year__contained_by
        schema:
          type: string
      - name: end_date__year__contains
        required: false
        in: query
        description: end_date__year__contains
        schema:
          type: string
      - name: end_date__year__endswith
        required: false
        in: query
        description: end_date__year__endswith
        schema:
          type: string
      - name: end_date__year__gt
        required: false
        in: query
        description: end_date__year__gt
        schema:
          type: string
      - name: end_date__year__gte
        required: false
        in: query
        description: end_date__year__gte
        schema:
          type: string
      - name: end_date__year__icontains
        required: false
        in: query
        description: end_date__year__icontains
        schema:
          type: string
      - name: end_date__year__iendswith
        required: false
        in: query
        description: end_date__year__iendswith
        schema:
          type: string
      - name: end_date__year__iexact
        required: false
        in: query
        description: end_date__year__iexact
        schema:
          type: string
      - name: end_date__year__in
        required: false
        in: query
        description: end_date__year__in
        schema:
          type: string
      - name: end_date__year__iregex
        required: false
        in: query
        description: end_date__year__iregex
        schema:
          type: string
      - name: end_date__year__isnull
        required: false
        in: query
        description: end_date__year__isnull
        schema:
          type: string
      - name: end_date__year__istartswith
        required: false
        in: query
        description: end_date__year__istartswith
        schema:
          type: string
      - name: end_date__year__lt
        required: false
        in: query
        description: end_date__year__lt
        schema:
          type: string
      - name: end_date__year__lte
        required: false
        in: query
        description: end_date__year__lte
        schema:
          type: string
      - name: end_date__year__range
        required: false
        in: query
        description: end_date__year__range
        schema:
          type: string
      - name: end_date__year__regex
        required: false
        in: query
        description: end_date__year__regex
        schema:
          type: string
      - name: end_date__year__startswith
        required: false
        in: query
        description: end_date__year__startswith
        schema:
          type: string
      - name: exam_types
        required: false
        in: query
        description: exam_types
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_online
        required: false
        in: query
        description: is_online
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__contained_by
        required: false
        in: query
        description: start_date__contained_by
        schema:
          type: string
      - name: start_date__contains
        required: false
        in: query
        description: start_date__contains
        schema:
          type: string
      - name: start_date__day
        required: false
        in: query
        description: start_date__day
        schema:
          type: string
      - name: start_date__day__contained_by
        required: false
        in: query
        description: start_date__day__contained_by
        schema:
          type: string
      - name: start_date__day__contains
        required: false
        in: query
        description: start_date__day__contains
        schema:
          type: string
      - name: start_date__day__endswith
        required: false
        in: query
        description: start_date__day__endswith
        schema:
          type: string
      - name: start_date__day__gt
        required: false
        in: query
        description: start_date__day__gt
        schema:
          type: string
      - name: start_date__day__gte
        required: false
        in: query
        description: start_date__day__gte
        schema:
          type: string
      - name: start_date__day__icontains
        required: false
        in: query
        description: start_date__day__icontains
        schema:
          type: string
      - name: start_date__day__iendswith
        required: false
        in: query
        description: start_date__day__iendswith
        schema:
          type: string
      - name: start_date__day__iexact
        required: false
        in: query
        description: start_date__day__iexact
        schema:
          type: string
      - name: start_date__day__in
        required: false
        in: query
        description: start_date__day__in
        schema:
          type: string
      - name: start_date__day__iregex
        required: false
        in: query
        description: start_date__day__iregex
        schema:
          type: string
      - name: start_date__day__isnull
        required: false
        in: query
        description: start_date__day__isnull
        schema:
          type: string
      - name: start_date__day__istartswith
        required: false
        in: query
        description: start_date__day__istartswith
        schema:
          type: string
      - name: start_date__day__lt
        required: false
        in: query
        description: start_date__day__lt
        schema:
          type: string
      - name: start_date__day__lte
        required: false
        in: query
        description: start_date__day__lte
        schema:
          type: string
      - name: start_date__day__range
        required: false
        in: query
        description: start_date__day__range
        schema:
          type: string
      - name: start_date__day__regex
        required: false
        in: query
        description: start_date__day__regex
        schema:
          type: string
      - name: start_date__day__startswith
        required: false
        in: query
        description: start_date__day__startswith
        schema:
          type: string
      - name: start_date__endswith
        required: false
        in: query
        description: start_date__endswith
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__gte
        required: false
        in: query
        description: start_date__gte
        schema:
          type: string
      - name: start_date__icontains
        required: false
        in: query
        description: start_date__icontains
        schema:
          type: string
      - name: start_date__iendswith
        required: false
        in: query
        description: start_date__iendswith
        schema:
          type: string
      - name: start_date__iexact
        required: false
        in: query
        description: start_date__iexact
        schema:
          type: string
      - name: start_date__in
        required: false
        in: query
        description: start_date__in
        schema:
          type: string
      - name: start_date__iregex
        required: false
        in: query
        description: start_date__iregex
        schema:
          type: string
      - name: start_date__isnull
        required: false
        in: query
        description: start_date__isnull
        schema:
          type: string
      - name: start_date__iso_week_day
        required: false
        in: query
        description: start_date__iso_week_day
        schema:
          type: string
      - name: start_date__iso_week_day__contained_by
        required: false
        in: query
        description: start_date__iso_week_day__contained_by
        schema:
          type: string
      - name: start_date__iso_week_day__contains
        required: false
        in: query
        description: start_date__iso_week_day__contains
        schema:
          type: string
      - name: start_date__iso_week_day__endswith
        required: false
        in: query
        description: start_date__iso_week_day__endswith
        schema:
          type: string
      - name: start_date__iso_week_day__gt
        required: false
        in: query
        description: start_date__iso_week_day__gt
        schema:
          type: string
      - name: start_date__iso_week_day__gte
        required: false
        in: query
        description: start_date__iso_week_day__gte
        schema:
          type: string
      - name: start_date__iso_week_day__icontains
        required: false
        in: query
        description: start_date__iso_week_day__icontains
        schema:
          type: string
      - name: start_date__iso_week_day__iendswith
        required: false
        in: query
        description: start_date__iso_week_day__iendswith
        schema:
          type: string
      - name: start_date__iso_week_day__iexact
        required: false
        in: query
        description: start_date__iso_week_day__iexact
        schema:
          type: string
      - name: start_date__iso_week_day__in
        required: false
        in: query
        description: start_date__iso_week_day__in
        schema:
          type: string
      - name: start_date__iso_week_day__iregex
        required: false
        in: query
        description: start_date__iso_week_day__iregex
        schema:
          type: string
      - name: start_date__iso_week_day__isnull
        required: false
        in: query
        description: start_date__iso_week_day__isnull
        schema:
          type: string
      - name: start_date__iso_week_day__istartswith
        required: false
        in: query
        description: start_date__iso_week_day__istartswith
        schema:
          type: string
      - name: start_date__iso_week_day__lt
        required: false
        in: query
        description: start_date__iso_week_day__lt
        schema:
          type: string
      - name: start_date__iso_week_day__lte
        required: false
        in: query
        description: start_date__iso_week_day__lte
        schema:
          type: string
      - name: start_date__iso_week_day__range
        required: false
        in: query
        description: start_date__iso_week_day__range
        schema:
          type: string
      - name: start_date__iso_week_day__regex
        required: false
        in: query
        description: start_date__iso_week_day__regex
        schema:
          type: string
      - name: start_date__iso_week_day__startswith
        required: false
        in: query
        description: start_date__iso_week_day__startswith
        schema:
          type: string
      - name: start_date__iso_year
        required: false
        in: query
        description: start_date__iso_year
        schema:
          type: string
      - name: start_date__iso_year__contained_by
        required: false
        in: query
        description: start_date__iso_year__contained_by
        schema:
          type: string
      - name: start_date__iso_year__contains
        required: false
        in: query
        description: start_date__iso_year__contains
        schema:
          type: string
      - name: start_date__iso_year__endswith
        required: false
        in: query
        description: start_date__iso_year__endswith
        schema:
          type: string
      - name: start_date__iso_year__gt
        required: false
        in: query
        description: start_date__iso_year__gt
        schema:
          type: string
      - name: start_date__iso_year__gte
        required: false
        in: query
        description: start_date__iso_year__gte
        schema:
          type: string
      - name: start_date__iso_year__icontains
        required: false
        in: query
        description: start_date__iso_year__icontains
        schema:
          type: string
      - name: start_date__iso_year__iendswith
        required: false
        in: query
        description: start_date__iso_year__iendswith
        schema:
          type: string
      - name: start_date__iso_year__iexact
        required: false
        in: query
        description: start_date__iso_year__iexact
        schema:
          type: string
      - name: start_date__iso_year__in
        required: false
        in: query
        description: start_date__iso_year__in
        schema:
          type: string
      - name: start_date__iso_year__iregex
        required: false
        in: query
        description: start_date__iso_year__iregex
        schema:
          type: string
      - name: start_date__iso_year__isnull
        required: false
        in: query
        description: start_date__iso_year__isnull
        schema:
          type: string
      - name: start_date__iso_year__istartswith
        required: false
        in: query
        description: start_date__iso_year__istartswith
        schema:
          type: string
      - name: start_date__iso_year__lt
        required: false
        in: query
        description: start_date__iso_year__lt
        schema:
          type: string
      - name: start_date__iso_year__lte
        required: false
        in: query
        description: start_date__iso_year__lte
        schema:
          type: string
      - name: start_date__iso_year__range
        required: false
        in: query
        description: start_date__iso_year__range
        schema:
          type: string
      - name: start_date__iso_year__regex
        required: false
        in: query
        description: start_date__iso_year__regex
        schema:
          type: string
      - name: start_date__iso_year__startswith
        required: false
        in: query
        description: start_date__iso_year__startswith
        schema:
          type: string
      - name: start_date__istartswith
        required: false
        in: query
        description: start_date__istartswith
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: start_date__lte
        required: false
        in: query
        description: start_date__lte
        schema:
          type: string
      - name: start_date__month
        required: false
        in: query
        description: start_date__month
        schema:
          type: string
      - name: start_date__month__contained_by
        required: false
        in: query
        description: start_date__month__contained_by
        schema:
          type: string
      - name: start_date__month__contains
        required: false
        in: query
        description: start_date__month__contains
        schema:
          type: string
      - name: start_date__month__endswith
        required: false
        in: query
        description: start_date__month__endswith
        schema:
          type: string
      - name: start_date__month__gt
        required: false
        in: query
        description: start_date__month__gt
        schema:
          type: string
      - name: start_date__month__gte
        required: false
        in: query
        description: start_date__month__gte
        schema:
          type: string
      - name: start_date__month__icontains
        required: false
        in: query
        description: start_date__month__icontains
        schema:
          type: string
      - name: start_date__month__iendswith
        required: false
        in: query
        description: start_date__month__iendswith
        schema:
          type: string
      - name: start_date__month__iexact
        required: false
        in: query
        description: start_date__month__iexact
        schema:
          type: string
      - name: start_date__month__in
        required: false
        in: query
        description: start_date__month__in
        schema:
          type: string
      - name: start_date__month__iregex
        required: false
        in: query
        description: start_date__month__iregex
        schema:
          type: string
      - name: start_date__month__isnull
        required: false
        in: query
        description: start_date__month__isnull
        schema:
          type: string
      - name: start_date__month__istartswith
        required: false
        in: query
        description: start_date__month__istartswith
        schema:
          type: string
      - name: start_date__month__lt
        required: false
        in: query
        description: start_date__month__lt
        schema:
          type: string
      - name: start_date__month__lte
        required: false
        in: query
        description: start_date__month__lte
        schema:
          type: string
      - name: start_date__month__range
        required: false
        in: query
        description: start_date__month__range
        schema:
          type: string
      - name: start_date__month__regex
        required: false
        in: query
        description: start_date__month__regex
        schema:
          type: string
      - name: start_date__month__startswith
        required: false
        in: query
        description: start_date__month__startswith
        schema:
          type: string
      - name: start_date__quarter
        required: false
        in: query
        description: start_date__quarter
        schema:
          type: string
      - name: start_date__quarter__contained_by
        required: false
        in: query
        description: start_date__quarter__contained_by
        schema:
          type: string
      - name: start_date__quarter__contains
        required: false
        in: query
        description: start_date__quarter__contains
        schema:
          type: string
      - name: start_date__quarter__endswith
        required: false
        in: query
        description: start_date__quarter__endswith
        schema:
          type: string
      - name: start_date__quarter__gt
        required: false
        in: query
        description: start_date__quarter__gt
        schema:
          type: string
      - name: start_date__quarter__gte
        required: false
        in: query
        description: start_date__quarter__gte
        schema:
          type: string
      - name: start_date__quarter__icontains
        required: false
        in: query
        description: start_date__quarter__icontains
        schema:
          type: string
      - name: start_date__quarter__iendswith
        required: false
        in: query
        description: start_date__quarter__iendswith
        schema:
          type: string
      - name: start_date__quarter__iexact
        required: false
        in: query
        description: start_date__quarter__iexact
        schema:
          type: string
      - name: start_date__quarter__in
        required: false
        in: query
        description: start_date__quarter__in
        schema:
          type: string
      - name: start_date__quarter__iregex
        required: false
        in: query
        description: start_date__quarter__iregex
        schema:
          type: string
      - name: start_date__quarter__isnull
        required: false
        in: query
        description: start_date__quarter__isnull
        schema:
          type: string
      - name: start_date__quarter__istartswith
        required: false
        in: query
        description: start_date__quarter__istartswith
        schema:
          type: string
      - name: start_date__quarter__lt
        required: false
        in: query
        description: start_date__quarter__lt
        schema:
          type: string
      - name: start_date__quarter__lte
        required: false
        in: query
        description: start_date__quarter__lte
        schema:
          type: string
      - name: start_date__quarter__range
        required: false
        in: query
        description: start_date__quarter__range
        schema:
          type: string
      - name: start_date__quarter__regex
        required: false
        in: query
        description: start_date__quarter__regex
        schema:
          type: string
      - name: start_date__quarter__startswith
        required: false
        in: query
        description: start_date__quarter__startswith
        schema:
          type: string
      - name: start_date__range
        required: false
        in: query
        description: start_date__range
        schema:
          type: string
      - name: start_date__regex
        required: false
        in: query
        description: start_date__regex
        schema:
          type: string
      - name: start_date__startswith
        required: false
        in: query
        description: start_date__startswith
        schema:
          type: string
      - name: start_date__week
        required: false
        in: query
        description: start_date__week
        schema:
          type: string
      - name: start_date__week__contained_by
        required: false
        in: query
        description: start_date__week__contained_by
        schema:
          type: string
      - name: start_date__week__contains
        required: false
        in: query
        description: start_date__week__contains
        schema:
          type: string
      - name: start_date__week__endswith
        required: false
        in: query
        description: start_date__week__endswith
        schema:
          type: string
      - name: start_date__week__gt
        required: false
        in: query
        description: start_date__week__gt
        schema:
          type: string
      - name: start_date__week__gte
        required: false
        in: query
        description: start_date__week__gte
        schema:
          type: string
      - name: start_date__week__icontains
        required: false
        in: query
        description: start_date__week__icontains
        schema:
          type: string
      - name: start_date__week__iendswith
        required: false
        in: query
        description: start_date__week__iendswith
        schema:
          type: string
      - name: start_date__week__iexact
        required: false
        in: query
        description: start_date__week__iexact
        schema:
          type: string
      - name: start_date__week__in
        required: false
        in: query
        description: start_date__week__in
        schema:
          type: string
      - name: start_date__week__iregex
        required: false
        in: query
        description: start_date__week__iregex
        schema:
          type: string
      - name: start_date__week__isnull
        required: false
        in: query
        description: start_date__week__isnull
        schema:
          type: string
      - name: start_date__week__istartswith
        required: false
        in: query
        description: start_date__week__istartswith
        schema:
          type: string
      - name: start_date__week__lt
        required: false
        in: query
        description: start_date__week__lt
        schema:
          type: string
      - name: start_date__week__lte
        required: false
        in: query
        description: start_date__week__lte
        schema:
          type: string
      - name: start_date__week__range
        required: false
        in: query
        description: start_date__week__range
        schema:
          type: string
      - name: start_date__week__regex
        required: false
        in: query
        description: start_date__week__regex
        schema:
          type: string
      - name: start_date__week__startswith
        required: false
        in: query
        description: start_date__week__startswith
        schema:
          type: string
      - name: start_date__week_day
        required: false
        in: query
        description: start_date__week_day
        schema:
          type: string
      - name: start_date__week_day__contained_by
        required: false
        in: query
        description: start_date__week_day__contained_by
        schema:
          type: string
      - name: start_date__week_day__contains
        required: false
        in: query
        description: start_date__week_day__contains
        schema:
          type: string
      - name: start_date__week_day__endswith
        required: false
        in: query
        description: start_date__week_day__endswith
        schema:
          type: string
      - name: start_date__week_day__gt
        required: false
        in: query
        description: start_date__week_day__gt
        schema:
          type: string
      - name: start_date__week_day__gte
        required: false
        in: query
        description: start_date__week_day__gte
        schema:
          type: string
      - name: start_date__week_day__icontains
        required: false
        in: query
        description: start_date__week_day__icontains
        schema:
          type: string
      - name: start_date__week_day__iendswith
        required: false
        in: query
        description: start_date__week_day__iendswith
        schema:
          type: string
      - name: start_date__week_day__iexact
        required: false
        in: query
        description: start_date__week_day__iexact
        schema:
          type: string
      - name: start_date__week_day__in
        required: false
        in: query
        description: start_date__week_day__in
        schema:
          type: string
      - name: start_date__week_day__iregex
        required: false
        in: query
        description: start_date__week_day__iregex
        schema:
          type: string
      - name: start_date__week_day__isnull
        required: false
        in: query
        description: start_date__week_day__isnull
        schema:
          type: string
      - name: start_date__week_day__istartswith
        required: false
        in: query
        description: start_date__week_day__istartswith
        schema:
          type: string
      - name: start_date__week_day__lt
        required: false
        in: query
        description: start_date__week_day__lt
        schema:
          type: string
      - name: start_date__week_day__lte
        required: false
        in: query
        description: start_date__week_day__lte
        schema:
          type: string
      - name: start_date__week_day__range
        required: false
        in: query
        description: start_date__week_day__range
        schema:
          type: string
      - name: start_date__week_day__regex
        required: false
        in: query
        description: start_date__week_day__regex
        schema:
          type: string
      - name: start_date__week_day__startswith
        required: false
        in: query
        description: start_date__week_day__startswith
        schema:
          type: string
      - name: start_date__year
        required: false
        in: query
        description: start_date__year
        schema:
          type: string
      - name: start_date__year__contained_by
        required: false
        in: query
        description: start_date__year__contained_by
        schema:
          type: string
      - name: start_date__year__contains
        required: false
        in: query
        description: start_date__year__contains
        schema:
          type: string
      - name: start_date__year__endswith
        required: false
        in: query
        description: start_date__year__endswith
        schema:
          type: string
      - name: start_date__year__gt
        required: false
        in: query
        description: start_date__year__gt
        schema:
          type: string
      - name: start_date__year__gte
        required: false
        in: query
        description: start_date__year__gte
        schema:
          type: string
      - name: start_date__year__icontains
        required: false
        in: query
        description: start_date__year__icontains
        schema:
          type: string
      - name: start_date__year__iendswith
        required: false
        in: query
        description: start_date__year__iendswith
        schema:
          type: string
      - name: start_date__year__iexact
        required: false
        in: query
        description: start_date__year__iexact
        schema:
          type: string
      - name: start_date__year__in
        required: false
        in: query
        description: start_date__year__in
        schema:
          type: string
      - name: start_date__year__iregex
        required: false
        in: query
        description: start_date__year__iregex
        schema:
          type: string
      - name: start_date__year__isnull
        required: false
        in: query
        description: start_date__year__isnull
        schema:
          type: string
      - name: start_date__year__istartswith
        required: false
        in: query
        description: start_date__year__istartswith
        schema:
          type: string
      - name: start_date__year__lt
        required: false
        in: query
        description: start_date__year__lt
        schema:
          type: string
      - name: start_date__year__lte
        required: false
        in: query
        description: start_date__year__lte
        schema:
          type: string
      - name: start_date__year__range
        required: false
        in: query
        description: start_date__year__range
        schema:
          type: string
      - name: start_date__year__regex
        required: false
        in: query
        description: start_date__year__regex
        schema:
          type: string
      - name: start_date__year__startswith
        required: false
        in: query
        description: start_date__year__startswith
        schema:
          type: string
      tags:
      - exams
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamList'
          description: ''
    post:
      operationId: exams_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exam'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
  /api/exams/{id}/:
    get:
      operationId: exams_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    put:
      operationId: exams_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exam'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    patch:
      operationId: exams_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExam'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    delete:
      operationId: exams_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/expenditure/:
    get:
      operationId: expenditure_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: category
        required: false
        in: query
        description: category
        schema:
          type: string
          enum:
          - salary
          - electricity
          - stationery
          - purchase
          - transport
          - utilities
          - events
          - maintance
          - others
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: payment_mode
        required: false
        in: query
        description: payment_mode
        schema:
          type: string
          enum:
          - cash
          - upi
          - bank_transfer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - pending
          - paid
      tags:
      - expenditure
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenditureList'
          description: ''
    post:
      operationId: expenditure_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - expenditure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expenditure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expenditure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expenditure'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenditure'
          description: ''
  /api/expenditure/{id}/:
    get:
      operationId: expenditure_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expenditure.
        required: true
      tags:
      - expenditure
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenditure'
          description: ''
    put:
      operationId: expenditure_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expenditure.
        required: true
      tags:
      - expenditure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expenditure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expenditure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expenditure'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenditure'
          description: ''
    patch:
      operationId: expenditure_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expenditure.
        required: true
      tags:
      - expenditure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpenditure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpenditure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpenditure'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenditure'
          description: ''
    delete:
      operationId: expenditure_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expenditure.
        required: true
      tags:
      - expenditure
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/expenditure/summary/branch-{branch_id}/academic-year-{academic_year_id}/:
    get:
      operationId: expenditure_summary_branch__academic_year__retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: academic_year_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: branch_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - expenditure
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenditure'
          description: ''
  /api/features/:
    get:
      operationId: features_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - features
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeaturesList'
          description: ''
  /api/features/{id}/:
    get:
      operationId: features_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this features.
        required: true
      tags:
      - features
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Features'
          description: ''
  /api/fee-concessions/:
    get:
      operationId: fee_concessions_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: fee
        required: false
        in: query
        description: fee
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - fee-concessions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeConcessionList'
          description: ''
    post:
      operationId: fee_concessions_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-concessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeConcession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeConcession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeConcession'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeConcession'
          description: ''
  /api/fee-concessions/{id}/:
    get:
      operationId: fee_concessions_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee concession.
        required: true
      tags:
      - fee-concessions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeConcession'
          description: ''
    put:
      operationId: fee_concessions_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee concession.
        required: true
      tags:
      - fee-concessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeConcession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeConcession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeConcession'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeConcession'
          description: ''
    patch:
      operationId: fee_concessions_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee concession.
        required: true
      tags:
      - fee-concessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeConcession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeConcession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeConcession'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeConcession'
          description: ''
    delete:
      operationId: fee_concessions_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee concession.
        required: true
      tags:
      - fee-concessions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/fee-dashboard/:
    get:
      operationId: fee_dashboard_list
      description: ViewSet for dashboard analytics data.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: fee_dashboard_create
      description: ViewSet for dashboard analytics data.
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          description: No response body
  /api/fee-dashboard/{id}/:
    get:
      operationId: fee_dashboard_retrieve
      description: ViewSet for dashboard analytics data.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: fee_dashboard_update
      description: ViewSet for dashboard analytics data.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: fee_dashboard_partial_update
      description: ViewSet for dashboard analytics data.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: fee_dashboard_destroy
      description: ViewSet for dashboard analytics data.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/fee-dashboard/fee-collection-stats/:
    get:
      operationId: fee_dashboard_fee_collection_stats_retrieve
      description: Get statistics on fee collection and pending payments
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/fee-dashboard/fee-overview-analytics/:
    get:
      operationId: fee_dashboard_fee_overview_analytics_retrieve
      description: ViewSet for dashboard analytics data.
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/fee-dashboard/fee-type-distribution/:
    get:
      operationId: fee_dashboard_fee_type_distribution_retrieve
      description: Get breakdown of fees by fee type with proper validations and error
        messages
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/fee-dashboard/pending-fee-students/:
    get:
      operationId: fee_dashboard_pending_fee_students_retrieve
      description: ViewSet for dashboard analytics data.
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/fee-dashboard/school-analytics/:
    get:
      operationId: fee_dashboard_school_analytics_retrieve
      description: School analytics summary for a given branch and academic year
      tags:
      - fee-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/fee-payments/:
    get:
      operationId: fee_payments_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created__contained_by
        required: false
        in: query
        description: created__contained_by
        schema:
          type: string
      - name: created__contains
        required: false
        in: query
        description: created__contains
        schema:
          type: string
      - name: created__date
        required: false
        in: query
        description: created__date
        schema:
          type: string
      - name: created__date__contained_by
        required: false
        in: query
        description: created__date__contained_by
        schema:
          type: string
      - name: created__date__contains
        required: false
        in: query
        description: created__date__contains
        schema:
          type: string
      - name: created__date__day
        required: false
        in: query
        description: created__date__day
        schema:
          type: string
      - name: created__date__day__contained_by
        required: false
        in: query
        description: created__date__day__contained_by
        schema:
          type: string
      - name: created__date__day__contains
        required: false
        in: query
        description: created__date__day__contains
        schema:
          type: string
      - name: created__date__day__endswith
        required: false
        in: query
        description: created__date__day__endswith
        schema:
          type: string
      - name: created__date__day__gt
        required: false
        in: query
        description: created__date__day__gt
        schema:
          type: string
      - name: created__date__day__gte
        required: false
        in: query
        description: created__date__day__gte
        schema:
          type: string
      - name: created__date__day__icontains
        required: false
        in: query
        description: created__date__day__icontains
        schema:
          type: string
      - name: created__date__day__iendswith
        required: false
        in: query
        description: created__date__day__iendswith
        schema:
          type: string
      - name: created__date__day__iexact
        required: false
        in: query
        description: created__date__day__iexact
        schema:
          type: string
      - name: created__date__day__in
        required: false
        in: query
        description: created__date__day__in
        schema:
          type: string
      - name: created__date__day__iregex
        required: false
        in: query
        description: created__date__day__iregex
        schema:
          type: string
      - name: created__date__day__isnull
        required: false
        in: query
        description: created__date__day__isnull
        schema:
          type: string
      - name: created__date__day__istartswith
        required: false
        in: query
        description: created__date__day__istartswith
        schema:
          type: string
      - name: created__date__day__lt
        required: false
        in: query
        description: created__date__day__lt
        schema:
          type: string
      - name: created__date__day__lte
        required: false
        in: query
        description: created__date__day__lte
        schema:
          type: string
      - name: created__date__day__range
        required: false
        in: query
        description: created__date__day__range
        schema:
          type: string
      - name: created__date__day__regex
        required: false
        in: query
        description: created__date__day__regex
        schema:
          type: string
      - name: created__date__day__startswith
        required: false
        in: query
        description: created__date__day__startswith
        schema:
          type: string
      - name: created__date__endswith
        required: false
        in: query
        description: created__date__endswith
        schema:
          type: string
      - name: created__date__gt
        required: false
        in: query
        description: created__date__gt
        schema:
          type: string
      - name: created__date__gte
        required: false
        in: query
        description: created__date__gte
        schema:
          type: string
      - name: created__date__icontains
        required: false
        in: query
        description: created__date__icontains
        schema:
          type: string
      - name: created__date__iendswith
        required: false
        in: query
        description: created__date__iendswith
        schema:
          type: string
      - name: created__date__iexact
        required: false
        in: query
        description: created__date__iexact
        schema:
          type: string
      - name: created__date__in
        required: false
        in: query
        description: created__date__in
        schema:
          type: string
      - name: created__date__iregex
        required: false
        in: query
        description: created__date__iregex
        schema:
          type: string
      - name: created__date__isnull
        required: false
        in: query
        description: created__date__isnull
        schema:
          type: string
      - name: created__date__iso_week_day
        required: false
        in: query
        description: created__date__iso_week_day
        schema:
          type: string
      - name: created__date__iso_week_day__contained_by
        required: false
        in: query
        description: created__date__iso_week_day__contained_by
        schema:
          type: string
      - name: created__date__iso_week_day__contains
        required: false
        in: query
        description: created__date__iso_week_day__contains
        schema:
          type: string
      - name: created__date__iso_week_day__endswith
        required: false
        in: query
        description: created__date__iso_week_day__endswith
        schema:
          type: string
      - name: created__date__iso_week_day__gt
        required: false
        in: query
        description: created__date__iso_week_day__gt
        schema:
          type: string
      - name: created__date__iso_week_day__gte
        required: false
        in: query
        description: created__date__iso_week_day__gte
        schema:
          type: string
      - name: created__date__iso_week_day__icontains
        required: false
        in: query
        description: created__date__iso_week_day__icontains
        schema:
          type: string
      - name: created__date__iso_week_day__iendswith
        required: false
        in: query
        description: created__date__iso_week_day__iendswith
        schema:
          type: string
      - name: created__date__iso_week_day__iexact
        required: false
        in: query
        description: created__date__iso_week_day__iexact
        schema:
          type: string
      - name: created__date__iso_week_day__in
        required: false
        in: query
        description: created__date__iso_week_day__in
        schema:
          type: string
      - name: created__date__iso_week_day__iregex
        required: false
        in: query
        description: created__date__iso_week_day__iregex
        schema:
          type: string
      - name: created__date__iso_week_day__isnull
        required: false
        in: query
        description: created__date__iso_week_day__isnull
        schema:
          type: string
      - name: created__date__iso_week_day__istartswith
        required: false
        in: query
        description: created__date__iso_week_day__istartswith
        schema:
          type: string
      - name: created__date__iso_week_day__lt
        required: false
        in: query
        description: created__date__iso_week_day__lt
        schema:
          type: string
      - name: created__date__iso_week_day__lte
        required: false
        in: query
        description: created__date__iso_week_day__lte
        schema:
          type: string
      - name: created__date__iso_week_day__range
        required: false
        in: query
        description: created__date__iso_week_day__range
        schema:
          type: string
      - name: created__date__iso_week_day__regex
        required: false
        in: query
        description: created__date__iso_week_day__regex
        schema:
          type: string
      - name: created__date__iso_week_day__startswith
        required: false
        in: query
        description: created__date__iso_week_day__startswith
        schema:
          type: string
      - name: created__date__iso_year
        required: false
        in: query
        description: created__date__iso_year
        schema:
          type: string
      - name: created__date__iso_year__contained_by
        required: false
        in: query
        description: created__date__iso_year__contained_by
        schema:
          type: string
      - name: created__date__iso_year__contains
        required: false
        in: query
        description: created__date__iso_year__contains
        schema:
          type: string
      - name: created__date__iso_year__endswith
        required: false
        in: query
        description: created__date__iso_year__endswith
        schema:
          type: string
      - name: created__date__iso_year__gt
        required: false
        in: query
        description: created__date__iso_year__gt
        schema:
          type: string
      - name: created__date__iso_year__gte
        required: false
        in: query
        description: created__date__iso_year__gte
        schema:
          type: string
      - name: created__date__iso_year__icontains
        required: false
        in: query
        description: created__date__iso_year__icontains
        schema:
          type: string
      - name: created__date__iso_year__iendswith
        required: false
        in: query
        description: created__date__iso_year__iendswith
        schema:
          type: string
      - name: created__date__iso_year__iexact
        required: false
        in: query
        description: created__date__iso_year__iexact
        schema:
          type: string
      - name: created__date__iso_year__in
        required: false
        in: query
        description: created__date__iso_year__in
        schema:
          type: string
      - name: created__date__iso_year__iregex
        required: false
        in: query
        description: created__date__iso_year__iregex
        schema:
          type: string
      - name: created__date__iso_year__isnull
        required: false
        in: query
        description: created__date__iso_year__isnull
        schema:
          type: string
      - name: created__date__iso_year__istartswith
        required: false
        in: query
        description: created__date__iso_year__istartswith
        schema:
          type: string
      - name: created__date__iso_year__lt
        required: false
        in: query
        description: created__date__iso_year__lt
        schema:
          type: string
      - name: created__date__iso_year__lte
        required: false
        in: query
        description: created__date__iso_year__lte
        schema:
          type: string
      - name: created__date__iso_year__range
        required: false
        in: query
        description: created__date__iso_year__range
        schema:
          type: string
      - name: created__date__iso_year__regex
        required: false
        in: query
        description: created__date__iso_year__regex
        schema:
          type: string
      - name: created__date__iso_year__startswith
        required: false
        in: query
        description: created__date__iso_year__startswith
        schema:
          type: string
      - name: created__date__istartswith
        required: false
        in: query
        description: created__date__istartswith
        schema:
          type: string
      - name: created__date__lt
        required: false
        in: query
        description: created__date__lt
        schema:
          type: string
      - name: created__date__lte
        required: false
        in: query
        description: created__date__lte
        schema:
          type: string
      - name: created__date__month
        required: false
        in: query
        description: created__date__month
        schema:
          type: string
      - name: created__date__month__contained_by
        required: false
        in: query
        description: created__date__month__contained_by
        schema:
          type: string
      - name: created__date__month__contains
        required: false
        in: query
        description: created__date__month__contains
        schema:
          type: string
      - name: created__date__month__endswith
        required: false
        in: query
        description: created__date__month__endswith
        schema:
          type: string
      - name: created__date__month__gt
        required: false
        in: query
        description: created__date__month__gt
        schema:
          type: string
      - name: created__date__month__gte
        required: false
        in: query
        description: created__date__month__gte
        schema:
          type: string
      - name: created__date__month__icontains
        required: false
        in: query
        description: created__date__month__icontains
        schema:
          type: string
      - name: created__date__month__iendswith
        required: false
        in: query
        description: created__date__month__iendswith
        schema:
          type: string
      - name: created__date__month__iexact
        required: false
        in: query
        description: created__date__month__iexact
        schema:
          type: string
      - name: created__date__month__in
        required: false
        in: query
        description: created__date__month__in
        schema:
          type: string
      - name: created__date__month__iregex
        required: false
        in: query
        description: created__date__month__iregex
        schema:
          type: string
      - name: created__date__month__isnull
        required: false
        in: query
        description: created__date__month__isnull
        schema:
          type: string
      - name: created__date__month__istartswith
        required: false
        in: query
        description: created__date__month__istartswith
        schema:
          type: string
      - name: created__date__month__lt
        required: false
        in: query
        description: created__date__month__lt
        schema:
          type: string
      - name: created__date__month__lte
        required: false
        in: query
        description: created__date__month__lte
        schema:
          type: string
      - name: created__date__month__range
        required: false
        in: query
        description: created__date__month__range
        schema:
          type: string
      - name: created__date__month__regex
        required: false
        in: query
        description: created__date__month__regex
        schema:
          type: string
      - name: created__date__month__startswith
        required: false
        in: query
        description: created__date__month__startswith
        schema:
          type: string
      - name: created__date__quarter
        required: false
        in: query
        description: created__date__quarter
        schema:
          type: string
      - name: created__date__quarter__contained_by
        required: false
        in: query
        description: created__date__quarter__contained_by
        schema:
          type: string
      - name: created__date__quarter__contains
        required: false
        in: query
        description: created__date__quarter__contains
        schema:
          type: string
      - name: created__date__quarter__endswith
        required: false
        in: query
        description: created__date__quarter__endswith
        schema:
          type: string
      - name: created__date__quarter__gt
        required: false
        in: query
        description: created__date__quarter__gt
        schema:
          type: string
      - name: created__date__quarter__gte
        required: false
        in: query
        description: created__date__quarter__gte
        schema:
          type: string
      - name: created__date__quarter__icontains
        required: false
        in: query
        description: created__date__quarter__icontains
        schema:
          type: string
      - name: created__date__quarter__iendswith
        required: false
        in: query
        description: created__date__quarter__iendswith
        schema:
          type: string
      - name: created__date__quarter__iexact
        required: false
        in: query
        description: created__date__quarter__iexact
        schema:
          type: string
      - name: created__date__quarter__in
        required: false
        in: query
        description: created__date__quarter__in
        schema:
          type: string
      - name: created__date__quarter__iregex
        required: false
        in: query
        description: created__date__quarter__iregex
        schema:
          type: string
      - name: created__date__quarter__isnull
        required: false
        in: query
        description: created__date__quarter__isnull
        schema:
          type: string
      - name: created__date__quarter__istartswith
        required: false
        in: query
        description: created__date__quarter__istartswith
        schema:
          type: string
      - name: created__date__quarter__lt
        required: false
        in: query
        description: created__date__quarter__lt
        schema:
          type: string
      - name: created__date__quarter__lte
        required: false
        in: query
        description: created__date__quarter__lte
        schema:
          type: string
      - name: created__date__quarter__range
        required: false
        in: query
        description: created__date__quarter__range
        schema:
          type: string
      - name: created__date__quarter__regex
        required: false
        in: query
        description: created__date__quarter__regex
        schema:
          type: string
      - name: created__date__quarter__startswith
        required: false
        in: query
        description: created__date__quarter__startswith
        schema:
          type: string
      - name: created__date__range
        required: false
        in: query
        description: created__date__range
        schema:
          type: string
      - name: created__date__regex
        required: false
        in: query
        description: created__date__regex
        schema:
          type: string
      - name: created__date__startswith
        required: false
        in: query
        description: created__date__startswith
        schema:
          type: string
      - name: created__date__week
        required: false
        in: query
        description: created__date__week
        schema:
          type: string
      - name: created__date__week__contained_by
        required: false
        in: query
        description: created__date__week__contained_by
        schema:
          type: string
      - name: created__date__week__contains
        required: false
        in: query
        description: created__date__week__contains
        schema:
          type: string
      - name: created__date__week__endswith
        required: false
        in: query
        description: created__date__week__endswith
        schema:
          type: string
      - name: created__date__week__gt
        required: false
        in: query
        description: created__date__week__gt
        schema:
          type: string
      - name: created__date__week__gte
        required: false
        in: query
        description: created__date__week__gte
        schema:
          type: string
      - name: created__date__week__icontains
        required: false
        in: query
        description: created__date__week__icontains
        schema:
          type: string
      - name: created__date__week__iendswith
        required: false
        in: query
        description: created__date__week__iendswith
        schema:
          type: string
      - name: created__date__week__iexact
        required: false
        in: query
        description: created__date__week__iexact
        schema:
          type: string
      - name: created__date__week__in
        required: false
        in: query
        description: created__date__week__in
        schema:
          type: string
      - name: created__date__week__iregex
        required: false
        in: query
        description: created__date__week__iregex
        schema:
          type: string
      - name: created__date__week__isnull
        required: false
        in: query
        description: created__date__week__isnull
        schema:
          type: string
      - name: created__date__week__istartswith
        required: false
        in: query
        description: created__date__week__istartswith
        schema:
          type: string
      - name: created__date__week__lt
        required: false
        in: query
        description: created__date__week__lt
        schema:
          type: string
      - name: created__date__week__lte
        required: false
        in: query
        description: created__date__week__lte
        schema:
          type: string
      - name: created__date__week__range
        required: false
        in: query
        description: created__date__week__range
        schema:
          type: string
      - name: created__date__week__regex
        required: false
        in: query
        description: created__date__week__regex
        schema:
          type: string
      - name: created__date__week__startswith
        required: false
        in: query
        description: created__date__week__startswith
        schema:
          type: string
      - name: created__date__week_day
        required: false
        in: query
        description: created__date__week_day
        schema:
          type: string
      - name: created__date__week_day__contained_by
        required: false
        in: query
        description: created__date__week_day__contained_by
        schema:
          type: string
      - name: created__date__week_day__contains
        required: false
        in: query
        description: created__date__week_day__contains
        schema:
          type: string
      - name: created__date__week_day__endswith
        required: false
        in: query
        description: created__date__week_day__endswith
        schema:
          type: string
      - name: created__date__week_day__gt
        required: false
        in: query
        description: created__date__week_day__gt
        schema:
          type: string
      - name: created__date__week_day__gte
        required: false
        in: query
        description: created__date__week_day__gte
        schema:
          type: string
      - name: created__date__week_day__icontains
        required: false
        in: query
        description: created__date__week_day__icontains
        schema:
          type: string
      - name: created__date__week_day__iendswith
        required: false
        in: query
        description: created__date__week_day__iendswith
        schema:
          type: string
      - name: created__date__week_day__iexact
        required: false
        in: query
        description: created__date__week_day__iexact
        schema:
          type: string
      - name: created__date__week_day__in
        required: false
        in: query
        description: created__date__week_day__in
        schema:
          type: string
      - name: created__date__week_day__iregex
        required: false
        in: query
        description: created__date__week_day__iregex
        schema:
          type: string
      - name: created__date__week_day__isnull
        required: false
        in: query
        description: created__date__week_day__isnull
        schema:
          type: string
      - name: created__date__week_day__istartswith
        required: false
        in: query
        description: created__date__week_day__istartswith
        schema:
          type: string
      - name: created__date__week_day__lt
        required: false
        in: query
        description: created__date__week_day__lt
        schema:
          type: string
      - name: created__date__week_day__lte
        required: false
        in: query
        description: created__date__week_day__lte
        schema:
          type: string
      - name: created__date__week_day__range
        required: false
        in: query
        description: created__date__week_day__range
        schema:
          type: string
      - name: created__date__week_day__regex
        required: false
        in: query
        description: created__date__week_day__regex
        schema:
          type: string
      - name: created__date__week_day__startswith
        required: false
        in: query
        description: created__date__week_day__startswith
        schema:
          type: string
      - name: created__date__year
        required: false
        in: query
        description: created__date__year
        schema:
          type: string
      - name: created__date__year__contained_by
        required: false
        in: query
        description: created__date__year__contained_by
        schema:
          type: string
      - name: created__date__year__contains
        required: false
        in: query
        description: created__date__year__contains
        schema:
          type: string
      - name: created__date__year__endswith
        required: false
        in: query
        description: created__date__year__endswith
        schema:
          type: string
      - name: created__date__year__gt
        required: false
        in: query
        description: created__date__year__gt
        schema:
          type: string
      - name: created__date__year__gte
        required: false
        in: query
        description: created__date__year__gte
        schema:
          type: string
      - name: created__date__year__icontains
        required: false
        in: query
        description: created__date__year__icontains
        schema:
          type: string
      - name: created__date__year__iendswith
        required: false
        in: query
        description: created__date__year__iendswith
        schema:
          type: string
      - name: created__date__year__iexact
        required: false
        in: query
        description: created__date__year__iexact
        schema:
          type: string
      - name: created__date__year__in
        required: false
        in: query
        description: created__date__year__in
        schema:
          type: string
      - name: created__date__year__iregex
        required: false
        in: query
        description: created__date__year__iregex
        schema:
          type: string
      - name: created__date__year__isnull
        required: false
        in: query
        description: created__date__year__isnull
        schema:
          type: string
      - name: created__date__year__istartswith
        required: false
        in: query
        description: created__date__year__istartswith
        schema:
          type: string
      - name: created__date__year__lt
        required: false
        in: query
        description: created__date__year__lt
        schema:
          type: string
      - name: created__date__year__lte
        required: false
        in: query
        description: created__date__year__lte
        schema:
          type: string
      - name: created__date__year__range
        required: false
        in: query
        description: created__date__year__range
        schema:
          type: string
      - name: created__date__year__regex
        required: false
        in: query
        description: created__date__year__regex
        schema:
          type: string
      - name: created__date__year__startswith
        required: false
        in: query
        description: created__date__year__startswith
        schema:
          type: string
      - name: created__day
        required: false
        in: query
        description: created__day
        schema:
          type: string
      - name: created__day__contained_by
        required: false
        in: query
        description: created__day__contained_by
        schema:
          type: string
      - name: created__day__contains
        required: false
        in: query
        description: created__day__contains
        schema:
          type: string
      - name: created__day__endswith
        required: false
        in: query
        description: created__day__endswith
        schema:
          type: string
      - name: created__day__gt
        required: false
        in: query
        description: created__day__gt
        schema:
          type: string
      - name: created__day__gte
        required: false
        in: query
        description: created__day__gte
        schema:
          type: string
      - name: created__day__icontains
        required: false
        in: query
        description: created__day__icontains
        schema:
          type: string
      - name: created__day__iendswith
        required: false
        in: query
        description: created__day__iendswith
        schema:
          type: string
      - name: created__day__iexact
        required: false
        in: query
        description: created__day__iexact
        schema:
          type: string
      - name: created__day__in
        required: false
        in: query
        description: created__day__in
        schema:
          type: string
      - name: created__day__iregex
        required: false
        in: query
        description: created__day__iregex
        schema:
          type: string
      - name: created__day__isnull
        required: false
        in: query
        description: created__day__isnull
        schema:
          type: string
      - name: created__day__istartswith
        required: false
        in: query
        description: created__day__istartswith
        schema:
          type: string
      - name: created__day__lt
        required: false
        in: query
        description: created__day__lt
        schema:
          type: string
      - name: created__day__lte
        required: false
        in: query
        description: created__day__lte
        schema:
          type: string
      - name: created__day__range
        required: false
        in: query
        description: created__day__range
        schema:
          type: string
      - name: created__day__regex
        required: false
        in: query
        description: created__day__regex
        schema:
          type: string
      - name: created__day__startswith
        required: false
        in: query
        description: created__day__startswith
        schema:
          type: string
      - name: created__endswith
        required: false
        in: query
        description: created__endswith
        schema:
          type: string
      - name: created__gt
        required: false
        in: query
        description: created__gt
        schema:
          type: string
      - name: created__gte
        required: false
        in: query
        description: created__gte
        schema:
          type: string
      - name: created__hour
        required: false
        in: query
        description: created__hour
        schema:
          type: string
      - name: created__hour__contained_by
        required: false
        in: query
        description: created__hour__contained_by
        schema:
          type: string
      - name: created__hour__contains
        required: false
        in: query
        description: created__hour__contains
        schema:
          type: string
      - name: created__hour__endswith
        required: false
        in: query
        description: created__hour__endswith
        schema:
          type: string
      - name: created__hour__gt
        required: false
        in: query
        description: created__hour__gt
        schema:
          type: string
      - name: created__hour__gte
        required: false
        in: query
        description: created__hour__gte
        schema:
          type: string
      - name: created__hour__icontains
        required: false
        in: query
        description: created__hour__icontains
        schema:
          type: string
      - name: created__hour__iendswith
        required: false
        in: query
        description: created__hour__iendswith
        schema:
          type: string
      - name: created__hour__iexact
        required: false
        in: query
        description: created__hour__iexact
        schema:
          type: string
      - name: created__hour__in
        required: false
        in: query
        description: created__hour__in
        schema:
          type: string
      - name: created__hour__iregex
        required: false
        in: query
        description: created__hour__iregex
        schema:
          type: string
      - name: created__hour__isnull
        required: false
        in: query
        description: created__hour__isnull
        schema:
          type: string
      - name: created__hour__istartswith
        required: false
        in: query
        description: created__hour__istartswith
        schema:
          type: string
      - name: created__hour__lt
        required: false
        in: query
        description: created__hour__lt
        schema:
          type: string
      - name: created__hour__lte
        required: false
        in: query
        description: created__hour__lte
        schema:
          type: string
      - name: created__hour__range
        required: false
        in: query
        description: created__hour__range
        schema:
          type: string
      - name: created__hour__regex
        required: false
        in: query
        description: created__hour__regex
        schema:
          type: string
      - name: created__hour__startswith
        required: false
        in: query
        description: created__hour__startswith
        schema:
          type: string
      - name: created__icontains
        required: false
        in: query
        description: created__icontains
        schema:
          type: string
      - name: created__iendswith
        required: false
        in: query
        description: created__iendswith
        schema:
          type: string
      - name: created__iexact
        required: false
        in: query
        description: created__iexact
        schema:
          type: string
      - name: created__in
        required: false
        in: query
        description: created__in
        schema:
          type: string
      - name: created__iregex
        required: false
        in: query
        description: created__iregex
        schema:
          type: string
      - name: created__isnull
        required: false
        in: query
        description: created__isnull
        schema:
          type: string
      - name: created__iso_week_day
        required: false
        in: query
        description: created__iso_week_day
        schema:
          type: string
      - name: created__iso_week_day__contained_by
        required: false
        in: query
        description: created__iso_week_day__contained_by
        schema:
          type: string
      - name: created__iso_week_day__contains
        required: false
        in: query
        description: created__iso_week_day__contains
        schema:
          type: string
      - name: created__iso_week_day__endswith
        required: false
        in: query
        description: created__iso_week_day__endswith
        schema:
          type: string
      - name: created__iso_week_day__gt
        required: false
        in: query
        description: created__iso_week_day__gt
        schema:
          type: string
      - name: created__iso_week_day__gte
        required: false
        in: query
        description: created__iso_week_day__gte
        schema:
          type: string
      - name: created__iso_week_day__icontains
        required: false
        in: query
        description: created__iso_week_day__icontains
        schema:
          type: string
      - name: created__iso_week_day__iendswith
        required: false
        in: query
        description: created__iso_week_day__iendswith
        schema:
          type: string
      - name: created__iso_week_day__iexact
        required: false
        in: query
        description: created__iso_week_day__iexact
        schema:
          type: string
      - name: created__iso_week_day__in
        required: false
        in: query
        description: created__iso_week_day__in
        schema:
          type: string
      - name: created__iso_week_day__iregex
        required: false
        in: query
        description: created__iso_week_day__iregex
        schema:
          type: string
      - name: created__iso_week_day__isnull
        required: false
        in: query
        description: created__iso_week_day__isnull
        schema:
          type: string
      - name: created__iso_week_day__istartswith
        required: false
        in: query
        description: created__iso_week_day__istartswith
        schema:
          type: string
      - name: created__iso_week_day__lt
        required: false
        in: query
        description: created__iso_week_day__lt
        schema:
          type: string
      - name: created__iso_week_day__lte
        required: false
        in: query
        description: created__iso_week_day__lte
        schema:
          type: string
      - name: created__iso_week_day__range
        required: false
        in: query
        description: created__iso_week_day__range
        schema:
          type: string
      - name: created__iso_week_day__regex
        required: false
        in: query
        description: created__iso_week_day__regex
        schema:
          type: string
      - name: created__iso_week_day__startswith
        required: false
        in: query
        description: created__iso_week_day__startswith
        schema:
          type: string
      - name: created__iso_year
        required: false
        in: query
        description: created__iso_year
        schema:
          type: string
      - name: created__iso_year__contained_by
        required: false
        in: query
        description: created__iso_year__contained_by
        schema:
          type: string
      - name: created__iso_year__contains
        required: false
        in: query
        description: created__iso_year__contains
        schema:
          type: string
      - name: created__iso_year__endswith
        required: false
        in: query
        description: created__iso_year__endswith
        schema:
          type: string
      - name: created__iso_year__gt
        required: false
        in: query
        description: created__iso_year__gt
        schema:
          type: string
      - name: created__iso_year__gte
        required: false
        in: query
        description: created__iso_year__gte
        schema:
          type: string
      - name: created__iso_year__icontains
        required: false
        in: query
        description: created__iso_year__icontains
        schema:
          type: string
      - name: created__iso_year__iendswith
        required: false
        in: query
        description: created__iso_year__iendswith
        schema:
          type: string
      - name: created__iso_year__iexact
        required: false
        in: query
        description: created__iso_year__iexact
        schema:
          type: string
      - name: created__iso_year__in
        required: false
        in: query
        description: created__iso_year__in
        schema:
          type: string
      - name: created__iso_year__iregex
        required: false
        in: query
        description: created__iso_year__iregex
        schema:
          type: string
      - name: created__iso_year__isnull
        required: false
        in: query
        description: created__iso_year__isnull
        schema:
          type: string
      - name: created__iso_year__istartswith
        required: false
        in: query
        description: created__iso_year__istartswith
        schema:
          type: string
      - name: created__iso_year__lt
        required: false
        in: query
        description: created__iso_year__lt
        schema:
          type: string
      - name: created__iso_year__lte
        required: false
        in: query
        description: created__iso_year__lte
        schema:
          type: string
      - name: created__iso_year__range
        required: false
        in: query
        description: created__iso_year__range
        schema:
          type: string
      - name: created__iso_year__regex
        required: false
        in: query
        description: created__iso_year__regex
        schema:
          type: string
      - name: created__iso_year__startswith
        required: false
        in: query
        description: created__iso_year__startswith
        schema:
          type: string
      - name: created__istartswith
        required: false
        in: query
        description: created__istartswith
        schema:
          type: string
      - name: created__lt
        required: false
        in: query
        description: created__lt
        schema:
          type: string
      - name: created__lte
        required: false
        in: query
        description: created__lte
        schema:
          type: string
      - name: created__minute
        required: false
        in: query
        description: created__minute
        schema:
          type: string
      - name: created__minute__contained_by
        required: false
        in: query
        description: created__minute__contained_by
        schema:
          type: string
      - name: created__minute__contains
        required: false
        in: query
        description: created__minute__contains
        schema:
          type: string
      - name: created__minute__endswith
        required: false
        in: query
        description: created__minute__endswith
        schema:
          type: string
      - name: created__minute__gt
        required: false
        in: query
        description: created__minute__gt
        schema:
          type: string
      - name: created__minute__gte
        required: false
        in: query
        description: created__minute__gte
        schema:
          type: string
      - name: created__minute__icontains
        required: false
        in: query
        description: created__minute__icontains
        schema:
          type: string
      - name: created__minute__iendswith
        required: false
        in: query
        description: created__minute__iendswith
        schema:
          type: string
      - name: created__minute__iexact
        required: false
        in: query
        description: created__minute__iexact
        schema:
          type: string
      - name: created__minute__in
        required: false
        in: query
        description: created__minute__in
        schema:
          type: string
      - name: created__minute__iregex
        required: false
        in: query
        description: created__minute__iregex
        schema:
          type: string
      - name: created__minute__isnull
        required: false
        in: query
        description: created__minute__isnull
        schema:
          type: string
      - name: created__minute__istartswith
        required: false
        in: query
        description: created__minute__istartswith
        schema:
          type: string
      - name: created__minute__lt
        required: false
        in: query
        description: created__minute__lt
        schema:
          type: string
      - name: created__minute__lte
        required: false
        in: query
        description: created__minute__lte
        schema:
          type: string
      - name: created__minute__range
        required: false
        in: query
        description: created__minute__range
        schema:
          type: string
      - name: created__minute__regex
        required: false
        in: query
        description: created__minute__regex
        schema:
          type: string
      - name: created__minute__startswith
        required: false
        in: query
        description: created__minute__startswith
        schema:
          type: string
      - name: created__month
        required: false
        in: query
        description: created__month
        schema:
          type: string
      - name: created__month__contained_by
        required: false
        in: query
        description: created__month__contained_by
        schema:
          type: string
      - name: created__month__contains
        required: false
        in: query
        description: created__month__contains
        schema:
          type: string
      - name: created__month__endswith
        required: false
        in: query
        description: created__month__endswith
        schema:
          type: string
      - name: created__month__gt
        required: false
        in: query
        description: created__month__gt
        schema:
          type: string
      - name: created__month__gte
        required: false
        in: query
        description: created__month__gte
        schema:
          type: string
      - name: created__month__icontains
        required: false
        in: query
        description: created__month__icontains
        schema:
          type: string
      - name: created__month__iendswith
        required: false
        in: query
        description: created__month__iendswith
        schema:
          type: string
      - name: created__month__iexact
        required: false
        in: query
        description: created__month__iexact
        schema:
          type: string
      - name: created__month__in
        required: false
        in: query
        description: created__month__in
        schema:
          type: string
      - name: created__month__iregex
        required: false
        in: query
        description: created__month__iregex
        schema:
          type: string
      - name: created__month__isnull
        required: false
        in: query
        description: created__month__isnull
        schema:
          type: string
      - name: created__month__istartswith
        required: false
        in: query
        description: created__month__istartswith
        schema:
          type: string
      - name: created__month__lt
        required: false
        in: query
        description: created__month__lt
        schema:
          type: string
      - name: created__month__lte
        required: false
        in: query
        description: created__month__lte
        schema:
          type: string
      - name: created__month__range
        required: false
        in: query
        description: created__month__range
        schema:
          type: string
      - name: created__month__regex
        required: false
        in: query
        description: created__month__regex
        schema:
          type: string
      - name: created__month__startswith
        required: false
        in: query
        description: created__month__startswith
        schema:
          type: string
      - name: created__quarter
        required: false
        in: query
        description: created__quarter
        schema:
          type: string
      - name: created__quarter__contained_by
        required: false
        in: query
        description: created__quarter__contained_by
        schema:
          type: string
      - name: created__quarter__contains
        required: false
        in: query
        description: created__quarter__contains
        schema:
          type: string
      - name: created__quarter__endswith
        required: false
        in: query
        description: created__quarter__endswith
        schema:
          type: string
      - name: created__quarter__gt
        required: false
        in: query
        description: created__quarter__gt
        schema:
          type: string
      - name: created__quarter__gte
        required: false
        in: query
        description: created__quarter__gte
        schema:
          type: string
      - name: created__quarter__icontains
        required: false
        in: query
        description: created__quarter__icontains
        schema:
          type: string
      - name: created__quarter__iendswith
        required: false
        in: query
        description: created__quarter__iendswith
        schema:
          type: string
      - name: created__quarter__iexact
        required: false
        in: query
        description: created__quarter__iexact
        schema:
          type: string
      - name: created__quarter__in
        required: false
        in: query
        description: created__quarter__in
        schema:
          type: string
      - name: created__quarter__iregex
        required: false
        in: query
        description: created__quarter__iregex
        schema:
          type: string
      - name: created__quarter__isnull
        required: false
        in: query
        description: created__quarter__isnull
        schema:
          type: string
      - name: created__quarter__istartswith
        required: false
        in: query
        description: created__quarter__istartswith
        schema:
          type: string
      - name: created__quarter__lt
        required: false
        in: query
        description: created__quarter__lt
        schema:
          type: string
      - name: created__quarter__lte
        required: false
        in: query
        description: created__quarter__lte
        schema:
          type: string
      - name: created__quarter__range
        required: false
        in: query
        description: created__quarter__range
        schema:
          type: string
      - name: created__quarter__regex
        required: false
        in: query
        description: created__quarter__regex
        schema:
          type: string
      - name: created__quarter__startswith
        required: false
        in: query
        description: created__quarter__startswith
        schema:
          type: string
      - name: created__range
        required: false
        in: query
        description: created__range
        schema:
          type: string
      - name: created__regex
        required: false
        in: query
        description: created__regex
        schema:
          type: string
      - name: created__second
        required: false
        in: query
        description: created__second
        schema:
          type: string
      - name: created__second__contained_by
        required: false
        in: query
        description: created__second__contained_by
        schema:
          type: string
      - name: created__second__contains
        required: false
        in: query
        description: created__second__contains
        schema:
          type: string
      - name: created__second__endswith
        required: false
        in: query
        description: created__second__endswith
        schema:
          type: string
      - name: created__second__gt
        required: false
        in: query
        description: created__second__gt
        schema:
          type: string
      - name: created__second__gte
        required: false
        in: query
        description: created__second__gte
        schema:
          type: string
      - name: created__second__icontains
        required: false
        in: query
        description: created__second__icontains
        schema:
          type: string
      - name: created__second__iendswith
        required: false
        in: query
        description: created__second__iendswith
        schema:
          type: string
      - name: created__second__iexact
        required: false
        in: query
        description: created__second__iexact
        schema:
          type: string
      - name: created__second__in
        required: false
        in: query
        description: created__second__in
        schema:
          type: string
      - name: created__second__iregex
        required: false
        in: query
        description: created__second__iregex
        schema:
          type: string
      - name: created__second__isnull
        required: false
        in: query
        description: created__second__isnull
        schema:
          type: string
      - name: created__second__istartswith
        required: false
        in: query
        description: created__second__istartswith
        schema:
          type: string
      - name: created__second__lt
        required: false
        in: query
        description: created__second__lt
        schema:
          type: string
      - name: created__second__lte
        required: false
        in: query
        description: created__second__lte
        schema:
          type: string
      - name: created__second__range
        required: false
        in: query
        description: created__second__range
        schema:
          type: string
      - name: created__second__regex
        required: false
        in: query
        description: created__second__regex
        schema:
          type: string
      - name: created__second__startswith
        required: false
        in: query
        description: created__second__startswith
        schema:
          type: string
      - name: created__startswith
        required: false
        in: query
        description: created__startswith
        schema:
          type: string
      - name: created__time
        required: false
        in: query
        description: created__time
        schema:
          type: string
      - name: created__time__contains
        required: false
        in: query
        description: created__time__contains
        schema:
          type: string
      - name: created__time__endswith
        required: false
        in: query
        description: created__time__endswith
        schema:
          type: string
      - name: created__time__gt
        required: false
        in: query
        description: created__time__gt
        schema:
          type: string
      - name: created__time__gte
        required: false
        in: query
        description: created__time__gte
        schema:
          type: string
      - name: created__time__hour
        required: false
        in: query
        description: created__time__hour
        schema:
          type: string
      - name: created__time__hour__contained_by
        required: false
        in: query
        description: created__time__hour__contained_by
        schema:
          type: string
      - name: created__time__hour__contains
        required: false
        in: query
        description: created__time__hour__contains
        schema:
          type: string
      - name: created__time__hour__endswith
        required: false
        in: query
        description: created__time__hour__endswith
        schema:
          type: string
      - name: created__time__hour__gt
        required: false
        in: query
        description: created__time__hour__gt
        schema:
          type: string
      - name: created__time__hour__gte
        required: false
        in: query
        description: created__time__hour__gte
        schema:
          type: string
      - name: created__time__hour__icontains
        required: false
        in: query
        description: created__time__hour__icontains
        schema:
          type: string
      - name: created__time__hour__iendswith
        required: false
        in: query
        description: created__time__hour__iendswith
        schema:
          type: string
      - name: created__time__hour__iexact
        required: false
        in: query
        description: created__time__hour__iexact
        schema:
          type: string
      - name: created__time__hour__in
        required: false
        in: query
        description: created__time__hour__in
        schema:
          type: string
      - name: created__time__hour__iregex
        required: false
        in: query
        description: created__time__hour__iregex
        schema:
          type: string
      - name: created__time__hour__isnull
        required: false
        in: query
        description: created__time__hour__isnull
        schema:
          type: string
      - name: created__time__hour__istartswith
        required: false
        in: query
        description: created__time__hour__istartswith
        schema:
          type: string
      - name: created__time__hour__lt
        required: false
        in: query
        description: created__time__hour__lt
        schema:
          type: string
      - name: created__time__hour__lte
        required: false
        in: query
        description: created__time__hour__lte
        schema:
          type: string
      - name: created__time__hour__range
        required: false
        in: query
        description: created__time__hour__range
        schema:
          type: string
      - name: created__time__hour__regex
        required: false
        in: query
        description: created__time__hour__regex
        schema:
          type: string
      - name: created__time__hour__startswith
        required: false
        in: query
        description: created__time__hour__startswith
        schema:
          type: string
      - name: created__time__icontains
        required: false
        in: query
        description: created__time__icontains
        schema:
          type: string
      - name: created__time__iendswith
        required: false
        in: query
        description: created__time__iendswith
        schema:
          type: string
      - name: created__time__iexact
        required: false
        in: query
        description: created__time__iexact
        schema:
          type: string
      - name: created__time__in
        required: false
        in: query
        description: created__time__in
        schema:
          type: string
      - name: created__time__iregex
        required: false
        in: query
        description: created__time__iregex
        schema:
          type: string
      - name: created__time__isnull
        required: false
        in: query
        description: created__time__isnull
        schema:
          type: string
      - name: created__time__istartswith
        required: false
        in: query
        description: created__time__istartswith
        schema:
          type: string
      - name: created__time__lt
        required: false
        in: query
        description: created__time__lt
        schema:
          type: string
      - name: created__time__lte
        required: false
        in: query
        description: created__time__lte
        schema:
          type: string
      - name: created__time__minute
        required: false
        in: query
        description: created__time__minute
        schema:
          type: string
      - name: created__time__minute__contained_by
        required: false
        in: query
        description: created__time__minute__contained_by
        schema:
          type: string
      - name: created__time__minute__contains
        required: false
        in: query
        description: created__time__minute__contains
        schema:
          type: string
      - name: created__time__minute__endswith
        required: false
        in: query
        description: created__time__minute__endswith
        schema:
          type: string
      - name: created__time__minute__gt
        required: false
        in: query
        description: created__time__minute__gt
        schema:
          type: string
      - name: created__time__minute__gte
        required: false
        in: query
        description: created__time__minute__gte
        schema:
          type: string
      - name: created__time__minute__icontains
        required: false
        in: query
        description: created__time__minute__icontains
        schema:
          type: string
      - name: created__time__minute__iendswith
        required: false
        in: query
        description: created__time__minute__iendswith
        schema:
          type: string
      - name: created__time__minute__iexact
        required: false
        in: query
        description: created__time__minute__iexact
        schema:
          type: string
      - name: created__time__minute__in
        required: false
        in: query
        description: created__time__minute__in
        schema:
          type: string
      - name: created__time__minute__iregex
        required: false
        in: query
        description: created__time__minute__iregex
        schema:
          type: string
      - name: created__time__minute__isnull
        required: false
        in: query
        description: created__time__minute__isnull
        schema:
          type: string
      - name: created__time__minute__istartswith
        required: false
        in: query
        description: created__time__minute__istartswith
        schema:
          type: string
      - name: created__time__minute__lt
        required: false
        in: query
        description: created__time__minute__lt
        schema:
          type: string
      - name: created__time__minute__lte
        required: false
        in: query
        description: created__time__minute__lte
        schema:
          type: string
      - name: created__time__minute__range
        required: false
        in: query
        description: created__time__minute__range
        schema:
          type: string
      - name: created__time__minute__regex
        required: false
        in: query
        description: created__time__minute__regex
        schema:
          type: string
      - name: created__time__minute__startswith
        required: false
        in: query
        description: created__time__minute__startswith
        schema:
          type: string
      - name: created__time__range
        required: false
        in: query
        description: created__time__range
        schema:
          type: string
      - name: created__time__regex
        required: false
        in: query
        description: created__time__regex
        schema:
          type: string
      - name: created__time__second
        required: false
        in: query
        description: created__time__second
        schema:
          type: string
      - name: created__time__second__contained_by
        required: false
        in: query
        description: created__time__second__contained_by
        schema:
          type: string
      - name: created__time__second__contains
        required: false
        in: query
        description: created__time__second__contains
        schema:
          type: string
      - name: created__time__second__endswith
        required: false
        in: query
        description: created__time__second__endswith
        schema:
          type: string
      - name: created__time__second__gt
        required: false
        in: query
        description: created__time__second__gt
        schema:
          type: string
      - name: created__time__second__gte
        required: false
        in: query
        description: created__time__second__gte
        schema:
          type: string
      - name: created__time__second__icontains
        required: false
        in: query
        description: created__time__second__icontains
        schema:
          type: string
      - name: created__time__second__iendswith
        required: false
        in: query
        description: created__time__second__iendswith
        schema:
          type: string
      - name: created__time__second__iexact
        required: false
        in: query
        description: created__time__second__iexact
        schema:
          type: string
      - name: created__time__second__in
        required: false
        in: query
        description: created__time__second__in
        schema:
          type: string
      - name: created__time__second__iregex
        required: false
        in: query
        description: created__time__second__iregex
        schema:
          type: string
      - name: created__time__second__isnull
        required: false
        in: query
        description: created__time__second__isnull
        schema:
          type: string
      - name: created__time__second__istartswith
        required: false
        in: query
        description: created__time__second__istartswith
        schema:
          type: string
      - name: created__time__second__lt
        required: false
        in: query
        description: created__time__second__lt
        schema:
          type: string
      - name: created__time__second__lte
        required: false
        in: query
        description: created__time__second__lte
        schema:
          type: string
      - name: created__time__second__range
        required: false
        in: query
        description: created__time__second__range
        schema:
          type: string
      - name: created__time__second__regex
        required: false
        in: query
        description: created__time__second__regex
        schema:
          type: string
      - name: created__time__second__startswith
        required: false
        in: query
        description: created__time__second__startswith
        schema:
          type: string
      - name: created__time__startswith
        required: false
        in: query
        description: created__time__startswith
        schema:
          type: string
      - name: created__week
        required: false
        in: query
        description: created__week
        schema:
          type: string
      - name: created__week__contained_by
        required: false
        in: query
        description: created__week__contained_by
        schema:
          type: string
      - name: created__week__contains
        required: false
        in: query
        description: created__week__contains
        schema:
          type: string
      - name: created__week__endswith
        required: false
        in: query
        description: created__week__endswith
        schema:
          type: string
      - name: created__week__gt
        required: false
        in: query
        description: created__week__gt
        schema:
          type: string
      - name: created__week__gte
        required: false
        in: query
        description: created__week__gte
        schema:
          type: string
      - name: created__week__icontains
        required: false
        in: query
        description: created__week__icontains
        schema:
          type: string
      - name: created__week__iendswith
        required: false
        in: query
        description: created__week__iendswith
        schema:
          type: string
      - name: created__week__iexact
        required: false
        in: query
        description: created__week__iexact
        schema:
          type: string
      - name: created__week__in
        required: false
        in: query
        description: created__week__in
        schema:
          type: string
      - name: created__week__iregex
        required: false
        in: query
        description: created__week__iregex
        schema:
          type: string
      - name: created__week__isnull
        required: false
        in: query
        description: created__week__isnull
        schema:
          type: string
      - name: created__week__istartswith
        required: false
        in: query
        description: created__week__istartswith
        schema:
          type: string
      - name: created__week__lt
        required: false
        in: query
        description: created__week__lt
        schema:
          type: string
      - name: created__week__lte
        required: false
        in: query
        description: created__week__lte
        schema:
          type: string
      - name: created__week__range
        required: false
        in: query
        description: created__week__range
        schema:
          type: string
      - name: created__week__regex
        required: false
        in: query
        description: created__week__regex
        schema:
          type: string
      - name: created__week__startswith
        required: false
        in: query
        description: created__week__startswith
        schema:
          type: string
      - name: created__week_day
        required: false
        in: query
        description: created__week_day
        schema:
          type: string
      - name: created__week_day__contained_by
        required: false
        in: query
        description: created__week_day__contained_by
        schema:
          type: string
      - name: created__week_day__contains
        required: false
        in: query
        description: created__week_day__contains
        schema:
          type: string
      - name: created__week_day__endswith
        required: false
        in: query
        description: created__week_day__endswith
        schema:
          type: string
      - name: created__week_day__gt
        required: false
        in: query
        description: created__week_day__gt
        schema:
          type: string
      - name: created__week_day__gte
        required: false
        in: query
        description: created__week_day__gte
        schema:
          type: string
      - name: created__week_day__icontains
        required: false
        in: query
        description: created__week_day__icontains
        schema:
          type: string
      - name: created__week_day__iendswith
        required: false
        in: query
        description: created__week_day__iendswith
        schema:
          type: string
      - name: created__week_day__iexact
        required: false
        in: query
        description: created__week_day__iexact
        schema:
          type: string
      - name: created__week_day__in
        required: false
        in: query
        description: created__week_day__in
        schema:
          type: string
      - name: created__week_day__iregex
        required: false
        in: query
        description: created__week_day__iregex
        schema:
          type: string
      - name: created__week_day__isnull
        required: false
        in: query
        description: created__week_day__isnull
        schema:
          type: string
      - name: created__week_day__istartswith
        required: false
        in: query
        description: created__week_day__istartswith
        schema:
          type: string
      - name: created__week_day__lt
        required: false
        in: query
        description: created__week_day__lt
        schema:
          type: string
      - name: created__week_day__lte
        required: false
        in: query
        description: created__week_day__lte
        schema:
          type: string
      - name: created__week_day__range
        required: false
        in: query
        description: created__week_day__range
        schema:
          type: string
      - name: created__week_day__regex
        required: false
        in: query
        description: created__week_day__regex
        schema:
          type: string
      - name: created__week_day__startswith
        required: false
        in: query
        description: created__week_day__startswith
        schema:
          type: string
      - name: created__year
        required: false
        in: query
        description: created__year
        schema:
          type: string
      - name: created__year__contained_by
        required: false
        in: query
        description: created__year__contained_by
        schema:
          type: string
      - name: created__year__contains
        required: false
        in: query
        description: created__year__contains
        schema:
          type: string
      - name: created__year__endswith
        required: false
        in: query
        description: created__year__endswith
        schema:
          type: string
      - name: created__year__gt
        required: false
        in: query
        description: created__year__gt
        schema:
          type: string
      - name: created__year__gte
        required: false
        in: query
        description: created__year__gte
        schema:
          type: string
      - name: created__year__icontains
        required: false
        in: query
        description: created__year__icontains
        schema:
          type: string
      - name: created__year__iendswith
        required: false
        in: query
        description: created__year__iendswith
        schema:
          type: string
      - name: created__year__iexact
        required: false
        in: query
        description: created__year__iexact
        schema:
          type: string
      - name: created__year__in
        required: false
        in: query
        description: created__year__in
        schema:
          type: string
      - name: created__year__iregex
        required: false
        in: query
        description: created__year__iregex
        schema:
          type: string
      - name: created__year__isnull
        required: false
        in: query
        description: created__year__isnull
        schema:
          type: string
      - name: created__year__istartswith
        required: false
        in: query
        description: created__year__istartswith
        schema:
          type: string
      - name: created__year__lt
        required: false
        in: query
        description: created__year__lt
        schema:
          type: string
      - name: created__year__lte
        required: false
        in: query
        description: created__year__lte
        schema:
          type: string
      - name: created__year__range
        required: false
        in: query
        description: created__year__range
        schema:
          type: string
      - name: created__year__regex
        required: false
        in: query
        description: created__year__regex
        schema:
          type: string
      - name: created__year__startswith
        required: false
        in: query
        description: created__year__startswith
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: fee
        required: false
        in: query
        description: fee
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: payment_date
        required: false
        in: query
        description: payment_date
        schema:
          type: string
      - name: payment_reference
        required: false
        in: query
        description: payment_reference
        schema:
          type: string
      - name: payment_type
        required: false
        in: query
        description: payment_type
        schema:
          type: string
          enum:
          - Cash
          - Cheque
          - Online
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - fee-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeePaymentList'
          description: ''
    post:
      operationId: fee_payments_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeePayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeePayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeePayment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
  /api/fee-payments/{id}/:
    get:
      operationId: fee_payments_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee payment.
        required: true
      tags:
      - fee-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
    put:
      operationId: fee_payments_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee payment.
        required: true
      tags:
      - fee-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeePayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeePayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeePayment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
    patch:
      operationId: fee_payments_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee payment.
        required: true
      tags:
      - fee-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeePayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeePayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeePayment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
    delete:
      operationId: fee_payments_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee payment.
        required: true
      tags:
      - fee-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/fee-payments/custom-fee-payments-all/:
    post:
      operationId: fee_payments_custom_fee_payments_all_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeePayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeePayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeePayment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
  /api/fee-payments/payment-types/:
    get:
      operationId: fee_payments_payment_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePayment'
          description: ''
  /api/fee-summary/:
    get:
      operationId: fee_summary_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: concession_id
        required: false
        in: query
        description: concession_id
        schema:
          type: string
      - name: fee
        required: false
        in: query
        description: fee
        schema:
          type: string
      - name: fee_type
        required: false
        in: query
        description: fee_type
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: total_amount_to_pay
        required: false
        in: query
        description: total_amount_to_pay
        schema:
          type: string
      - name: total_concession
        required: false
        in: query
        description: total_concession
        schema:
          type: string
      - name: total_fee_amount
        required: false
        in: query
        description: total_fee_amount
        schema:
          type: string
      - name: total_paid
        required: false
        in: query
        description: total_paid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeSummaryList'
          description: ''
    post:
      operationId: fee_summary_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeSummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeSummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeSummary'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeSummary'
          description: ''
  /api/fee-summary/{id}/:
    get:
      operationId: fee_summary_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee summary.
        required: true
      tags:
      - fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeSummary'
          description: ''
    put:
      operationId: fee_summary_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee summary.
        required: true
      tags:
      - fee-summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeSummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeSummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeSummary'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeSummary'
          description: ''
    delete:
      operationId: fee_summary_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee summary.
        required: true
      tags:
      - fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/fee-types/:
    get:
      operationId: fee_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_hostel_fee
        required: false
        in: query
        description: is_hostel_fee
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - fee-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeTypeList'
          description: ''
    post:
      operationId: fee_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fee-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeType'
          description: ''
  /api/fee-types/{id}/:
    get:
      operationId: fee_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee type.
        required: true
      tags:
      - fee-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeType'
          description: ''
    put:
      operationId: fee_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee type.
        required: true
      tags:
      - fee-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeType'
          description: ''
    patch:
      operationId: fee_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee type.
        required: true
      tags:
      - fee-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeType'
          description: ''
    delete:
      operationId: fee_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee type.
        required: true
      tags:
      - fee-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/fees/:
    get:
      operationId: fees_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__contained_by
        required: false
        in: query
        description: amount__contained_by
        schema:
          type: string
      - name: amount__contains
        required: false
        in: query
        description: amount__contains
        schema:
          type: string
      - name: amount__endswith
        required: false
        in: query
        description: amount__endswith
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__gte
        required: false
        in: query
        description: amount__gte
        schema:
          type: string
      - name: amount__icontains
        required: false
        in: query
        description: amount__icontains
        schema:
          type: string
      - name: amount__iendswith
        required: false
        in: query
        description: amount__iendswith
        schema:
          type: string
      - name: amount__iexact
        required: false
        in: query
        description: amount__iexact
        schema:
          type: string
      - name: amount__in
        required: false
        in: query
        description: amount__in
        schema:
          type: string
      - name: amount__iregex
        required: false
        in: query
        description: amount__iregex
        schema:
          type: string
      - name: amount__isnull
        required: false
        in: query
        description: amount__isnull
        schema:
          type: string
      - name: amount__istartswith
        required: false
        in: query
        description: amount__istartswith
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: amount__lte
        required: false
        in: query
        description: amount__lte
        schema:
          type: string
      - name: amount__range
        required: false
        in: query
        description: amount__range
        schema:
          type: string
      - name: amount__regex
        required: false
        in: query
        description: amount__regex
        schema:
          type: string
      - name: amount__startswith
        required: false
        in: query
        description: amount__startswith
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: due_date
        required: false
        in: query
        description: due_date
        schema:
          type: string
      - name: fee_type
        required: false
        in: query
        description: fee_type
        schema:
          type: string
      - name: fee_type_id
        required: false
        in: query
        description: fee_type_id
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: min_amount
        required: false
        in: query
        description: min_amount
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      tags:
      - fees
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeList'
          description: ''
    post:
      operationId: fees_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - fees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fee'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
  /api/fees/{id}/:
    get:
      operationId: fees_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - fees
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    put:
      operationId: fees_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - fees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fee'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    patch:
      operationId: fees_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - fees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFee'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    delete:
      operationId: fees_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - fees
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/floors/:
    get:
      operationId: floors_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: place
        required: false
        in: query
        description: place
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFloorList'
          description: ''
    post:
      operationId: floors_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Floor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Floor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'
          description: ''
  /api/floors/{id}/:
    get:
      operationId: floors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this floor.
        required: true
      tags:
      - floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'
          description: ''
    put:
      operationId: floors_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this floor.
        required: true
      tags:
      - floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Floor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Floor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'
          description: ''
    patch:
      operationId: floors_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this floor.
        required: true
      tags:
      - floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFloor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFloor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFloor'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'
          description: ''
    delete:
      operationId: floors_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this floor.
        required: true
      tags:
      - floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/get-token/:
    post:
      operationId: get_token_create
      tags:
      - get-token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/grade/:
    get:
      operationId: grade_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: exam
        required: false
        in: query
        description: exam
        schema:
          type: string
      - name: is_present
        required: false
        in: query
        description: is_present
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: marks
        required: false
        in: query
        description: marks
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - grade
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
    post:
      operationId: grade_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - grade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/grade-types/:
    get:
      operationId: grade_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: max_percentage
        required: false
        in: query
        description: max_percentage
        schema:
          type: string
      - name: min_percentage
        required: false
        in: query
        description: min_percentage
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      tags:
      - grade-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeTypeList'
          description: ''
    post:
      operationId: grade_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - grade-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeType'
          description: ''
  /api/grade-types/{id}/:
    get:
      operationId: grade_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade type.
        required: true
      tags:
      - grade-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeType'
          description: ''
    put:
      operationId: grade_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade type.
        required: true
      tags:
      - grade-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeType'
          description: ''
    patch:
      operationId: grade_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade type.
        required: true
      tags:
      - grade-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeType'
          description: ''
    delete:
      operationId: grade_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade type.
        required: true
      tags:
      - grade-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/grade/{id}/:
    get:
      operationId: grade_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade.
        required: true
      tags:
      - grade
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: grade_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade.
        required: true
      tags:
      - grade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: grade_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade.
        required: true
      tags:
      - grade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: grade_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade.
        required: true
      tags:
      - grade
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/:
    get:
      operationId: groups_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: group_type
        required: false
        in: query
        description: group_type
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__endswith
        required: false
        in: query
        description: name__endswith
        schema:
          type: string
      - name: name__gt
        required: false
        in: query
        description: name__gt
        schema:
          type: string
      - name: name__gte
        required: false
        in: query
        description: name__gte
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: name__iendswith
        required: false
        in: query
        description: name__iendswith
        schema:
          type: string
      - name: name__iexact
        required: false
        in: query
        description: name__iexact
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: name__iregex
        required: false
        in: query
        description: name__iregex
        schema:
          type: string
      - name: name__isnull
        required: false
        in: query
        description: name__isnull
        schema:
          type: string
      - name: name__istartswith
        required: false
        in: query
        description: name__istartswith
        schema:
          type: string
      - name: name__lt
        required: false
        in: query
        description: name__lt
        schema:
          type: string
      - name: name__lte
        required: false
        in: query
        description: name__lte
        schema:
          type: string
      - name: name__range
        required: false
        in: query
        description: name__range
        schema:
          type: string
      - name: name__regex
        required: false
        in: query
        description: name__regex
        schema:
          type: string
      - name: name__startswith
        required: false
        in: query
        description: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: permissions
        required: false
        in: query
        description: permissions
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/groups/{id}/:
    get:
      operationId: groups_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/guardians/:
    get:
      operationId: guardians_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: annual_income
        required: false
        in: query
        description: annual_income
        schema:
          type: string
      - name: annual_income__contained_by
        required: false
        in: query
        description: annual_income__contained_by
        schema:
          type: string
      - name: annual_income__contains
        required: false
        in: query
        description: annual_income__contains
        schema:
          type: string
      - name: annual_income__endswith
        required: false
        in: query
        description: annual_income__endswith
        schema:
          type: string
      - name: annual_income__gt
        required: false
        in: query
        description: annual_income__gt
        schema:
          type: string
      - name: annual_income__gte
        required: false
        in: query
        description: annual_income__gte
        schema:
          type: string
      - name: annual_income__icontains
        required: false
        in: query
        description: annual_income__icontains
        schema:
          type: string
      - name: annual_income__iendswith
        required: false
        in: query
        description: annual_income__iendswith
        schema:
          type: string
      - name: annual_income__iexact
        required: false
        in: query
        description: annual_income__iexact
        schema:
          type: string
      - name: annual_income__in
        required: false
        in: query
        description: annual_income__in
        schema:
          type: string
      - name: annual_income__iregex
        required: false
        in: query
        description: annual_income__iregex
        schema:
          type: string
      - name: annual_income__isnull
        required: false
        in: query
        description: annual_income__isnull
        schema:
          type: string
      - name: annual_income__istartswith
        required: false
        in: query
        description: annual_income__istartswith
        schema:
          type: string
      - name: annual_income__lt
        required: false
        in: query
        description: annual_income__lt
        schema:
          type: string
      - name: annual_income__lte
        required: false
        in: query
        description: annual_income__lte
        schema:
          type: string
      - name: annual_income__range
        required: false
        in: query
        description: annual_income__range
        schema:
          type: string
      - name: annual_income__regex
        required: false
        in: query
        description: annual_income__regex
        schema:
          type: string
      - name: annual_income__startswith
        required: false
        in: query
        description: annual_income__startswith
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: contact_number
        required: false
        in: query
        description: contact_number
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: first_name__contains
        required: false
        in: query
        description: first_name__contains
        schema:
          type: string
      - name: first_name__endswith
        required: false
        in: query
        description: first_name__endswith
        schema:
          type: string
      - name: first_name__gt
        required: false
        in: query
        description: first_name__gt
        schema:
          type: string
      - name: first_name__gte
        required: false
        in: query
        description: first_name__gte
        schema:
          type: string
      - name: first_name__icontains
        required: false
        in: query
        description: first_name__icontains
        schema:
          type: string
      - name: first_name__iendswith
        required: false
        in: query
        description: first_name__iendswith
        schema:
          type: string
      - name: first_name__iexact
        required: false
        in: query
        description: first_name__iexact
        schema:
          type: string
      - name: first_name__in
        required: false
        in: query
        description: first_name__in
        schema:
          type: string
      - name: first_name__iregex
        required: false
        in: query
        description: first_name__iregex
        schema:
          type: string
      - name: first_name__isnull
        required: false
        in: query
        description: first_name__isnull
        schema:
          type: string
      - name: first_name__istartswith
        required: false
        in: query
        description: first_name__istartswith
        schema:
          type: string
      - name: first_name__lt
        required: false
        in: query
        description: first_name__lt
        schema:
          type: string
      - name: first_name__lte
        required: false
        in: query
        description: first_name__lte
        schema:
          type: string
      - name: first_name__range
        required: false
        in: query
        description: first_name__range
        schema:
          type: string
      - name: first_name__regex
        required: false
        in: query
        description: first_name__regex
        schema:
          type: string
      - name: first_name__startswith
        required: false
        in: query
        description: first_name__startswith
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: last_name__contains
        required: false
        in: query
        description: last_name__contains
        schema:
          type: string
      - name: last_name__endswith
        required: false
        in: query
        description: last_name__endswith
        schema:
          type: string
      - name: last_name__gt
        required: false
        in: query
        description: last_name__gt
        schema:
          type: string
      - name: last_name__gte
        required: false
        in: query
        description: last_name__gte
        schema:
          type: string
      - name: last_name__icontains
        required: false
        in: query
        description: last_name__icontains
        schema:
          type: string
      - name: last_name__iendswith
        required: false
        in: query
        description: last_name__iendswith
        schema:
          type: string
      - name: last_name__iexact
        required: false
        in: query
        description: last_name__iexact
        schema:
          type: string
      - name: last_name__in
        required: false
        in: query
        description: last_name__in
        schema:
          type: string
      - name: last_name__iregex
        required: false
        in: query
        description: last_name__iregex
        schema:
          type: string
      - name: last_name__isnull
        required: false
        in: query
        description: last_name__isnull
        schema:
          type: string
      - name: last_name__istartswith
        required: false
        in: query
        description: last_name__istartswith
        schema:
          type: string
      - name: last_name__lt
        required: false
        in: query
        description: last_name__lt
        schema:
          type: string
      - name: last_name__lte
        required: false
        in: query
        description: last_name__lte
        schema:
          type: string
      - name: last_name__range
        required: false
        in: query
        description: last_name__range
        schema:
          type: string
      - name: last_name__regex
        required: false
        in: query
        description: last_name__regex
        schema:
          type: string
      - name: last_name__startswith
        required: false
        in: query
        description: last_name__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: occupation
        required: false
        in: query
        description: occupation
        schema:
          type: string
      - name: occupation__contains
        required: false
        in: query
        description: occupation__contains
        schema:
          type: string
      - name: occupation__endswith
        required: false
        in: query
        description: occupation__endswith
        schema:
          type: string
      - name: occupation__gt
        required: false
        in: query
        description: occupation__gt
        schema:
          type: string
      - name: occupation__gte
        required: false
        in: query
        description: occupation__gte
        schema:
          type: string
      - name: occupation__icontains
        required: false
        in: query
        description: occupation__icontains
        schema:
          type: string
      - name: occupation__iendswith
        required: false
        in: query
        description: occupation__iendswith
        schema:
          type: string
      - name: occupation__iexact
        required: false
        in: query
        description: occupation__iexact
        schema:
          type: string
      - name: occupation__in
        required: false
        in: query
        description: occupation__in
        schema:
          type: string
      - name: occupation__iregex
        required: false
        in: query
        description: occupation__iregex
        schema:
          type: string
      - name: occupation__isnull
        required: false
        in: query
        description: occupation__isnull
        schema:
          type: string
      - name: occupation__istartswith
        required: false
        in: query
        description: occupation__istartswith
        schema:
          type: string
      - name: occupation__lt
        required: false
        in: query
        description: occupation__lt
        schema:
          type: string
      - name: occupation__lte
        required: false
        in: query
        description: occupation__lte
        schema:
          type: string
      - name: occupation__range
        required: false
        in: query
        description: occupation__range
        schema:
          type: string
      - name: occupation__regex
        required: false
        in: query
        description: occupation__regex
        schema:
          type: string
      - name: occupation__startswith
        required: false
        in: query
        description: occupation__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: relation
        required: false
        in: query
        description: relation
        schema:
          type: string
          enum:
          - Father
          - Mother
          - Guardian
      - name: relation__contains
        required: false
        in: query
        description: relation__contains
        schema:
          type: string
      - name: relation__endswith
        required: false
        in: query
        description: relation__endswith
        schema:
          type: string
      - name: relation__gt
        required: false
        in: query
        description: relation__gt
        schema:
          type: string
      - name: relation__gte
        required: false
        in: query
        description: relation__gte
        schema:
          type: string
      - name: relation__icontains
        required: false
        in: query
        description: relation__icontains
        schema:
          type: string
      - name: relation__iendswith
        required: false
        in: query
        description: relation__iendswith
        schema:
          type: string
      - name: relation__iexact
        required: false
        in: query
        description: relation__iexact
        schema:
          type: string
      - name: relation__in
        required: false
        in: query
        description: relation__in
        schema:
          type: string
      - name: relation__iregex
        required: false
        in: query
        description: relation__iregex
        schema:
          type: string
      - name: relation__isnull
        required: false
        in: query
        description: relation__isnull
        schema:
          type: string
      - name: relation__istartswith
        required: false
        in: query
        description: relation__istartswith
        schema:
          type: string
      - name: relation__lt
        required: false
        in: query
        description: relation__lt
        schema:
          type: string
      - name: relation__lte
        required: false
        in: query
        description: relation__lte
        schema:
          type: string
      - name: relation__range
        required: false
        in: query
        description: relation__range
        schema:
          type: string
      - name: relation__regex
        required: false
        in: query
        description: relation__regex
        schema:
          type: string
      - name: relation__startswith
        required: false
        in: query
        description: relation__startswith
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - guardians
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGuardianList'
          description: ''
    post:
      operationId: guardians_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - guardians
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guardian'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Guardian'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Guardian'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
          description: ''
  /api/guardians/{id}/:
    get:
      operationId: guardians_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guardian.
        required: true
      tags:
      - guardians
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
          description: ''
    put:
      operationId: guardians_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guardian.
        required: true
      tags:
      - guardians
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guardian'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Guardian'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Guardian'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
          description: ''
    patch:
      operationId: guardians_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guardian.
        required: true
      tags:
      - guardians
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGuardian'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGuardian'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGuardian'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
          description: ''
    delete:
      operationId: guardians_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guardian.
        required: true
      tags:
      - guardians
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/holiday-calendar/:
    get:
      operationId: holiday_calendar_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - holiday-calendar
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHolidayList'
          description: ''
    post:
      operationId: holiday_calendar_create
      tags:
      - holiday-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Holiday'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Holiday'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Holiday'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holiday'
          description: ''
  /api/holiday-calendar/{id}/:
    get:
      operationId: holiday_calendar_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this holiday.
        required: true
      tags:
      - holiday-calendar
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holiday'
          description: ''
    put:
      operationId: holiday_calendar_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this holiday.
        required: true
      tags:
      - holiday-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Holiday'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Holiday'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Holiday'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holiday'
          description: ''
    patch:
      operationId: holiday_calendar_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this holiday.
        required: true
      tags:
      - holiday-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHoliday'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHoliday'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHoliday'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holiday'
          description: ''
    delete:
      operationId: holiday_calendar_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this holiday.
        required: true
      tags:
      - holiday-calendar
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/homework/:
    get:
      operationId: homework_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: due_date
        required: false
        in: query
        description: due_date
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: period_schedule
        required: false
        in: query
        description: period_schedule
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      tags:
      - homework
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkList'
          description: ''
    post:
      operationId: homework_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - homework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Homework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Homework'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
  /api/homework-submission/:
    get:
      operationId: homework_submission_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: homework
        required: false
        in: query
        description: homework
        schema:
          type: string
      - name: homework_attachment
        required: false
        in: query
        description: homework_attachment
        schema:
          type: string
      - name: is_late
        required: false
        in: query
        description: is_late
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: remarks
        required: false
        in: query
        description: remarks
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: submission_date
        required: false
        in: query
        description: submission_date
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - homework-submission
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkSubmissionList'
          description: ''
    post:
      operationId: homework_submission_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - homework-submission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
  /api/homework-submission/{id}/:
    get:
      operationId: homework_submission_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework submission.
        required: true
      tags:
      - homework-submission
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    put:
      operationId: homework_submission_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework submission.
        required: true
      tags:
      - homework-submission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    patch:
      operationId: homework_submission_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework submission.
        required: true
      tags:
      - homework-submission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmission'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    delete:
      operationId: homework_submission_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework submission.
        required: true
      tags:
      - homework-submission
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/homework/{id}/:
    get:
      operationId: homework_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework.
        required: true
      tags:
      - homework
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    put:
      operationId: homework_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework.
        required: true
      tags:
      - homework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Homework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Homework'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    patch:
      operationId: homework_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework.
        required: true
      tags:
      - homework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomework'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    delete:
      operationId: homework_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this homework.
        required: true
      tags:
      - homework
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-beds/:
    get:
      operationId: hostel_beds_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: is_occupied
        required: false
        in: query
        description: is_occupied
        schema:
          type: string
      - name: is_occupied__contains
        required: false
        in: query
        description: is_occupied__contains
        schema:
          type: string
      - name: is_occupied__endswith
        required: false
        in: query
        description: is_occupied__endswith
        schema:
          type: string
      - name: is_occupied__gt
        required: false
        in: query
        description: is_occupied__gt
        schema:
          type: string
      - name: is_occupied__gte
        required: false
        in: query
        description: is_occupied__gte
        schema:
          type: string
      - name: is_occupied__icontains
        required: false
        in: query
        description: is_occupied__icontains
        schema:
          type: string
      - name: is_occupied__iendswith
        required: false
        in: query
        description: is_occupied__iendswith
        schema:
          type: string
      - name: is_occupied__iexact
        required: false
        in: query
        description: is_occupied__iexact
        schema:
          type: string
      - name: is_occupied__in
        required: false
        in: query
        description: is_occupied__in
        schema:
          type: string
      - name: is_occupied__iregex
        required: false
        in: query
        description: is_occupied__iregex
        schema:
          type: string
      - name: is_occupied__isnull
        required: false
        in: query
        description: is_occupied__isnull
        schema:
          type: string
      - name: is_occupied__istartswith
        required: false
        in: query
        description: is_occupied__istartswith
        schema:
          type: string
      - name: is_occupied__lt
        required: false
        in: query
        description: is_occupied__lt
        schema:
          type: string
      - name: is_occupied__lte
        required: false
        in: query
        description: is_occupied__lte
        schema:
          type: string
      - name: is_occupied__range
        required: false
        in: query
        description: is_occupied__range
        schema:
          type: string
      - name: is_occupied__regex
        required: false
        in: query
        description: is_occupied__regex
        schema:
          type: string
      - name: is_occupied__startswith
        required: false
        in: query
        description: is_occupied__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: room
        required: false
        in: query
        description: room
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hostel-beds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBedList'
          description: ''
    post:
      operationId: hostel_beds_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-beds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bed'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
  /api/hostel-beds/{id}/:
    get:
      operationId: hostel_beds_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
    put:
      operationId: hostel_beds_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bed'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
    patch:
      operationId: hostel_beds_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBed'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
    delete:
      operationId: hostel_beds_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-beds/{id}/assign_student/:
    post:
      operationId: hostel_beds_assign_student_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bed'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
  /api/hostel-beds/{id}/student/:
    get:
      operationId: hostel_beds_student_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bed.
        required: true
      tags:
      - hostel-beds
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bed'
          description: ''
  /api/hostel-blocks/:
    get:
      operationId: hostel_blocks_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHostelBlockList'
          description: ''
    post:
      operationId: hostel_blocks_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-blocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelBlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelBlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelBlock'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
  /api/hostel-blocks/{id}/:
    get:
      operationId: hostel_blocks_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
    put:
      operationId: hostel_blocks_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelBlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelBlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelBlock'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
    patch:
      operationId: hostel_blocks_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHostelBlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHostelBlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHostelBlock'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
    delete:
      operationId: hostel_blocks_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-blocks/{id}/floors/:
    get:
      operationId: hostel_blocks_floors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
  /api/hostel-blocks/{id}/rooms/:
    get:
      operationId: hostel_blocks_rooms_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
  /api/hostel-blocks/{id}/statistics/:
    get:
      operationId: hostel_blocks_statistics_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel block.
        required: true
      tags:
      - hostel-blocks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelBlock'
          description: ''
  /api/hostel-dashboard/:
    get:
      operationId: hostel_dashboard_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: hostel_dashboard_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          description: No response body
  /api/hostel-dashboard/{id}/:
    get:
      operationId: hostel_dashboard_retrieve_2
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: hostel_dashboard_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: hostel_dashboard_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: hostel_dashboard_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-dashboard/overview/:
    get:
      operationId: hostel_dashboard_overview_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-dashboard
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/hostel-floors/:
    get:
      operationId: hostel_floors_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: block
        required: false
        in: query
        description: block
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hostel-floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHostelFloorList'
          description: ''
    post:
      operationId: hostel_floors_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelFloor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelFloor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelFloor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelFloor'
          description: ''
  /api/hostel-floors/{id}/:
    get:
      operationId: hostel_floors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel floor.
        required: true
      tags:
      - hostel-floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelFloor'
          description: ''
    put:
      operationId: hostel_floors_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel floor.
        required: true
      tags:
      - hostel-floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelFloor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelFloor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelFloor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelFloor'
          description: ''
    patch:
      operationId: hostel_floors_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel floor.
        required: true
      tags:
      - hostel-floors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHostelFloor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHostelFloor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHostelFloor'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelFloor'
          description: ''
    delete:
      operationId: hostel_floors_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel floor.
        required: true
      tags:
      - hostel-floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-floors/{id}/rooms/:
    get:
      operationId: hostel_floors_rooms_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel floor.
        required: true
      tags:
      - hostel-floors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelFloor'
          description: ''
  /api/hostel-lockers/:
    get:
      operationId: hostel_lockers_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: room
        required: false
        in: query
        description: room
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hostel-lockers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLockerList'
          description: ''
    post:
      operationId: hostel_lockers_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-lockers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Locker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Locker'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locker'
          description: ''
  /api/hostel-lockers/{id}/:
    get:
      operationId: hostel_lockers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this locker.
        required: true
      tags:
      - hostel-lockers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locker'
          description: ''
    put:
      operationId: hostel_lockers_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this locker.
        required: true
      tags:
      - hostel-lockers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Locker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Locker'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locker'
          description: ''
    patch:
      operationId: hostel_lockers_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this locker.
        required: true
      tags:
      - hostel-lockers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocker'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locker'
          description: ''
    delete:
      operationId: hostel_lockers_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this locker.
        required: true
      tags:
      - hostel-lockers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-mealplans/:
    get:
      operationId: hostel_mealplans_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: breakfast
        required: false
        in: query
        description: breakfast
        schema:
          type: string
      - name: day
        required: false
        in: query
        description: day
        schema:
          type: string
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
      - name: day__contains
        required: false
        in: query
        description: day__contains
        schema:
          type: string
      - name: day__endswith
        required: false
        in: query
        description: day__endswith
        schema:
          type: string
      - name: day__gt
        required: false
        in: query
        description: day__gt
        schema:
          type: string
      - name: day__gte
        required: false
        in: query
        description: day__gte
        schema:
          type: string
      - name: day__icontains
        required: false
        in: query
        description: day__icontains
        schema:
          type: string
      - name: day__iendswith
        required: false
        in: query
        description: day__iendswith
        schema:
          type: string
      - name: day__iexact
        required: false
        in: query
        description: day__iexact
        schema:
          type: string
      - name: day__in
        required: false
        in: query
        description: day__in
        schema:
          type: string
      - name: day__iregex
        required: false
        in: query
        description: day__iregex
        schema:
          type: string
      - name: day__isnull
        required: false
        in: query
        description: day__isnull
        schema:
          type: string
      - name: day__istartswith
        required: false
        in: query
        description: day__istartswith
        schema:
          type: string
      - name: day__lt
        required: false
        in: query
        description: day__lt
        schema:
          type: string
      - name: day__lte
        required: false
        in: query
        description: day__lte
        schema:
          type: string
      - name: day__range
        required: false
        in: query
        description: day__range
        schema:
          type: string
      - name: day__regex
        required: false
        in: query
        description: day__regex
        schema:
          type: string
      - name: day__startswith
        required: false
        in: query
        description: day__startswith
        schema:
          type: string
      - name: dinner
        required: false
        in: query
        description: dinner
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: lunch
        required: false
        in: query
        description: lunch
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hostel-mealplans
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMealPlanList'
          description: ''
    post:
      operationId: hostel_mealplans_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-mealplans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealPlan'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
  /api/hostel-mealplans/{id}/:
    get:
      operationId: hostel_mealplans_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal plan.
        required: true
      tags:
      - hostel-mealplans
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
    put:
      operationId: hostel_mealplans_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal plan.
        required: true
      tags:
      - hostel-mealplans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealPlan'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
    patch:
      operationId: hostel_mealplans_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal plan.
        required: true
      tags:
      - hostel-mealplans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMealPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMealPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMealPlan'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
    delete:
      operationId: hostel_mealplans_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal plan.
        required: true
      tags:
      - hostel-mealplans
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-mealplans/bulk_update/:
    post:
      operationId: hostel_mealplans_bulk_update_create
      description: Update multiple meal plans at once
      tags:
      - hostel-mealplans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealPlan'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
  /api/hostel-mealplans/week_plan/:
    get:
      operationId: hostel_mealplans_week_plan_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-mealplans
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
          description: ''
  /api/hostel-products/:
    get:
      operationId: hostel_products_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: availability
        required: false
        in: query
        description: availability
        schema:
          type: string
          enum:
          - In Stock
          - Out of Stock
          - Not in Use
      - name: availability__contains
        required: false
        in: query
        description: availability__contains
        schema:
          type: string
      - name: availability__endswith
        required: false
        in: query
        description: availability__endswith
        schema:
          type: string
      - name: availability__gt
        required: false
        in: query
        description: availability__gt
        schema:
          type: string
      - name: availability__gte
        required: false
        in: query
        description: availability__gte
        schema:
          type: string
      - name: availability__icontains
        required: false
        in: query
        description: availability__icontains
        schema:
          type: string
      - name: availability__iendswith
        required: false
        in: query
        description: availability__iendswith
        schema:
          type: string
      - name: availability__iexact
        required: false
        in: query
        description: availability__iexact
        schema:
          type: string
      - name: availability__in
        required: false
        in: query
        description: availability__in
        schema:
          type: string
      - name: availability__iregex
        required: false
        in: query
        description: availability__iregex
        schema:
          type: string
      - name: availability__isnull
        required: false
        in: query
        description: availability__isnull
        schema:
          type: string
      - name: availability__istartswith
        required: false
        in: query
        description: availability__istartswith
        schema:
          type: string
      - name: availability__lt
        required: false
        in: query
        description: availability__lt
        schema:
          type: string
      - name: availability__lte
        required: false
        in: query
        description: availability__lte
        schema:
          type: string
      - name: availability__range
        required: false
        in: query
        description: availability__range
        schema:
          type: string
      - name: availability__regex
        required: false
        in: query
        description: availability__regex
        schema:
          type: string
      - name: availability__startswith
        required: false
        in: query
        description: availability__startswith
        schema:
          type: string
      - name: bill_photo
        required: false
        in: query
        description: bill_photo
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: buyer_name
        required: false
        in: query
        description: buyer_name
        schema:
          type: string
      - name: buyer_phone
        required: false
        in: query
        description: buyer_phone
        schema:
          type: string
      - name: expiry_date
        required: false
        in: query
        description: expiry_date
        schema:
          type: string
      - name: expiry_date__contained_by
        required: false
        in: query
        description: expiry_date__contained_by
        schema:
          type: string
      - name: expiry_date__contains
        required: false
        in: query
        description: expiry_date__contains
        schema:
          type: string
      - name: expiry_date__day
        required: false
        in: query
        description: expiry_date__day
        schema:
          type: string
      - name: expiry_date__day__contained_by
        required: false
        in: query
        description: expiry_date__day__contained_by
        schema:
          type: string
      - name: expiry_date__day__contains
        required: false
        in: query
        description: expiry_date__day__contains
        schema:
          type: string
      - name: expiry_date__day__endswith
        required: false
        in: query
        description: expiry_date__day__endswith
        schema:
          type: string
      - name: expiry_date__day__gt
        required: false
        in: query
        description: expiry_date__day__gt
        schema:
          type: string
      - name: expiry_date__day__gte
        required: false
        in: query
        description: expiry_date__day__gte
        schema:
          type: string
      - name: expiry_date__day__icontains
        required: false
        in: query
        description: expiry_date__day__icontains
        schema:
          type: string
      - name: expiry_date__day__iendswith
        required: false
        in: query
        description: expiry_date__day__iendswith
        schema:
          type: string
      - name: expiry_date__day__iexact
        required: false
        in: query
        description: expiry_date__day__iexact
        schema:
          type: string
      - name: expiry_date__day__in
        required: false
        in: query
        description: expiry_date__day__in
        schema:
          type: string
      - name: expiry_date__day__iregex
        required: false
        in: query
        description: expiry_date__day__iregex
        schema:
          type: string
      - name: expiry_date__day__isnull
        required: false
        in: query
        description: expiry_date__day__isnull
        schema:
          type: string
      - name: expiry_date__day__istartswith
        required: false
        in: query
        description: expiry_date__day__istartswith
        schema:
          type: string
      - name: expiry_date__day__lt
        required: false
        in: query
        description: expiry_date__day__lt
        schema:
          type: string
      - name: expiry_date__day__lte
        required: false
        in: query
        description: expiry_date__day__lte
        schema:
          type: string
      - name: expiry_date__day__range
        required: false
        in: query
        description: expiry_date__day__range
        schema:
          type: string
      - name: expiry_date__day__regex
        required: false
        in: query
        description: expiry_date__day__regex
        schema:
          type: string
      - name: expiry_date__day__startswith
        required: false
        in: query
        description: expiry_date__day__startswith
        schema:
          type: string
      - name: expiry_date__endswith
        required: false
        in: query
        description: expiry_date__endswith
        schema:
          type: string
      - name: expiry_date__gt
        required: false
        in: query
        description: expiry_date__gt
        schema:
          type: string
      - name: expiry_date__gte
        required: false
        in: query
        description: expiry_date__gte
        schema:
          type: string
      - name: expiry_date__icontains
        required: false
        in: query
        description: expiry_date__icontains
        schema:
          type: string
      - name: expiry_date__iendswith
        required: false
        in: query
        description: expiry_date__iendswith
        schema:
          type: string
      - name: expiry_date__iexact
        required: false
        in: query
        description: expiry_date__iexact
        schema:
          type: string
      - name: expiry_date__in
        required: false
        in: query
        description: expiry_date__in
        schema:
          type: string
      - name: expiry_date__iregex
        required: false
        in: query
        description: expiry_date__iregex
        schema:
          type: string
      - name: expiry_date__isnull
        required: false
        in: query
        description: expiry_date__isnull
        schema:
          type: string
      - name: expiry_date__iso_week_day
        required: false
        in: query
        description: expiry_date__iso_week_day
        schema:
          type: string
      - name: expiry_date__iso_week_day__contained_by
        required: false
        in: query
        description: expiry_date__iso_week_day__contained_by
        schema:
          type: string
      - name: expiry_date__iso_week_day__contains
        required: false
        in: query
        description: expiry_date__iso_week_day__contains
        schema:
          type: string
      - name: expiry_date__iso_week_day__endswith
        required: false
        in: query
        description: expiry_date__iso_week_day__endswith
        schema:
          type: string
      - name: expiry_date__iso_week_day__gt
        required: false
        in: query
        description: expiry_date__iso_week_day__gt
        schema:
          type: string
      - name: expiry_date__iso_week_day__gte
        required: false
        in: query
        description: expiry_date__iso_week_day__gte
        schema:
          type: string
      - name: expiry_date__iso_week_day__icontains
        required: false
        in: query
        description: expiry_date__iso_week_day__icontains
        schema:
          type: string
      - name: expiry_date__iso_week_day__iendswith
        required: false
        in: query
        description: expiry_date__iso_week_day__iendswith
        schema:
          type: string
      - name: expiry_date__iso_week_day__iexact
        required: false
        in: query
        description: expiry_date__iso_week_day__iexact
        schema:
          type: string
      - name: expiry_date__iso_week_day__in
        required: false
        in: query
        description: expiry_date__iso_week_day__in
        schema:
          type: string
      - name: expiry_date__iso_week_day__iregex
        required: false
        in: query
        description: expiry_date__iso_week_day__iregex
        schema:
          type: string
      - name: expiry_date__iso_week_day__isnull
        required: false
        in: query
        description: expiry_date__iso_week_day__isnull
        schema:
          type: string
      - name: expiry_date__iso_week_day__istartswith
        required: false
        in: query
        description: expiry_date__iso_week_day__istartswith
        schema:
          type: string
      - name: expiry_date__iso_week_day__lt
        required: false
        in: query
        description: expiry_date__iso_week_day__lt
        schema:
          type: string
      - name: expiry_date__iso_week_day__lte
        required: false
        in: query
        description: expiry_date__iso_week_day__lte
        schema:
          type: string
      - name: expiry_date__iso_week_day__range
        required: false
        in: query
        description: expiry_date__iso_week_day__range
        schema:
          type: string
      - name: expiry_date__iso_week_day__regex
        required: false
        in: query
        description: expiry_date__iso_week_day__regex
        schema:
          type: string
      - name: expiry_date__iso_week_day__startswith
        required: false
        in: query
        description: expiry_date__iso_week_day__startswith
        schema:
          type: string
      - name: expiry_date__iso_year
        required: false
        in: query
        description: expiry_date__iso_year
        schema:
          type: string
      - name: expiry_date__iso_year__contained_by
        required: false
        in: query
        description: expiry_date__iso_year__contained_by
        schema:
          type: string
      - name: expiry_date__iso_year__contains
        required: false
        in: query
        description: expiry_date__iso_year__contains
        schema:
          type: string
      - name: expiry_date__iso_year__endswith
        required: false
        in: query
        description: expiry_date__iso_year__endswith
        schema:
          type: string
      - name: expiry_date__iso_year__gt
        required: false
        in: query
        description: expiry_date__iso_year__gt
        schema:
          type: string
      - name: expiry_date__iso_year__gte
        required: false
        in: query
        description: expiry_date__iso_year__gte
        schema:
          type: string
      - name: expiry_date__iso_year__icontains
        required: false
        in: query
        description: expiry_date__iso_year__icontains
        schema:
          type: string
      - name: expiry_date__iso_year__iendswith
        required: false
        in: query
        description: expiry_date__iso_year__iendswith
        schema:
          type: string
      - name: expiry_date__iso_year__iexact
        required: false
        in: query
        description: expiry_date__iso_year__iexact
        schema:
          type: string
      - name: expiry_date__iso_year__in
        required: false
        in: query
        description: expiry_date__iso_year__in
        schema:
          type: string
      - name: expiry_date__iso_year__iregex
        required: false
        in: query
        description: expiry_date__iso_year__iregex
        schema:
          type: string
      - name: expiry_date__iso_year__isnull
        required: false
        in: query
        description: expiry_date__iso_year__isnull
        schema:
          type: string
      - name: expiry_date__iso_year__istartswith
        required: false
        in: query
        description: expiry_date__iso_year__istartswith
        schema:
          type: string
      - name: expiry_date__iso_year__lt
        required: false
        in: query
        description: expiry_date__iso_year__lt
        schema:
          type: string
      - name: expiry_date__iso_year__lte
        required: false
        in: query
        description: expiry_date__iso_year__lte
        schema:
          type: string
      - name: expiry_date__iso_year__range
        required: false
        in: query
        description: expiry_date__iso_year__range
        schema:
          type: string
      - name: expiry_date__iso_year__regex
        required: false
        in: query
        description: expiry_date__iso_year__regex
        schema:
          type: string
      - name: expiry_date__iso_year__startswith
        required: false
        in: query
        description: expiry_date__iso_year__startswith
        schema:
          type: string
      - name: expiry_date__istartswith
        required: false
        in: query
        description: expiry_date__istartswith
        schema:
          type: string
      - name: expiry_date__lt
        required: false
        in: query
        description: expiry_date__lt
        schema:
          type: string
      - name: expiry_date__lte
        required: false
        in: query
        description: expiry_date__lte
        schema:
          type: string
      - name: expiry_date__month
        required: false
        in: query
        description: expiry_date__month
        schema:
          type: string
      - name: expiry_date__month__contained_by
        required: false
        in: query
        description: expiry_date__month__contained_by
        schema:
          type: string
      - name: expiry_date__month__contains
        required: false
        in: query
        description: expiry_date__month__contains
        schema:
          type: string
      - name: expiry_date__month__endswith
        required: false
        in: query
        description: expiry_date__month__endswith
        schema:
          type: string
      - name: expiry_date__month__gt
        required: false
        in: query
        description: expiry_date__month__gt
        schema:
          type: string
      - name: expiry_date__month__gte
        required: false
        in: query
        description: expiry_date__month__gte
        schema:
          type: string
      - name: expiry_date__month__icontains
        required: false
        in: query
        description: expiry_date__month__icontains
        schema:
          type: string
      - name: expiry_date__month__iendswith
        required: false
        in: query
        description: expiry_date__month__iendswith
        schema:
          type: string
      - name: expiry_date__month__iexact
        required: false
        in: query
        description: expiry_date__month__iexact
        schema:
          type: string
      - name: expiry_date__month__in
        required: false
        in: query
        description: expiry_date__month__in
        schema:
          type: string
      - name: expiry_date__month__iregex
        required: false
        in: query
        description: expiry_date__month__iregex
        schema:
          type: string
      - name: expiry_date__month__isnull
        required: false
        in: query
        description: expiry_date__month__isnull
        schema:
          type: string
      - name: expiry_date__month__istartswith
        required: false
        in: query
        description: expiry_date__month__istartswith
        schema:
          type: string
      - name: expiry_date__month__lt
        required: false
        in: query
        description: expiry_date__month__lt
        schema:
          type: string
      - name: expiry_date__month__lte
        required: false
        in: query
        description: expiry_date__month__lte
        schema:
          type: string
      - name: expiry_date__month__range
        required: false
        in: query
        description: expiry_date__month__range
        schema:
          type: string
      - name: expiry_date__month__regex
        required: false
        in: query
        description: expiry_date__month__regex
        schema:
          type: string
      - name: expiry_date__month__startswith
        required: false
        in: query
        description: expiry_date__month__startswith
        schema:
          type: string
      - name: expiry_date__quarter
        required: false
        in: query
        description: expiry_date__quarter
        schema:
          type: string
      - name: expiry_date__quarter__contained_by
        required: false
        in: query
        description: expiry_date__quarter__contained_by
        schema:
          type: string
      - name: expiry_date__quarter__contains
        required: false
        in: query
        description: expiry_date__quarter__contains
        schema:
          type: string
      - name: expiry_date__quarter__endswith
        required: false
        in: query
        description: expiry_date__quarter__endswith
        schema:
          type: string
      - name: expiry_date__quarter__gt
        required: false
        in: query
        description: expiry_date__quarter__gt
        schema:
          type: string
      - name: expiry_date__quarter__gte
        required: false
        in: query
        description: expiry_date__quarter__gte
        schema:
          type: string
      - name: expiry_date__quarter__icontains
        required: false
        in: query
        description: expiry_date__quarter__icontains
        schema:
          type: string
      - name: expiry_date__quarter__iendswith
        required: false
        in: query
        description: expiry_date__quarter__iendswith
        schema:
          type: string
      - name: expiry_date__quarter__iexact
        required: false
        in: query
        description: expiry_date__quarter__iexact
        schema:
          type: string
      - name: expiry_date__quarter__in
        required: false
        in: query
        description: expiry_date__quarter__in
        schema:
          type: string
      - name: expiry_date__quarter__iregex
        required: false
        in: query
        description: expiry_date__quarter__iregex
        schema:
          type: string
      - name: expiry_date__quarter__isnull
        required: false
        in: query
        description: expiry_date__quarter__isnull
        schema:
          type: string
      - name: expiry_date__quarter__istartswith
        required: false
        in: query
        description: expiry_date__quarter__istartswith
        schema:
          type: string
      - name: expiry_date__quarter__lt
        required: false
        in: query
        description: expiry_date__quarter__lt
        schema:
          type: string
      - name: expiry_date__quarter__lte
        required: false
        in: query
        description: expiry_date__quarter__lte
        schema:
          type: string
      - name: expiry_date__quarter__range
        required: false
        in: query
        description: expiry_date__quarter__range
        schema:
          type: string
      - name: expiry_date__quarter__regex
        required: false
        in: query
        description: expiry_date__quarter__regex
        schema:
          type: string
      - name: expiry_date__quarter__startswith
        required: false
        in: query
        description: expiry_date__quarter__startswith
        schema:
          type: string
      - name: expiry_date__range
        required: false
        in: query
        description: expiry_date__range
        schema:
          type: string
      - name: expiry_date__regex
        required: false
        in: query
        description: expiry_date__regex
        schema:
          type: string
      - name: expiry_date__startswith
        required: false
        in: query
        description: expiry_date__startswith
        schema:
          type: string
      - name: expiry_date__week
        required: false
        in: query
        description: expiry_date__week
        schema:
          type: string
      - name: expiry_date__week__contained_by
        required: false
        in: query
        description: expiry_date__week__contained_by
        schema:
          type: string
      - name: expiry_date__week__contains
        required: false
        in: query
        description: expiry_date__week__contains
        schema:
          type: string
      - name: expiry_date__week__endswith
        required: false
        in: query
        description: expiry_date__week__endswith
        schema:
          type: string
      - name: expiry_date__week__gt
        required: false
        in: query
        description: expiry_date__week__gt
        schema:
          type: string
      - name: expiry_date__week__gte
        required: false
        in: query
        description: expiry_date__week__gte
        schema:
          type: string
      - name: expiry_date__week__icontains
        required: false
        in: query
        description: expiry_date__week__icontains
        schema:
          type: string
      - name: expiry_date__week__iendswith
        required: false
        in: query
        description: expiry_date__week__iendswith
        schema:
          type: string
      - name: expiry_date__week__iexact
        required: false
        in: query
        description: expiry_date__week__iexact
        schema:
          type: string
      - name: expiry_date__week__in
        required: false
        in: query
        description: expiry_date__week__in
        schema:
          type: string
      - name: expiry_date__week__iregex
        required: false
        in: query
        description: expiry_date__week__iregex
        schema:
          type: string
      - name: expiry_date__week__isnull
        required: false
        in: query
        description: expiry_date__week__isnull
        schema:
          type: string
      - name: expiry_date__week__istartswith
        required: false
        in: query
        description: expiry_date__week__istartswith
        schema:
          type: string
      - name: expiry_date__week__lt
        required: false
        in: query
        description: expiry_date__week__lt
        schema:
          type: string
      - name: expiry_date__week__lte
        required: false
        in: query
        description: expiry_date__week__lte
        schema:
          type: string
      - name: expiry_date__week__range
        required: false
        in: query
        description: expiry_date__week__range
        schema:
          type: string
      - name: expiry_date__week__regex
        required: false
        in: query
        description: expiry_date__week__regex
        schema:
          type: string
      - name: expiry_date__week__startswith
        required: false
        in: query
        description: expiry_date__week__startswith
        schema:
          type: string
      - name: expiry_date__week_day
        required: false
        in: query
        description: expiry_date__week_day
        schema:
          type: string
      - name: expiry_date__week_day__contained_by
        required: false
        in: query
        description: expiry_date__week_day__contained_by
        schema:
          type: string
      - name: expiry_date__week_day__contains
        required: false
        in: query
        description: expiry_date__week_day__contains
        schema:
          type: string
      - name: expiry_date__week_day__endswith
        required: false
        in: query
        description: expiry_date__week_day__endswith
        schema:
          type: string
      - name: expiry_date__week_day__gt
        required: false
        in: query
        description: expiry_date__week_day__gt
        schema:
          type: string
      - name: expiry_date__week_day__gte
        required: false
        in: query
        description: expiry_date__week_day__gte
        schema:
          type: string
      - name: expiry_date__week_day__icontains
        required: false
        in: query
        description: expiry_date__week_day__icontains
        schema:
          type: string
      - name: expiry_date__week_day__iendswith
        required: false
        in: query
        description: expiry_date__week_day__iendswith
        schema:
          type: string
      - name: expiry_date__week_day__iexact
        required: false
        in: query
        description: expiry_date__week_day__iexact
        schema:
          type: string
      - name: expiry_date__week_day__in
        required: false
        in: query
        description: expiry_date__week_day__in
        schema:
          type: string
      - name: expiry_date__week_day__iregex
        required: false
        in: query
        description: expiry_date__week_day__iregex
        schema:
          type: string
      - name: expiry_date__week_day__isnull
        required: false
        in: query
        description: expiry_date__week_day__isnull
        schema:
          type: string
      - name: expiry_date__week_day__istartswith
        required: false
        in: query
        description: expiry_date__week_day__istartswith
        schema:
          type: string
      - name: expiry_date__week_day__lt
        required: false
        in: query
        description: expiry_date__week_day__lt
        schema:
          type: string
      - name: expiry_date__week_day__lte
        required: false
        in: query
        description: expiry_date__week_day__lte
        schema:
          type: string
      - name: expiry_date__week_day__range
        required: false
        in: query
        description: expiry_date__week_day__range
        schema:
          type: string
      - name: expiry_date__week_day__regex
        required: false
        in: query
        description: expiry_date__week_day__regex
        schema:
          type: string
      - name: expiry_date__week_day__startswith
        required: false
        in: query
        description: expiry_date__week_day__startswith
        schema:
          type: string
      - name: expiry_date__year
        required: false
        in: query
        description: expiry_date__year
        schema:
          type: string
      - name: expiry_date__year__contained_by
        required: false
        in: query
        description: expiry_date__year__contained_by
        schema:
          type: string
      - name: expiry_date__year__contains
        required: false
        in: query
        description: expiry_date__year__contains
        schema:
          type: string
      - name: expiry_date__year__endswith
        required: false
        in: query
        description: expiry_date__year__endswith
        schema:
          type: string
      - name: expiry_date__year__gt
        required: false
        in: query
        description: expiry_date__year__gt
        schema:
          type: string
      - name: expiry_date__year__gte
        required: false
        in: query
        description: expiry_date__year__gte
        schema:
          type: string
      - name: expiry_date__year__icontains
        required: false
        in: query
        description: expiry_date__year__icontains
        schema:
          type: string
      - name: expiry_date__year__iendswith
        required: false
        in: query
        description: expiry_date__year__iendswith
        schema:
          type: string
      - name: expiry_date__year__iexact
        required: false
        in: query
        description: expiry_date__year__iexact
        schema:
          type: string
      - name: expiry_date__year__in
        required: false
        in: query
        description: expiry_date__year__in
        schema:
          type: string
      - name: expiry_date__year__iregex
        required: false
        in: query
        description: expiry_date__year__iregex
        schema:
          type: string
      - name: expiry_date__year__isnull
        required: false
        in: query
        description: expiry_date__year__isnull
        schema:
          type: string
      - name: expiry_date__year__istartswith
        required: false
        in: query
        description: expiry_date__year__istartswith
        schema:
          type: string
      - name: expiry_date__year__lt
        required: false
        in: query
        description: expiry_date__year__lt
        schema:
          type: string
      - name: expiry_date__year__lte
        required: false
        in: query
        description: expiry_date__year__lte
        schema:
          type: string
      - name: expiry_date__year__range
        required: false
        in: query
        description: expiry_date__year__range
        schema:
          type: string
      - name: expiry_date__year__regex
        required: false
        in: query
        description: expiry_date__year__regex
        schema:
          type: string
      - name: expiry_date__year__startswith
        required: false
        in: query
        description: expiry_date__year__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: product_photo
        required: false
        in: query
        description: product_photo
        schema:
          type: string
      - name: product_use
        required: false
        in: query
        description: product_use
        schema:
          type: string
      - name: purchase_date
        required: false
        in: query
        description: purchase_date
        schema:
          type: string
      - name: purchase_date__contained_by
        required: false
        in: query
        description: purchase_date__contained_by
        schema:
          type: string
      - name: purchase_date__contains
        required: false
        in: query
        description: purchase_date__contains
        schema:
          type: string
      - name: purchase_date__day
        required: false
        in: query
        description: purchase_date__day
        schema:
          type: string
      - name: purchase_date__day__contained_by
        required: false
        in: query
        description: purchase_date__day__contained_by
        schema:
          type: string
      - name: purchase_date__day__contains
        required: false
        in: query
        description: purchase_date__day__contains
        schema:
          type: string
      - name: purchase_date__day__endswith
        required: false
        in: query
        description: purchase_date__day__endswith
        schema:
          type: string
      - name: purchase_date__day__gt
        required: false
        in: query
        description: purchase_date__day__gt
        schema:
          type: string
      - name: purchase_date__day__gte
        required: false
        in: query
        description: purchase_date__day__gte
        schema:
          type: string
      - name: purchase_date__day__icontains
        required: false
        in: query
        description: purchase_date__day__icontains
        schema:
          type: string
      - name: purchase_date__day__iendswith
        required: false
        in: query
        description: purchase_date__day__iendswith
        schema:
          type: string
      - name: purchase_date__day__iexact
        required: false
        in: query
        description: purchase_date__day__iexact
        schema:
          type: string
      - name: purchase_date__day__in
        required: false
        in: query
        description: purchase_date__day__in
        schema:
          type: string
      - name: purchase_date__day__iregex
        required: false
        in: query
        description: purchase_date__day__iregex
        schema:
          type: string
      - name: purchase_date__day__isnull
        required: false
        in: query
        description: purchase_date__day__isnull
        schema:
          type: string
      - name: purchase_date__day__istartswith
        required: false
        in: query
        description: purchase_date__day__istartswith
        schema:
          type: string
      - name: purchase_date__day__lt
        required: false
        in: query
        description: purchase_date__day__lt
        schema:
          type: string
      - name: purchase_date__day__lte
        required: false
        in: query
        description: purchase_date__day__lte
        schema:
          type: string
      - name: purchase_date__day__range
        required: false
        in: query
        description: purchase_date__day__range
        schema:
          type: string
      - name: purchase_date__day__regex
        required: false
        in: query
        description: purchase_date__day__regex
        schema:
          type: string
      - name: purchase_date__day__startswith
        required: false
        in: query
        description: purchase_date__day__startswith
        schema:
          type: string
      - name: purchase_date__endswith
        required: false
        in: query
        description: purchase_date__endswith
        schema:
          type: string
      - name: purchase_date__gt
        required: false
        in: query
        description: purchase_date__gt
        schema:
          type: string
      - name: purchase_date__gte
        required: false
        in: query
        description: purchase_date__gte
        schema:
          type: string
      - name: purchase_date__icontains
        required: false
        in: query
        description: purchase_date__icontains
        schema:
          type: string
      - name: purchase_date__iendswith
        required: false
        in: query
        description: purchase_date__iendswith
        schema:
          type: string
      - name: purchase_date__iexact
        required: false
        in: query
        description: purchase_date__iexact
        schema:
          type: string
      - name: purchase_date__in
        required: false
        in: query
        description: purchase_date__in
        schema:
          type: string
      - name: purchase_date__iregex
        required: false
        in: query
        description: purchase_date__iregex
        schema:
          type: string
      - name: purchase_date__isnull
        required: false
        in: query
        description: purchase_date__isnull
        schema:
          type: string
      - name: purchase_date__iso_week_day
        required: false
        in: query
        description: purchase_date__iso_week_day
        schema:
          type: string
      - name: purchase_date__iso_week_day__contained_by
        required: false
        in: query
        description: purchase_date__iso_week_day__contained_by
        schema:
          type: string
      - name: purchase_date__iso_week_day__contains
        required: false
        in: query
        description: purchase_date__iso_week_day__contains
        schema:
          type: string
      - name: purchase_date__iso_week_day__endswith
        required: false
        in: query
        description: purchase_date__iso_week_day__endswith
        schema:
          type: string
      - name: purchase_date__iso_week_day__gt
        required: false
        in: query
        description: purchase_date__iso_week_day__gt
        schema:
          type: string
      - name: purchase_date__iso_week_day__gte
        required: false
        in: query
        description: purchase_date__iso_week_day__gte
        schema:
          type: string
      - name: purchase_date__iso_week_day__icontains
        required: false
        in: query
        description: purchase_date__iso_week_day__icontains
        schema:
          type: string
      - name: purchase_date__iso_week_day__iendswith
        required: false
        in: query
        description: purchase_date__iso_week_day__iendswith
        schema:
          type: string
      - name: purchase_date__iso_week_day__iexact
        required: false
        in: query
        description: purchase_date__iso_week_day__iexact
        schema:
          type: string
      - name: purchase_date__iso_week_day__in
        required: false
        in: query
        description: purchase_date__iso_week_day__in
        schema:
          type: string
      - name: purchase_date__iso_week_day__iregex
        required: false
        in: query
        description: purchase_date__iso_week_day__iregex
        schema:
          type: string
      - name: purchase_date__iso_week_day__isnull
        required: false
        in: query
        description: purchase_date__iso_week_day__isnull
        schema:
          type: string
      - name: purchase_date__iso_week_day__istartswith
        required: false
        in: query
        description: purchase_date__iso_week_day__istartswith
        schema:
          type: string
      - name: purchase_date__iso_week_day__lt
        required: false
        in: query
        description: purchase_date__iso_week_day__lt
        schema:
          type: string
      - name: purchase_date__iso_week_day__lte
        required: false
        in: query
        description: purchase_date__iso_week_day__lte
        schema:
          type: string
      - name: purchase_date__iso_week_day__range
        required: false
        in: query
        description: purchase_date__iso_week_day__range
        schema:
          type: string
      - name: purchase_date__iso_week_day__regex
        required: false
        in: query
        description: purchase_date__iso_week_day__regex
        schema:
          type: string
      - name: purchase_date__iso_week_day__startswith
        required: false
        in: query
        description: purchase_date__iso_week_day__startswith
        schema:
          type: string
      - name: purchase_date__iso_year
        required: false
        in: query
        description: purchase_date__iso_year
        schema:
          type: string
      - name: purchase_date__iso_year__contained_by
        required: false
        in: query
        description: purchase_date__iso_year__contained_by
        schema:
          type: string
      - name: purchase_date__iso_year__contains
        required: false
        in: query
        description: purchase_date__iso_year__contains
        schema:
          type: string
      - name: purchase_date__iso_year__endswith
        required: false
        in: query
        description: purchase_date__iso_year__endswith
        schema:
          type: string
      - name: purchase_date__iso_year__gt
        required: false
        in: query
        description: purchase_date__iso_year__gt
        schema:
          type: string
      - name: purchase_date__iso_year__gte
        required: false
        in: query
        description: purchase_date__iso_year__gte
        schema:
          type: string
      - name: purchase_date__iso_year__icontains
        required: false
        in: query
        description: purchase_date__iso_year__icontains
        schema:
          type: string
      - name: purchase_date__iso_year__iendswith
        required: false
        in: query
        description: purchase_date__iso_year__iendswith
        schema:
          type: string
      - name: purchase_date__iso_year__iexact
        required: false
        in: query
        description: purchase_date__iso_year__iexact
        schema:
          type: string
      - name: purchase_date__iso_year__in
        required: false
        in: query
        description: purchase_date__iso_year__in
        schema:
          type: string
      - name: purchase_date__iso_year__iregex
        required: false
        in: query
        description: purchase_date__iso_year__iregex
        schema:
          type: string
      - name: purchase_date__iso_year__isnull
        required: false
        in: query
        description: purchase_date__iso_year__isnull
        schema:
          type: string
      - name: purchase_date__iso_year__istartswith
        required: false
        in: query
        description: purchase_date__iso_year__istartswith
        schema:
          type: string
      - name: purchase_date__iso_year__lt
        required: false
        in: query
        description: purchase_date__iso_year__lt
        schema:
          type: string
      - name: purchase_date__iso_year__lte
        required: false
        in: query
        description: purchase_date__iso_year__lte
        schema:
          type: string
      - name: purchase_date__iso_year__range
        required: false
        in: query
        description: purchase_date__iso_year__range
        schema:
          type: string
      - name: purchase_date__iso_year__regex
        required: false
        in: query
        description: purchase_date__iso_year__regex
        schema:
          type: string
      - name: purchase_date__iso_year__startswith
        required: false
        in: query
        description: purchase_date__iso_year__startswith
        schema:
          type: string
      - name: purchase_date__istartswith
        required: false
        in: query
        description: purchase_date__istartswith
        schema:
          type: string
      - name: purchase_date__lt
        required: false
        in: query
        description: purchase_date__lt
        schema:
          type: string
      - name: purchase_date__lte
        required: false
        in: query
        description: purchase_date__lte
        schema:
          type: string
      - name: purchase_date__month
        required: false
        in: query
        description: purchase_date__month
        schema:
          type: string
      - name: purchase_date__month__contained_by
        required: false
        in: query
        description: purchase_date__month__contained_by
        schema:
          type: string
      - name: purchase_date__month__contains
        required: false
        in: query
        description: purchase_date__month__contains
        schema:
          type: string
      - name: purchase_date__month__endswith
        required: false
        in: query
        description: purchase_date__month__endswith
        schema:
          type: string
      - name: purchase_date__month__gt
        required: false
        in: query
        description: purchase_date__month__gt
        schema:
          type: string
      - name: purchase_date__month__gte
        required: false
        in: query
        description: purchase_date__month__gte
        schema:
          type: string
      - name: purchase_date__month__icontains
        required: false
        in: query
        description: purchase_date__month__icontains
        schema:
          type: string
      - name: purchase_date__month__iendswith
        required: false
        in: query
        description: purchase_date__month__iendswith
        schema:
          type: string
      - name: purchase_date__month__iexact
        required: false
        in: query
        description: purchase_date__month__iexact
        schema:
          type: string
      - name: purchase_date__month__in
        required: false
        in: query
        description: purchase_date__month__in
        schema:
          type: string
      - name: purchase_date__month__iregex
        required: false
        in: query
        description: purchase_date__month__iregex
        schema:
          type: string
      - name: purchase_date__month__isnull
        required: false
        in: query
        description: purchase_date__month__isnull
        schema:
          type: string
      - name: purchase_date__month__istartswith
        required: false
        in: query
        description: purchase_date__month__istartswith
        schema:
          type: string
      - name: purchase_date__month__lt
        required: false
        in: query
        description: purchase_date__month__lt
        schema:
          type: string
      - name: purchase_date__month__lte
        required: false
        in: query
        description: purchase_date__month__lte
        schema:
          type: string
      - name: purchase_date__month__range
        required: false
        in: query
        description: purchase_date__month__range
        schema:
          type: string
      - name: purchase_date__month__regex
        required: false
        in: query
        description: purchase_date__month__regex
        schema:
          type: string
      - name: purchase_date__month__startswith
        required: false
        in: query
        description: purchase_date__month__startswith
        schema:
          type: string
      - name: purchase_date__quarter
        required: false
        in: query
        description: purchase_date__quarter
        schema:
          type: string
      - name: purchase_date__quarter__contained_by
        required: false
        in: query
        description: purchase_date__quarter__contained_by
        schema:
          type: string
      - name: purchase_date__quarter__contains
        required: false
        in: query
        description: purchase_date__quarter__contains
        schema:
          type: string
      - name: purchase_date__quarter__endswith
        required: false
        in: query
        description: purchase_date__quarter__endswith
        schema:
          type: string
      - name: purchase_date__quarter__gt
        required: false
        in: query
        description: purchase_date__quarter__gt
        schema:
          type: string
      - name: purchase_date__quarter__gte
        required: false
        in: query
        description: purchase_date__quarter__gte
        schema:
          type: string
      - name: purchase_date__quarter__icontains
        required: false
        in: query
        description: purchase_date__quarter__icontains
        schema:
          type: string
      - name: purchase_date__quarter__iendswith
        required: false
        in: query
        description: purchase_date__quarter__iendswith
        schema:
          type: string
      - name: purchase_date__quarter__iexact
        required: false
        in: query
        description: purchase_date__quarter__iexact
        schema:
          type: string
      - name: purchase_date__quarter__in
        required: false
        in: query
        description: purchase_date__quarter__in
        schema:
          type: string
      - name: purchase_date__quarter__iregex
        required: false
        in: query
        description: purchase_date__quarter__iregex
        schema:
          type: string
      - name: purchase_date__quarter__isnull
        required: false
        in: query
        description: purchase_date__quarter__isnull
        schema:
          type: string
      - name: purchase_date__quarter__istartswith
        required: false
        in: query
        description: purchase_date__quarter__istartswith
        schema:
          type: string
      - name: purchase_date__quarter__lt
        required: false
        in: query
        description: purchase_date__quarter__lt
        schema:
          type: string
      - name: purchase_date__quarter__lte
        required: false
        in: query
        description: purchase_date__quarter__lte
        schema:
          type: string
      - name: purchase_date__quarter__range
        required: false
        in: query
        description: purchase_date__quarter__range
        schema:
          type: string
      - name: purchase_date__quarter__regex
        required: false
        in: query
        description: purchase_date__quarter__regex
        schema:
          type: string
      - name: purchase_date__quarter__startswith
        required: false
        in: query
        description: purchase_date__quarter__startswith
        schema:
          type: string
      - name: purchase_date__range
        required: false
        in: query
        description: purchase_date__range
        schema:
          type: string
      - name: purchase_date__regex
        required: false
        in: query
        description: purchase_date__regex
        schema:
          type: string
      - name: purchase_date__startswith
        required: false
        in: query
        description: purchase_date__startswith
        schema:
          type: string
      - name: purchase_date__week
        required: false
        in: query
        description: purchase_date__week
        schema:
          type: string
      - name: purchase_date__week__contained_by
        required: false
        in: query
        description: purchase_date__week__contained_by
        schema:
          type: string
      - name: purchase_date__week__contains
        required: false
        in: query
        description: purchase_date__week__contains
        schema:
          type: string
      - name: purchase_date__week__endswith
        required: false
        in: query
        description: purchase_date__week__endswith
        schema:
          type: string
      - name: purchase_date__week__gt
        required: false
        in: query
        description: purchase_date__week__gt
        schema:
          type: string
      - name: purchase_date__week__gte
        required: false
        in: query
        description: purchase_date__week__gte
        schema:
          type: string
      - name: purchase_date__week__icontains
        required: false
        in: query
        description: purchase_date__week__icontains
        schema:
          type: string
      - name: purchase_date__week__iendswith
        required: false
        in: query
        description: purchase_date__week__iendswith
        schema:
          type: string
      - name: purchase_date__week__iexact
        required: false
        in: query
        description: purchase_date__week__iexact
        schema:
          type: string
      - name: purchase_date__week__in
        required: false
        in: query
        description: purchase_date__week__in
        schema:
          type: string
      - name: purchase_date__week__iregex
        required: false
        in: query
        description: purchase_date__week__iregex
        schema:
          type: string
      - name: purchase_date__week__isnull
        required: false
        in: query
        description: purchase_date__week__isnull
        schema:
          type: string
      - name: purchase_date__week__istartswith
        required: false
        in: query
        description: purchase_date__week__istartswith
        schema:
          type: string
      - name: purchase_date__week__lt
        required: false
        in: query
        description: purchase_date__week__lt
        schema:
          type: string
      - name: purchase_date__week__lte
        required: false
        in: query
        description: purchase_date__week__lte
        schema:
          type: string
      - name: purchase_date__week__range
        required: false
        in: query
        description: purchase_date__week__range
        schema:
          type: string
      - name: purchase_date__week__regex
        required: false
        in: query
        description: purchase_date__week__regex
        schema:
          type: string
      - name: purchase_date__week__startswith
        required: false
        in: query
        description: purchase_date__week__startswith
        schema:
          type: string
      - name: purchase_date__week_day
        required: false
        in: query
        description: purchase_date__week_day
        schema:
          type: string
      - name: purchase_date__week_day__contained_by
        required: false
        in: query
        description: purchase_date__week_day__contained_by
        schema:
          type: string
      - name: purchase_date__week_day__contains
        required: false
        in: query
        description: purchase_date__week_day__contains
        schema:
          type: string
      - name: purchase_date__week_day__endswith
        required: false
        in: query
        description: purchase_date__week_day__endswith
        schema:
          type: string
      - name: purchase_date__week_day__gt
        required: false
        in: query
        description: purchase_date__week_day__gt
        schema:
          type: string
      - name: purchase_date__week_day__gte
        required: false
        in: query
        description: purchase_date__week_day__gte
        schema:
          type: string
      - name: purchase_date__week_day__icontains
        required: false
        in: query
        description: purchase_date__week_day__icontains
        schema:
          type: string
      - name: purchase_date__week_day__iendswith
        required: false
        in: query
        description: purchase_date__week_day__iendswith
        schema:
          type: string
      - name: purchase_date__week_day__iexact
        required: false
        in: query
        description: purchase_date__week_day__iexact
        schema:
          type: string
      - name: purchase_date__week_day__in
        required: false
        in: query
        description: purchase_date__week_day__in
        schema:
          type: string
      - name: purchase_date__week_day__iregex
        required: false
        in: query
        description: purchase_date__week_day__iregex
        schema:
          type: string
      - name: purchase_date__week_day__isnull
        required: false
        in: query
        description: purchase_date__week_day__isnull
        schema:
          type: string
      - name: purchase_date__week_day__istartswith
        required: false
        in: query
        description: purchase_date__week_day__istartswith
        schema:
          type: string
      - name: purchase_date__week_day__lt
        required: false
        in: query
        description: purchase_date__week_day__lt
        schema:
          type: string
      - name: purchase_date__week_day__lte
        required: false
        in: query
        description: purchase_date__week_day__lte
        schema:
          type: string
      - name: purchase_date__week_day__range
        required: false
        in: query
        description: purchase_date__week_day__range
        schema:
          type: string
      - name: purchase_date__week_day__regex
        required: false
        in: query
        description: purchase_date__week_day__regex
        schema:
          type: string
      - name: purchase_date__week_day__startswith
        required: false
        in: query
        description: purchase_date__week_day__startswith
        schema:
          type: string
      - name: purchase_date__year
        required: false
        in: query
        description: purchase_date__year
        schema:
          type: string
      - name: purchase_date__year__contained_by
        required: false
        in: query
        description: purchase_date__year__contained_by
        schema:
          type: string
      - name: purchase_date__year__contains
        required: false
        in: query
        description: purchase_date__year__contains
        schema:
          type: string
      - name: purchase_date__year__endswith
        required: false
        in: query
        description: purchase_date__year__endswith
        schema:
          type: string
      - name: purchase_date__year__gt
        required: false
        in: query
        description: purchase_date__year__gt
        schema:
          type: string
      - name: purchase_date__year__gte
        required: false
        in: query
        description: purchase_date__year__gte
        schema:
          type: string
      - name: purchase_date__year__icontains
        required: false
        in: query
        description: purchase_date__year__icontains
        schema:
          type: string
      - name: purchase_date__year__iendswith
        required: false
        in: query
        description: purchase_date__year__iendswith
        schema:
          type: string
      - name: purchase_date__year__iexact
        required: false
        in: query
        description: purchase_date__year__iexact
        schema:
          type: string
      - name: purchase_date__year__in
        required: false
        in: query
        description: purchase_date__year__in
        schema:
          type: string
      - name: purchase_date__year__iregex
        required: false
        in: query
        description: purchase_date__year__iregex
        schema:
          type: string
      - name: purchase_date__year__isnull
        required: false
        in: query
        description: purchase_date__year__isnull
        schema:
          type: string
      - name: purchase_date__year__istartswith
        required: false
        in: query
        description: purchase_date__year__istartswith
        schema:
          type: string
      - name: purchase_date__year__lt
        required: false
        in: query
        description: purchase_date__year__lt
        schema:
          type: string
      - name: purchase_date__year__lte
        required: false
        in: query
        description: purchase_date__year__lte
        schema:
          type: string
      - name: purchase_date__year__range
        required: false
        in: query
        description: purchase_date__year__range
        schema:
          type: string
      - name: purchase_date__year__regex
        required: false
        in: query
        description: purchase_date__year__regex
        schema:
          type: string
      - name: purchase_date__year__startswith
        required: false
        in: query
        description: purchase_date__year__startswith
        schema:
          type: string
      - name: quantity
        required: false
        in: query
        description: quantity
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: shop_name
        required: false
        in: query
        description: shop_name
        schema:
          type: string
      - name: vendor_phone
        required: false
        in: query
        description: vendor_phone
        schema:
          type: string
      tags:
      - hostel-products
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: hostel_products_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/hostel-products/{id}/:
    get:
      operationId: hostel_products_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - hostel-products
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: hostel_products_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - hostel-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: hostel_products_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - hostel-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: hostel_products_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - hostel-products
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-products/expiring_products/:
    get:
      operationId: hostel_products_expiring_products_retrieve
      description: Get products expiring in the next 30 days
      tags:
      - hostel-products
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/hostel-products/inventory_summary/:
    get:
      operationId: hostel_products_inventory_summary_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-products
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/hostel-products/update_availability/:
    post:
      operationId: hostel_products_update_availability_create
      description: Bulk update product availability
      tags:
      - hostel-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/hostel-rooms/:
    get:
      operationId: hostel_rooms_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: available_beds
        required: false
        in: query
        description: available_beds
        schema:
          type: string
      - name: available_beds__contained_by
        required: false
        in: query
        description: available_beds__contained_by
        schema:
          type: string
      - name: available_beds__contains
        required: false
        in: query
        description: available_beds__contains
        schema:
          type: string
      - name: available_beds__endswith
        required: false
        in: query
        description: available_beds__endswith
        schema:
          type: string
      - name: available_beds__gt
        required: false
        in: query
        description: available_beds__gt
        schema:
          type: string
      - name: available_beds__gte
        required: false
        in: query
        description: available_beds__gte
        schema:
          type: string
      - name: available_beds__icontains
        required: false
        in: query
        description: available_beds__icontains
        schema:
          type: string
      - name: available_beds__iendswith
        required: false
        in: query
        description: available_beds__iendswith
        schema:
          type: string
      - name: available_beds__iexact
        required: false
        in: query
        description: available_beds__iexact
        schema:
          type: string
      - name: available_beds__in
        required: false
        in: query
        description: available_beds__in
        schema:
          type: string
      - name: available_beds__iregex
        required: false
        in: query
        description: available_beds__iregex
        schema:
          type: string
      - name: available_beds__isnull
        required: false
        in: query
        description: available_beds__isnull
        schema:
          type: string
      - name: available_beds__istartswith
        required: false
        in: query
        description: available_beds__istartswith
        schema:
          type: string
      - name: available_beds__lt
        required: false
        in: query
        description: available_beds__lt
        schema:
          type: string
      - name: available_beds__lte
        required: false
        in: query
        description: available_beds__lte
        schema:
          type: string
      - name: available_beds__range
        required: false
        in: query
        description: available_beds__range
        schema:
          type: string
      - name: available_beds__regex
        required: false
        in: query
        description: available_beds__regex
        schema:
          type: string
      - name: available_beds__startswith
        required: false
        in: query
        description: available_beds__startswith
        schema:
          type: string
      - name: floor
        required: false
        in: query
        description: floor
        schema:
          type: string
      - name: is_occupied
        required: false
        in: query
        description: is_occupied
        schema:
          type: string
      - name: is_occupied__contains
        required: false
        in: query
        description: is_occupied__contains
        schema:
          type: string
      - name: is_occupied__endswith
        required: false
        in: query
        description: is_occupied__endswith
        schema:
          type: string
      - name: is_occupied__gt
        required: false
        in: query
        description: is_occupied__gt
        schema:
          type: string
      - name: is_occupied__gte
        required: false
        in: query
        description: is_occupied__gte
        schema:
          type: string
      - name: is_occupied__icontains
        required: false
        in: query
        description: is_occupied__icontains
        schema:
          type: string
      - name: is_occupied__iendswith
        required: false
        in: query
        description: is_occupied__iendswith
        schema:
          type: string
      - name: is_occupied__iexact
        required: false
        in: query
        description: is_occupied__iexact
        schema:
          type: string
      - name: is_occupied__in
        required: false
        in: query
        description: is_occupied__in
        schema:
          type: string
      - name: is_occupied__iregex
        required: false
        in: query
        description: is_occupied__iregex
        schema:
          type: string
      - name: is_occupied__isnull
        required: false
        in: query
        description: is_occupied__isnull
        schema:
          type: string
      - name: is_occupied__istartswith
        required: false
        in: query
        description: is_occupied__istartswith
        schema:
          type: string
      - name: is_occupied__lt
        required: false
        in: query
        description: is_occupied__lt
        schema:
          type: string
      - name: is_occupied__lte
        required: false
        in: query
        description: is_occupied__lte
        schema:
          type: string
      - name: is_occupied__range
        required: false
        in: query
        description: is_occupied__range
        schema:
          type: string
      - name: is_occupied__regex
        required: false
        in: query
        description: is_occupied__regex
        schema:
          type: string
      - name: is_occupied__startswith
        required: false
        in: query
        description: is_occupied__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: number
        required: false
        in: query
        description: number
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: room_type
        required: false
        in: query
        description: room_type
        schema:
          type: string
          enum:
          - AC
          - NON-AC
      - name: room_type__contains
        required: false
        in: query
        description: room_type__contains
        schema:
          type: string
      - name: room_type__endswith
        required: false
        in: query
        description: room_type__endswith
        schema:
          type: string
      - name: room_type__gt
        required: false
        in: query
        description: room_type__gt
        schema:
          type: string
      - name: room_type__gte
        required: false
        in: query
        description: room_type__gte
        schema:
          type: string
      - name: room_type__icontains
        required: false
        in: query
        description: room_type__icontains
        schema:
          type: string
      - name: room_type__iendswith
        required: false
        in: query
        description: room_type__iendswith
        schema:
          type: string
      - name: room_type__iexact
        required: false
        in: query
        description: room_type__iexact
        schema:
          type: string
      - name: room_type__in
        required: false
        in: query
        description: room_type__in
        schema:
          type: string
      - name: room_type__iregex
        required: false
        in: query
        description: room_type__iregex
        schema:
          type: string
      - name: room_type__isnull
        required: false
        in: query
        description: room_type__isnull
        schema:
          type: string
      - name: room_type__istartswith
        required: false
        in: query
        description: room_type__istartswith
        schema:
          type: string
      - name: room_type__lt
        required: false
        in: query
        description: room_type__lt
        schema:
          type: string
      - name: room_type__lte
        required: false
        in: query
        description: room_type__lte
        schema:
          type: string
      - name: room_type__range
        required: false
        in: query
        description: room_type__range
        schema:
          type: string
      - name: room_type__regex
        required: false
        in: query
        description: room_type__regex
        schema:
          type: string
      - name: room_type__startswith
        required: false
        in: query
        description: room_type__startswith
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: total_beds
        required: false
        in: query
        description: total_beds
        schema:
          type: string
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHostelRoomList'
          description: ''
    post:
      operationId: hostel_rooms_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelRoom'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-rooms/{id}/:
    get:
      operationId: hostel_rooms_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoomDetail'
          description: ''
    put:
      operationId: hostel_rooms_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelRoom'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
    patch:
      operationId: hostel_rooms_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHostelRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHostelRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHostelRoom'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
    delete:
      operationId: hostel_rooms_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-rooms/{id}/add_bed/:
    post:
      operationId: hostel_rooms_add_bed_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelRoom'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-rooms/{id}/add_locker/:
    post:
      operationId: hostel_rooms_add_locker_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HostelRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HostelRoom'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-rooms/{id}/beds/:
    get:
      operationId: hostel_rooms_beds_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-rooms/{id}/lockers/:
    get:
      operationId: hostel_rooms_lockers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-rooms/{id}/students/:
    get:
      operationId: hostel_rooms_students_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hostel room.
        required: true
      tags:
      - hostel-rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostelRoom'
          description: ''
  /api/hostel-visitors/:
    get:
      operationId: hostel_visitors_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: allowed_by
        required: false
        in: query
        description: allowed_by
        schema:
          type: string
      - name: alternative_phone
        required: false
        in: query
        description: alternative_phone
        schema:
          type: string
      - name: check_in_time
        required: false
        in: query
        description: check_in_time
        schema:
          type: string
      - name: check_in_time__contains
        required: false
        in: query
        description: check_in_time__contains
        schema:
          type: string
      - name: check_in_time__endswith
        required: false
        in: query
        description: check_in_time__endswith
        schema:
          type: string
      - name: check_in_time__gt
        required: false
        in: query
        description: check_in_time__gt
        schema:
          type: string
      - name: check_in_time__gte
        required: false
        in: query
        description: check_in_time__gte
        schema:
          type: string
      - name: check_in_time__hour
        required: false
        in: query
        description: check_in_time__hour
        schema:
          type: string
      - name: check_in_time__hour__contained_by
        required: false
        in: query
        description: check_in_time__hour__contained_by
        schema:
          type: string
      - name: check_in_time__hour__contains
        required: false
        in: query
        description: check_in_time__hour__contains
        schema:
          type: string
      - name: check_in_time__hour__endswith
        required: false
        in: query
        description: check_in_time__hour__endswith
        schema:
          type: string
      - name: check_in_time__hour__gt
        required: false
        in: query
        description: check_in_time__hour__gt
        schema:
          type: string
      - name: check_in_time__hour__gte
        required: false
        in: query
        description: check_in_time__hour__gte
        schema:
          type: string
      - name: check_in_time__hour__icontains
        required: false
        in: query
        description: check_in_time__hour__icontains
        schema:
          type: string
      - name: check_in_time__hour__iendswith
        required: false
        in: query
        description: check_in_time__hour__iendswith
        schema:
          type: string
      - name: check_in_time__hour__iexact
        required: false
        in: query
        description: check_in_time__hour__iexact
        schema:
          type: string
      - name: check_in_time__hour__in
        required: false
        in: query
        description: check_in_time__hour__in
        schema:
          type: string
      - name: check_in_time__hour__iregex
        required: false
        in: query
        description: check_in_time__hour__iregex
        schema:
          type: string
      - name: check_in_time__hour__isnull
        required: false
        in: query
        description: check_in_time__hour__isnull
        schema:
          type: string
      - name: check_in_time__hour__istartswith
        required: false
        in: query
        description: check_in_time__hour__istartswith
        schema:
          type: string
      - name: check_in_time__hour__lt
        required: false
        in: query
        description: check_in_time__hour__lt
        schema:
          type: string
      - name: check_in_time__hour__lte
        required: false
        in: query
        description: check_in_time__hour__lte
        schema:
          type: string
      - name: check_in_time__hour__range
        required: false
        in: query
        description: check_in_time__hour__range
        schema:
          type: string
      - name: check_in_time__hour__regex
        required: false
        in: query
        description: check_in_time__hour__regex
        schema:
          type: string
      - name: check_in_time__hour__startswith
        required: false
        in: query
        description: check_in_time__hour__startswith
        schema:
          type: string
      - name: check_in_time__icontains
        required: false
        in: query
        description: check_in_time__icontains
        schema:
          type: string
      - name: check_in_time__iendswith
        required: false
        in: query
        description: check_in_time__iendswith
        schema:
          type: string
      - name: check_in_time__iexact
        required: false
        in: query
        description: check_in_time__iexact
        schema:
          type: string
      - name: check_in_time__in
        required: false
        in: query
        description: check_in_time__in
        schema:
          type: string
      - name: check_in_time__iregex
        required: false
        in: query
        description: check_in_time__iregex
        schema:
          type: string
      - name: check_in_time__isnull
        required: false
        in: query
        description: check_in_time__isnull
        schema:
          type: string
      - name: check_in_time__istartswith
        required: false
        in: query
        description: check_in_time__istartswith
        schema:
          type: string
      - name: check_in_time__lt
        required: false
        in: query
        description: check_in_time__lt
        schema:
          type: string
      - name: check_in_time__lte
        required: false
        in: query
        description: check_in_time__lte
        schema:
          type: string
      - name: check_in_time__minute
        required: false
        in: query
        description: check_in_time__minute
        schema:
          type: string
      - name: check_in_time__minute__contained_by
        required: false
        in: query
        description: check_in_time__minute__contained_by
        schema:
          type: string
      - name: check_in_time__minute__contains
        required: false
        in: query
        description: check_in_time__minute__contains
        schema:
          type: string
      - name: check_in_time__minute__endswith
        required: false
        in: query
        description: check_in_time__minute__endswith
        schema:
          type: string
      - name: check_in_time__minute__gt
        required: false
        in: query
        description: check_in_time__minute__gt
        schema:
          type: string
      - name: check_in_time__minute__gte
        required: false
        in: query
        description: check_in_time__minute__gte
        schema:
          type: string
      - name: check_in_time__minute__icontains
        required: false
        in: query
        description: check_in_time__minute__icontains
        schema:
          type: string
      - name: check_in_time__minute__iendswith
        required: false
        in: query
        description: check_in_time__minute__iendswith
        schema:
          type: string
      - name: check_in_time__minute__iexact
        required: false
        in: query
        description: check_in_time__minute__iexact
        schema:
          type: string
      - name: check_in_time__minute__in
        required: false
        in: query
        description: check_in_time__minute__in
        schema:
          type: string
      - name: check_in_time__minute__iregex
        required: false
        in: query
        description: check_in_time__minute__iregex
        schema:
          type: string
      - name: check_in_time__minute__isnull
        required: false
        in: query
        description: check_in_time__minute__isnull
        schema:
          type: string
      - name: check_in_time__minute__istartswith
        required: false
        in: query
        description: check_in_time__minute__istartswith
        schema:
          type: string
      - name: check_in_time__minute__lt
        required: false
        in: query
        description: check_in_time__minute__lt
        schema:
          type: string
      - name: check_in_time__minute__lte
        required: false
        in: query
        description: check_in_time__minute__lte
        schema:
          type: string
      - name: check_in_time__minute__range
        required: false
        in: query
        description: check_in_time__minute__range
        schema:
          type: string
      - name: check_in_time__minute__regex
        required: false
        in: query
        description: check_in_time__minute__regex
        schema:
          type: string
      - name: check_in_time__minute__startswith
        required: false
        in: query
        description: check_in_time__minute__startswith
        schema:
          type: string
      - name: check_in_time__range
        required: false
        in: query
        description: check_in_time__range
        schema:
          type: string
      - name: check_in_time__regex
        required: false
        in: query
        description: check_in_time__regex
        schema:
          type: string
      - name: check_in_time__second
        required: false
        in: query
        description: check_in_time__second
        schema:
          type: string
      - name: check_in_time__second__contained_by
        required: false
        in: query
        description: check_in_time__second__contained_by
        schema:
          type: string
      - name: check_in_time__second__contains
        required: false
        in: query
        description: check_in_time__second__contains
        schema:
          type: string
      - name: check_in_time__second__endswith
        required: false
        in: query
        description: check_in_time__second__endswith
        schema:
          type: string
      - name: check_in_time__second__gt
        required: false
        in: query
        description: check_in_time__second__gt
        schema:
          type: string
      - name: check_in_time__second__gte
        required: false
        in: query
        description: check_in_time__second__gte
        schema:
          type: string
      - name: check_in_time__second__icontains
        required: false
        in: query
        description: check_in_time__second__icontains
        schema:
          type: string
      - name: check_in_time__second__iendswith
        required: false
        in: query
        description: check_in_time__second__iendswith
        schema:
          type: string
      - name: check_in_time__second__iexact
        required: false
        in: query
        description: check_in_time__second__iexact
        schema:
          type: string
      - name: check_in_time__second__in
        required: false
        in: query
        description: check_in_time__second__in
        schema:
          type: string
      - name: check_in_time__second__iregex
        required: false
        in: query
        description: check_in_time__second__iregex
        schema:
          type: string
      - name: check_in_time__second__isnull
        required: false
        in: query
        description: check_in_time__second__isnull
        schema:
          type: string
      - name: check_in_time__second__istartswith
        required: false
        in: query
        description: check_in_time__second__istartswith
        schema:
          type: string
      - name: check_in_time__second__lt
        required: false
        in: query
        description: check_in_time__second__lt
        schema:
          type: string
      - name: check_in_time__second__lte
        required: false
        in: query
        description: check_in_time__second__lte
        schema:
          type: string
      - name: check_in_time__second__range
        required: false
        in: query
        description: check_in_time__second__range
        schema:
          type: string
      - name: check_in_time__second__regex
        required: false
        in: query
        description: check_in_time__second__regex
        schema:
          type: string
      - name: check_in_time__second__startswith
        required: false
        in: query
        description: check_in_time__second__startswith
        schema:
          type: string
      - name: check_in_time__startswith
        required: false
        in: query
        description: check_in_time__startswith
        schema:
          type: string
      - name: check_out_time
        required: false
        in: query
        description: check_out_time
        schema:
          type: string
      - name: check_out_time__contains
        required: false
        in: query
        description: check_out_time__contains
        schema:
          type: string
      - name: check_out_time__endswith
        required: false
        in: query
        description: check_out_time__endswith
        schema:
          type: string
      - name: check_out_time__gt
        required: false
        in: query
        description: check_out_time__gt
        schema:
          type: string
      - name: check_out_time__gte
        required: false
        in: query
        description: check_out_time__gte
        schema:
          type: string
      - name: check_out_time__hour
        required: false
        in: query
        description: check_out_time__hour
        schema:
          type: string
      - name: check_out_time__hour__contained_by
        required: false
        in: query
        description: check_out_time__hour__contained_by
        schema:
          type: string
      - name: check_out_time__hour__contains
        required: false
        in: query
        description: check_out_time__hour__contains
        schema:
          type: string
      - name: check_out_time__hour__endswith
        required: false
        in: query
        description: check_out_time__hour__endswith
        schema:
          type: string
      - name: check_out_time__hour__gt
        required: false
        in: query
        description: check_out_time__hour__gt
        schema:
          type: string
      - name: check_out_time__hour__gte
        required: false
        in: query
        description: check_out_time__hour__gte
        schema:
          type: string
      - name: check_out_time__hour__icontains
        required: false
        in: query
        description: check_out_time__hour__icontains
        schema:
          type: string
      - name: check_out_time__hour__iendswith
        required: false
        in: query
        description: check_out_time__hour__iendswith
        schema:
          type: string
      - name: check_out_time__hour__iexact
        required: false
        in: query
        description: check_out_time__hour__iexact
        schema:
          type: string
      - name: check_out_time__hour__in
        required: false
        in: query
        description: check_out_time__hour__in
        schema:
          type: string
      - name: check_out_time__hour__iregex
        required: false
        in: query
        description: check_out_time__hour__iregex
        schema:
          type: string
      - name: check_out_time__hour__isnull
        required: false
        in: query
        description: check_out_time__hour__isnull
        schema:
          type: string
      - name: check_out_time__hour__istartswith
        required: false
        in: query
        description: check_out_time__hour__istartswith
        schema:
          type: string
      - name: check_out_time__hour__lt
        required: false
        in: query
        description: check_out_time__hour__lt
        schema:
          type: string
      - name: check_out_time__hour__lte
        required: false
        in: query
        description: check_out_time__hour__lte
        schema:
          type: string
      - name: check_out_time__hour__range
        required: false
        in: query
        description: check_out_time__hour__range
        schema:
          type: string
      - name: check_out_time__hour__regex
        required: false
        in: query
        description: check_out_time__hour__regex
        schema:
          type: string
      - name: check_out_time__hour__startswith
        required: false
        in: query
        description: check_out_time__hour__startswith
        schema:
          type: string
      - name: check_out_time__icontains
        required: false
        in: query
        description: check_out_time__icontains
        schema:
          type: string
      - name: check_out_time__iendswith
        required: false
        in: query
        description: check_out_time__iendswith
        schema:
          type: string
      - name: check_out_time__iexact
        required: false
        in: query
        description: check_out_time__iexact
        schema:
          type: string
      - name: check_out_time__in
        required: false
        in: query
        description: check_out_time__in
        schema:
          type: string
      - name: check_out_time__iregex
        required: false
        in: query
        description: check_out_time__iregex
        schema:
          type: string
      - name: check_out_time__isnull
        required: false
        in: query
        description: check_out_time__isnull
        schema:
          type: string
      - name: check_out_time__istartswith
        required: false
        in: query
        description: check_out_time__istartswith
        schema:
          type: string
      - name: check_out_time__lt
        required: false
        in: query
        description: check_out_time__lt
        schema:
          type: string
      - name: check_out_time__lte
        required: false
        in: query
        description: check_out_time__lte
        schema:
          type: string
      - name: check_out_time__minute
        required: false
        in: query
        description: check_out_time__minute
        schema:
          type: string
      - name: check_out_time__minute__contained_by
        required: false
        in: query
        description: check_out_time__minute__contained_by
        schema:
          type: string
      - name: check_out_time__minute__contains
        required: false
        in: query
        description: check_out_time__minute__contains
        schema:
          type: string
      - name: check_out_time__minute__endswith
        required: false
        in: query
        description: check_out_time__minute__endswith
        schema:
          type: string
      - name: check_out_time__minute__gt
        required: false
        in: query
        description: check_out_time__minute__gt
        schema:
          type: string
      - name: check_out_time__minute__gte
        required: false
        in: query
        description: check_out_time__minute__gte
        schema:
          type: string
      - name: check_out_time__minute__icontains
        required: false
        in: query
        description: check_out_time__minute__icontains
        schema:
          type: string
      - name: check_out_time__minute__iendswith
        required: false
        in: query
        description: check_out_time__minute__iendswith
        schema:
          type: string
      - name: check_out_time__minute__iexact
        required: false
        in: query
        description: check_out_time__minute__iexact
        schema:
          type: string
      - name: check_out_time__minute__in
        required: false
        in: query
        description: check_out_time__minute__in
        schema:
          type: string
      - name: check_out_time__minute__iregex
        required: false
        in: query
        description: check_out_time__minute__iregex
        schema:
          type: string
      - name: check_out_time__minute__isnull
        required: false
        in: query
        description: check_out_time__minute__isnull
        schema:
          type: string
      - name: check_out_time__minute__istartswith
        required: false
        in: query
        description: check_out_time__minute__istartswith
        schema:
          type: string
      - name: check_out_time__minute__lt
        required: false
        in: query
        description: check_out_time__minute__lt
        schema:
          type: string
      - name: check_out_time__minute__lte
        required: false
        in: query
        description: check_out_time__minute__lte
        schema:
          type: string
      - name: check_out_time__minute__range
        required: false
        in: query
        description: check_out_time__minute__range
        schema:
          type: string
      - name: check_out_time__minute__regex
        required: false
        in: query
        description: check_out_time__minute__regex
        schema:
          type: string
      - name: check_out_time__minute__startswith
        required: false
        in: query
        description: check_out_time__minute__startswith
        schema:
          type: string
      - name: check_out_time__range
        required: false
        in: query
        description: check_out_time__range
        schema:
          type: string
      - name: check_out_time__regex
        required: false
        in: query
        description: check_out_time__regex
        schema:
          type: string
      - name: check_out_time__second
        required: false
        in: query
        description: check_out_time__second
        schema:
          type: string
      - name: check_out_time__second__contained_by
        required: false
        in: query
        description: check_out_time__second__contained_by
        schema:
          type: string
      - name: check_out_time__second__contains
        required: false
        in: query
        description: check_out_time__second__contains
        schema:
          type: string
      - name: check_out_time__second__endswith
        required: false
        in: query
        description: check_out_time__second__endswith
        schema:
          type: string
      - name: check_out_time__second__gt
        required: false
        in: query
        description: check_out_time__second__gt
        schema:
          type: string
      - name: check_out_time__second__gte
        required: false
        in: query
        description: check_out_time__second__gte
        schema:
          type: string
      - name: check_out_time__second__icontains
        required: false
        in: query
        description: check_out_time__second__icontains
        schema:
          type: string
      - name: check_out_time__second__iendswith
        required: false
        in: query
        description: check_out_time__second__iendswith
        schema:
          type: string
      - name: check_out_time__second__iexact
        required: false
        in: query
        description: check_out_time__second__iexact
        schema:
          type: string
      - name: check_out_time__second__in
        required: false
        in: query
        description: check_out_time__second__in
        schema:
          type: string
      - name: check_out_time__second__iregex
        required: false
        in: query
        description: check_out_time__second__iregex
        schema:
          type: string
      - name: check_out_time__second__isnull
        required: false
        in: query
        description: check_out_time__second__isnull
        schema:
          type: string
      - name: check_out_time__second__istartswith
        required: false
        in: query
        description: check_out_time__second__istartswith
        schema:
          type: string
      - name: check_out_time__second__lt
        required: false
        in: query
        description: check_out_time__second__lt
        schema:
          type: string
      - name: check_out_time__second__lte
        required: false
        in: query
        description: check_out_time__second__lte
        schema:
          type: string
      - name: check_out_time__second__range
        required: false
        in: query
        description: check_out_time__second__range
        schema:
          type: string
      - name: check_out_time__second__regex
        required: false
        in: query
        description: check_out_time__second__regex
        schema:
          type: string
      - name: check_out_time__second__startswith
        required: false
        in: query
        description: check_out_time__second__startswith
        schema:
          type: string
      - name: check_out_time__startswith
        required: false
        in: query
        description: check_out_time__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: phone
        required: false
        in: query
        description: phone
        schema:
          type: string
      - name: profile_pic
        required: false
        in: query
        description: profile_pic
        schema:
          type: string
      - name: reasons
        required: false
        in: query
        description: reasons
        schema:
          type: string
      - name: relation
        required: false
        in: query
        description: relation
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: student
        required: false
        in: query
        description: student
        schema:
          type: string
      - name: vacated_date
        required: false
        in: query
        description: vacated_date
        schema:
          type: string
      - name: vacated_date__contained_by
        required: false
        in: query
        description: vacated_date__contained_by
        schema:
          type: string
      - name: vacated_date__contains
        required: false
        in: query
        description: vacated_date__contains
        schema:
          type: string
      - name: vacated_date__day
        required: false
        in: query
        description: vacated_date__day
        schema:
          type: string
      - name: vacated_date__day__contained_by
        required: false
        in: query
        description: vacated_date__day__contained_by
        schema:
          type: string
      - name: vacated_date__day__contains
        required: false
        in: query
        description: vacated_date__day__contains
        schema:
          type: string
      - name: vacated_date__day__endswith
        required: false
        in: query
        description: vacated_date__day__endswith
        schema:
          type: string
      - name: vacated_date__day__gt
        required: false
        in: query
        description: vacated_date__day__gt
        schema:
          type: string
      - name: vacated_date__day__gte
        required: false
        in: query
        description: vacated_date__day__gte
        schema:
          type: string
      - name: vacated_date__day__icontains
        required: false
        in: query
        description: vacated_date__day__icontains
        schema:
          type: string
      - name: vacated_date__day__iendswith
        required: false
        in: query
        description: vacated_date__day__iendswith
        schema:
          type: string
      - name: vacated_date__day__iexact
        required: false
        in: query
        description: vacated_date__day__iexact
        schema:
          type: string
      - name: vacated_date__day__in
        required: false
        in: query
        description: vacated_date__day__in
        schema:
          type: string
      - name: vacated_date__day__iregex
        required: false
        in: query
        description: vacated_date__day__iregex
        schema:
          type: string
      - name: vacated_date__day__isnull
        required: false
        in: query
        description: vacated_date__day__isnull
        schema:
          type: string
      - name: vacated_date__day__istartswith
        required: false
        in: query
        description: vacated_date__day__istartswith
        schema:
          type: string
      - name: vacated_date__day__lt
        required: false
        in: query
        description: vacated_date__day__lt
        schema:
          type: string
      - name: vacated_date__day__lte
        required: false
        in: query
        description: vacated_date__day__lte
        schema:
          type: string
      - name: vacated_date__day__range
        required: false
        in: query
        description: vacated_date__day__range
        schema:
          type: string
      - name: vacated_date__day__regex
        required: false
        in: query
        description: vacated_date__day__regex
        schema:
          type: string
      - name: vacated_date__day__startswith
        required: false
        in: query
        description: vacated_date__day__startswith
        schema:
          type: string
      - name: vacated_date__endswith
        required: false
        in: query
        description: vacated_date__endswith
        schema:
          type: string
      - name: vacated_date__gt
        required: false
        in: query
        description: vacated_date__gt
        schema:
          type: string
      - name: vacated_date__gte
        required: false
        in: query
        description: vacated_date__gte
        schema:
          type: string
      - name: vacated_date__icontains
        required: false
        in: query
        description: vacated_date__icontains
        schema:
          type: string
      - name: vacated_date__iendswith
        required: false
        in: query
        description: vacated_date__iendswith
        schema:
          type: string
      - name: vacated_date__iexact
        required: false
        in: query
        description: vacated_date__iexact
        schema:
          type: string
      - name: vacated_date__in
        required: false
        in: query
        description: vacated_date__in
        schema:
          type: string
      - name: vacated_date__iregex
        required: false
        in: query
        description: vacated_date__iregex
        schema:
          type: string
      - name: vacated_date__isnull
        required: false
        in: query
        description: vacated_date__isnull
        schema:
          type: string
      - name: vacated_date__iso_week_day
        required: false
        in: query
        description: vacated_date__iso_week_day
        schema:
          type: string
      - name: vacated_date__iso_week_day__contained_by
        required: false
        in: query
        description: vacated_date__iso_week_day__contained_by
        schema:
          type: string
      - name: vacated_date__iso_week_day__contains
        required: false
        in: query
        description: vacated_date__iso_week_day__contains
        schema:
          type: string
      - name: vacated_date__iso_week_day__endswith
        required: false
        in: query
        description: vacated_date__iso_week_day__endswith
        schema:
          type: string
      - name: vacated_date__iso_week_day__gt
        required: false
        in: query
        description: vacated_date__iso_week_day__gt
        schema:
          type: string
      - name: vacated_date__iso_week_day__gte
        required: false
        in: query
        description: vacated_date__iso_week_day__gte
        schema:
          type: string
      - name: vacated_date__iso_week_day__icontains
        required: false
        in: query
        description: vacated_date__iso_week_day__icontains
        schema:
          type: string
      - name: vacated_date__iso_week_day__iendswith
        required: false
        in: query
        description: vacated_date__iso_week_day__iendswith
        schema:
          type: string
      - name: vacated_date__iso_week_day__iexact
        required: false
        in: query
        description: vacated_date__iso_week_day__iexact
        schema:
          type: string
      - name: vacated_date__iso_week_day__in
        required: false
        in: query
        description: vacated_date__iso_week_day__in
        schema:
          type: string
      - name: vacated_date__iso_week_day__iregex
        required: false
        in: query
        description: vacated_date__iso_week_day__iregex
        schema:
          type: string
      - name: vacated_date__iso_week_day__isnull
        required: false
        in: query
        description: vacated_date__iso_week_day__isnull
        schema:
          type: string
      - name: vacated_date__iso_week_day__istartswith
        required: false
        in: query
        description: vacated_date__iso_week_day__istartswith
        schema:
          type: string
      - name: vacated_date__iso_week_day__lt
        required: false
        in: query
        description: vacated_date__iso_week_day__lt
        schema:
          type: string
      - name: vacated_date__iso_week_day__lte
        required: false
        in: query
        description: vacated_date__iso_week_day__lte
        schema:
          type: string
      - name: vacated_date__iso_week_day__range
        required: false
        in: query
        description: vacated_date__iso_week_day__range
        schema:
          type: string
      - name: vacated_date__iso_week_day__regex
        required: false
        in: query
        description: vacated_date__iso_week_day__regex
        schema:
          type: string
      - name: vacated_date__iso_week_day__startswith
        required: false
        in: query
        description: vacated_date__iso_week_day__startswith
        schema:
          type: string
      - name: vacated_date__iso_year
        required: false
        in: query
        description: vacated_date__iso_year
        schema:
          type: string
      - name: vacated_date__iso_year__contained_by
        required: false
        in: query
        description: vacated_date__iso_year__contained_by
        schema:
          type: string
      - name: vacated_date__iso_year__contains
        required: false
        in: query
        description: vacated_date__iso_year__contains
        schema:
          type: string
      - name: vacated_date__iso_year__endswith
        required: false
        in: query
        description: vacated_date__iso_year__endswith
        schema:
          type: string
      - name: vacated_date__iso_year__gt
        required: false
        in: query
        description: vacated_date__iso_year__gt
        schema:
          type: string
      - name: vacated_date__iso_year__gte
        required: false
        in: query
        description: vacated_date__iso_year__gte
        schema:
          type: string
      - name: vacated_date__iso_year__icontains
        required: false
        in: query
        description: vacated_date__iso_year__icontains
        schema:
          type: string
      - name: vacated_date__iso_year__iendswith
        required: false
        in: query
        description: vacated_date__iso_year__iendswith
        schema:
          type: string
      - name: vacated_date__iso_year__iexact
        required: false
        in: query
        description: vacated_date__iso_year__iexact
        schema:
          type: string
      - name: vacated_date__iso_year__in
        required: false
        in: query
        description: vacated_date__iso_year__in
        schema:
          type: string
      - name: vacated_date__iso_year__iregex
        required: false
        in: query
        description: vacated_date__iso_year__iregex
        schema:
          type: string
      - name: vacated_date__iso_year__isnull
        required: false
        in: query
        description: vacated_date__iso_year__isnull
        schema:
          type: string
      - name: vacated_date__iso_year__istartswith
        required: false
        in: query
        description: vacated_date__iso_year__istartswith
        schema:
          type: string
      - name: vacated_date__iso_year__lt
        required: false
        in: query
        description: vacated_date__iso_year__lt
        schema:
          type: string
      - name: vacated_date__iso_year__lte
        required: false
        in: query
        description: vacated_date__iso_year__lte
        schema:
          type: string
      - name: vacated_date__iso_year__range
        required: false
        in: query
        description: vacated_date__iso_year__range
        schema:
          type: string
      - name: vacated_date__iso_year__regex
        required: false
        in: query
        description: vacated_date__iso_year__regex
        schema:
          type: string
      - name: vacated_date__iso_year__startswith
        required: false
        in: query
        description: vacated_date__iso_year__startswith
        schema:
          type: string
      - name: vacated_date__istartswith
        required: false
        in: query
        description: vacated_date__istartswith
        schema:
          type: string
      - name: vacated_date__lt
        required: false
        in: query
        description: vacated_date__lt
        schema:
          type: string
      - name: vacated_date__lte
        required: false
        in: query
        description: vacated_date__lte
        schema:
          type: string
      - name: vacated_date__month
        required: false
        in: query
        description: vacated_date__month
        schema:
          type: string
      - name: vacated_date__month__contained_by
        required: false
        in: query
        description: vacated_date__month__contained_by
        schema:
          type: string
      - name: vacated_date__month__contains
        required: false
        in: query
        description: vacated_date__month__contains
        schema:
          type: string
      - name: vacated_date__month__endswith
        required: false
        in: query
        description: vacated_date__month__endswith
        schema:
          type: string
      - name: vacated_date__month__gt
        required: false
        in: query
        description: vacated_date__month__gt
        schema:
          type: string
      - name: vacated_date__month__gte
        required: false
        in: query
        description: vacated_date__month__gte
        schema:
          type: string
      - name: vacated_date__month__icontains
        required: false
        in: query
        description: vacated_date__month__icontains
        schema:
          type: string
      - name: vacated_date__month__iendswith
        required: false
        in: query
        description: vacated_date__month__iendswith
        schema:
          type: string
      - name: vacated_date__month__iexact
        required: false
        in: query
        description: vacated_date__month__iexact
        schema:
          type: string
      - name: vacated_date__month__in
        required: false
        in: query
        description: vacated_date__month__in
        schema:
          type: string
      - name: vacated_date__month__iregex
        required: false
        in: query
        description: vacated_date__month__iregex
        schema:
          type: string
      - name: vacated_date__month__isnull
        required: false
        in: query
        description: vacated_date__month__isnull
        schema:
          type: string
      - name: vacated_date__month__istartswith
        required: false
        in: query
        description: vacated_date__month__istartswith
        schema:
          type: string
      - name: vacated_date__month__lt
        required: false
        in: query
        description: vacated_date__month__lt
        schema:
          type: string
      - name: vacated_date__month__lte
        required: false
        in: query
        description: vacated_date__month__lte
        schema:
          type: string
      - name: vacated_date__month__range
        required: false
        in: query
        description: vacated_date__month__range
        schema:
          type: string
      - name: vacated_date__month__regex
        required: false
        in: query
        description: vacated_date__month__regex
        schema:
          type: string
      - name: vacated_date__month__startswith
        required: false
        in: query
        description: vacated_date__month__startswith
        schema:
          type: string
      - name: vacated_date__quarter
        required: false
        in: query
        description: vacated_date__quarter
        schema:
          type: string
      - name: vacated_date__quarter__contained_by
        required: false
        in: query
        description: vacated_date__quarter__contained_by
        schema:
          type: string
      - name: vacated_date__quarter__contains
        required: false
        in: query
        description: vacated_date__quarter__contains
        schema:
          type: string
      - name: vacated_date__quarter__endswith
        required: false
        in: query
        description: vacated_date__quarter__endswith
        schema:
          type: string
      - name: vacated_date__quarter__gt
        required: false
        in: query
        description: vacated_date__quarter__gt
        schema:
          type: string
      - name: vacated_date__quarter__gte
        required: false
        in: query
        description: vacated_date__quarter__gte
        schema:
          type: string
      - name: vacated_date__quarter__icontains
        required: false
        in: query
        description: vacated_date__quarter__icontains
        schema:
          type: string
      - name: vacated_date__quarter__iendswith
        required: false
        in: query
        description: vacated_date__quarter__iendswith
        schema:
          type: string
      - name: vacated_date__quarter__iexact
        required: false
        in: query
        description: vacated_date__quarter__iexact
        schema:
          type: string
      - name: vacated_date__quarter__in
        required: false
        in: query
        description: vacated_date__quarter__in
        schema:
          type: string
      - name: vacated_date__quarter__iregex
        required: false
        in: query
        description: vacated_date__quarter__iregex
        schema:
          type: string
      - name: vacated_date__quarter__isnull
        required: false
        in: query
        description: vacated_date__quarter__isnull
        schema:
          type: string
      - name: vacated_date__quarter__istartswith
        required: false
        in: query
        description: vacated_date__quarter__istartswith
        schema:
          type: string
      - name: vacated_date__quarter__lt
        required: false
        in: query
        description: vacated_date__quarter__lt
        schema:
          type: string
      - name: vacated_date__quarter__lte
        required: false
        in: query
        description: vacated_date__quarter__lte
        schema:
          type: string
      - name: vacated_date__quarter__range
        required: false
        in: query
        description: vacated_date__quarter__range
        schema:
          type: string
      - name: vacated_date__quarter__regex
        required: false
        in: query
        description: vacated_date__quarter__regex
        schema:
          type: string
      - name: vacated_date__quarter__startswith
        required: false
        in: query
        description: vacated_date__quarter__startswith
        schema:
          type: string
      - name: vacated_date__range
        required: false
        in: query
        description: vacated_date__range
        schema:
          type: string
      - name: vacated_date__regex
        required: false
        in: query
        description: vacated_date__regex
        schema:
          type: string
      - name: vacated_date__startswith
        required: false
        in: query
        description: vacated_date__startswith
        schema:
          type: string
      - name: vacated_date__week
        required: false
        in: query
        description: vacated_date__week
        schema:
          type: string
      - name: vacated_date__week__contained_by
        required: false
        in: query
        description: vacated_date__week__contained_by
        schema:
          type: string
      - name: vacated_date__week__contains
        required: false
        in: query
        description: vacated_date__week__contains
        schema:
          type: string
      - name: vacated_date__week__endswith
        required: false
        in: query
        description: vacated_date__week__endswith
        schema:
          type: string
      - name: vacated_date__week__gt
        required: false
        in: query
        description: vacated_date__week__gt
        schema:
          type: string
      - name: vacated_date__week__gte
        required: false
        in: query
        description: vacated_date__week__gte
        schema:
          type: string
      - name: vacated_date__week__icontains
        required: false
        in: query
        description: vacated_date__week__icontains
        schema:
          type: string
      - name: vacated_date__week__iendswith
        required: false
        in: query
        description: vacated_date__week__iendswith
        schema:
          type: string
      - name: vacated_date__week__iexact
        required: false
        in: query
        description: vacated_date__week__iexact
        schema:
          type: string
      - name: vacated_date__week__in
        required: false
        in: query
        description: vacated_date__week__in
        schema:
          type: string
      - name: vacated_date__week__iregex
        required: false
        in: query
        description: vacated_date__week__iregex
        schema:
          type: string
      - name: vacated_date__week__isnull
        required: false
        in: query
        description: vacated_date__week__isnull
        schema:
          type: string
      - name: vacated_date__week__istartswith
        required: false
        in: query
        description: vacated_date__week__istartswith
        schema:
          type: string
      - name: vacated_date__week__lt
        required: false
        in: query
        description: vacated_date__week__lt
        schema:
          type: string
      - name: vacated_date__week__lte
        required: false
        in: query
        description: vacated_date__week__lte
        schema:
          type: string
      - name: vacated_date__week__range
        required: false
        in: query
        description: vacated_date__week__range
        schema:
          type: string
      - name: vacated_date__week__regex
        required: false
        in: query
        description: vacated_date__week__regex
        schema:
          type: string
      - name: vacated_date__week__startswith
        required: false
        in: query
        description: vacated_date__week__startswith
        schema:
          type: string
      - name: vacated_date__week_day
        required: false
        in: query
        description: vacated_date__week_day
        schema:
          type: string
      - name: vacated_date__week_day__contained_by
        required: false
        in: query
        description: vacated_date__week_day__contained_by
        schema:
          type: string
      - name: vacated_date__week_day__contains
        required: false
        in: query
        description: vacated_date__week_day__contains
        schema:
          type: string
      - name: vacated_date__week_day__endswith
        required: false
        in: query
        description: vacated_date__week_day__endswith
        schema:
          type: string
      - name: vacated_date__week_day__gt
        required: false
        in: query
        description: vacated_date__week_day__gt
        schema:
          type: string
      - name: vacated_date__week_day__gte
        required: false
        in: query
        description: vacated_date__week_day__gte
        schema:
          type: string
      - name: vacated_date__week_day__icontains
        required: false
        in: query
        description: vacated_date__week_day__icontains
        schema:
          type: string
      - name: vacated_date__week_day__iendswith
        required: false
        in: query
        description: vacated_date__week_day__iendswith
        schema:
          type: string
      - name: vacated_date__week_day__iexact
        required: false
        in: query
        description: vacated_date__week_day__iexact
        schema:
          type: string
      - name: vacated_date__week_day__in
        required: false
        in: query
        description: vacated_date__week_day__in
        schema:
          type: string
      - name: vacated_date__week_day__iregex
        required: false
        in: query
        description: vacated_date__week_day__iregex
        schema:
          type: string
      - name: vacated_date__week_day__isnull
        required: false
        in: query
        description: vacated_date__week_day__isnull
        schema:
          type: string
      - name: vacated_date__week_day__istartswith
        required: false
        in: query
        description: vacated_date__week_day__istartswith
        schema:
          type: string
      - name: vacated_date__week_day__lt
        required: false
        in: query
        description: vacated_date__week_day__lt
        schema:
          type: string
      - name: vacated_date__week_day__lte
        required: false
        in: query
        description: vacated_date__week_day__lte
        schema:
          type: string
      - name: vacated_date__week_day__range
        required: false
        in: query
        description: vacated_date__week_day__range
        schema:
          type: string
      - name: vacated_date__week_day__regex
        required: false
        in: query
        description: vacated_date__week_day__regex
        schema:
          type: string
      - name: vacated_date__week_day__startswith
        required: false
        in: query
        description: vacated_date__week_day__startswith
        schema:
          type: string
      - name: vacated_date__year
        required: false
        in: query
        description: vacated_date__year
        schema:
          type: string
      - name: vacated_date__year__contained_by
        required: false
        in: query
        description: vacated_date__year__contained_by
        schema:
          type: string
      - name: vacated_date__year__contains
        required: false
        in: query
        description: vacated_date__year__contains
        schema:
          type: string
      - name: vacated_date__year__endswith
        required: false
        in: query
        description: vacated_date__year__endswith
        schema:
          type: string
      - name: vacated_date__year__gt
        required: false
        in: query
        description: vacated_date__year__gt
        schema:
          type: string
      - name: vacated_date__year__gte
        required: false
        in: query
        description: vacated_date__year__gte
        schema:
          type: string
      - name: vacated_date__year__icontains
        required: false
        in: query
        description: vacated_date__year__icontains
        schema:
          type: string
      - name: vacated_date__year__iendswith
        required: false
        in: query
        description: vacated_date__year__iendswith
        schema:
          type: string
      - name: vacated_date__year__iexact
        required: false
        in: query
        description: vacated_date__year__iexact
        schema:
          type: string
      - name: vacated_date__year__in
        required: false
        in: query
        description: vacated_date__year__in
        schema:
          type: string
      - name: vacated_date__year__iregex
        required: false
        in: query
        description: vacated_date__year__iregex
        schema:
          type: string
      - name: vacated_date__year__isnull
        required: false
        in: query
        description: vacated_date__year__isnull
        schema:
          type: string
      - name: vacated_date__year__istartswith
        required: false
        in: query
        description: vacated_date__year__istartswith
        schema:
          type: string
      - name: vacated_date__year__lt
        required: false
        in: query
        description: vacated_date__year__lt
        schema:
          type: string
      - name: vacated_date__year__lte
        required: false
        in: query
        description: vacated_date__year__lte
        schema:
          type: string
      - name: vacated_date__year__range
        required: false
        in: query
        description: vacated_date__year__range
        schema:
          type: string
      - name: vacated_date__year__regex
        required: false
        in: query
        description: vacated_date__year__regex
        schema:
          type: string
      - name: vacated_date__year__startswith
        required: false
        in: query
        description: vacated_date__year__startswith
        schema:
          type: string
      - name: visited_date
        required: false
        in: query
        description: visited_date
        schema:
          type: string
      - name: visited_date__contained_by
        required: false
        in: query
        description: visited_date__contained_by
        schema:
          type: string
      - name: visited_date__contains
        required: false
        in: query
        description: visited_date__contains
        schema:
          type: string
      - name: visited_date__day
        required: false
        in: query
        description: visited_date__day
        schema:
          type: string
      - name: visited_date__day__contained_by
        required: false
        in: query
        description: visited_date__day__contained_by
        schema:
          type: string
      - name: visited_date__day__contains
        required: false
        in: query
        description: visited_date__day__contains
        schema:
          type: string
      - name: visited_date__day__endswith
        required: false
        in: query
        description: visited_date__day__endswith
        schema:
          type: string
      - name: visited_date__day__gt
        required: false
        in: query
        description: visited_date__day__gt
        schema:
          type: string
      - name: visited_date__day__gte
        required: false
        in: query
        description: visited_date__day__gte
        schema:
          type: string
      - name: visited_date__day__icontains
        required: false
        in: query
        description: visited_date__day__icontains
        schema:
          type: string
      - name: visited_date__day__iendswith
        required: false
        in: query
        description: visited_date__day__iendswith
        schema:
          type: string
      - name: visited_date__day__iexact
        required: false
        in: query
        description: visited_date__day__iexact
        schema:
          type: string
      - name: visited_date__day__in
        required: false
        in: query
        description: visited_date__day__in
        schema:
          type: string
      - name: visited_date__day__iregex
        required: false
        in: query
        description: visited_date__day__iregex
        schema:
          type: string
      - name: visited_date__day__isnull
        required: false
        in: query
        description: visited_date__day__isnull
        schema:
          type: string
      - name: visited_date__day__istartswith
        required: false
        in: query
        description: visited_date__day__istartswith
        schema:
          type: string
      - name: visited_date__day__lt
        required: false
        in: query
        description: visited_date__day__lt
        schema:
          type: string
      - name: visited_date__day__lte
        required: false
        in: query
        description: visited_date__day__lte
        schema:
          type: string
      - name: visited_date__day__range
        required: false
        in: query
        description: visited_date__day__range
        schema:
          type: string
      - name: visited_date__day__regex
        required: false
        in: query
        description: visited_date__day__regex
        schema:
          type: string
      - name: visited_date__day__startswith
        required: false
        in: query
        description: visited_date__day__startswith
        schema:
          type: string
      - name: visited_date__endswith
        required: false
        in: query
        description: visited_date__endswith
        schema:
          type: string
      - name: visited_date__gt
        required: false
        in: query
        description: visited_date__gt
        schema:
          type: string
      - name: visited_date__gte
        required: false
        in: query
        description: visited_date__gte
        schema:
          type: string
      - name: visited_date__icontains
        required: false
        in: query
        description: visited_date__icontains
        schema:
          type: string
      - name: visited_date__iendswith
        required: false
        in: query
        description: visited_date__iendswith
        schema:
          type: string
      - name: visited_date__iexact
        required: false
        in: query
        description: visited_date__iexact
        schema:
          type: string
      - name: visited_date__in
        required: false
        in: query
        description: visited_date__in
        schema:
          type: string
      - name: visited_date__iregex
        required: false
        in: query
        description: visited_date__iregex
        schema:
          type: string
      - name: visited_date__isnull
        required: false
        in: query
        description: visited_date__isnull
        schema:
          type: string
      - name: visited_date__iso_week_day
        required: false
        in: query
        description: visited_date__iso_week_day
        schema:
          type: string
      - name: visited_date__iso_week_day__contained_by
        required: false
        in: query
        description: visited_date__iso_week_day__contained_by
        schema:
          type: string
      - name: visited_date__iso_week_day__contains
        required: false
        in: query
        description: visited_date__iso_week_day__contains
        schema:
          type: string
      - name: visited_date__iso_week_day__endswith
        required: false
        in: query
        description: visited_date__iso_week_day__endswith
        schema:
          type: string
      - name: visited_date__iso_week_day__gt
        required: false
        in: query
        description: visited_date__iso_week_day__gt
        schema:
          type: string
      - name: visited_date__iso_week_day__gte
        required: false
        in: query
        description: visited_date__iso_week_day__gte
        schema:
          type: string
      - name: visited_date__iso_week_day__icontains
        required: false
        in: query
        description: visited_date__iso_week_day__icontains
        schema:
          type: string
      - name: visited_date__iso_week_day__iendswith
        required: false
        in: query
        description: visited_date__iso_week_day__iendswith
        schema:
          type: string
      - name: visited_date__iso_week_day__iexact
        required: false
        in: query
        description: visited_date__iso_week_day__iexact
        schema:
          type: string
      - name: visited_date__iso_week_day__in
        required: false
        in: query
        description: visited_date__iso_week_day__in
        schema:
          type: string
      - name: visited_date__iso_week_day__iregex
        required: false
        in: query
        description: visited_date__iso_week_day__iregex
        schema:
          type: string
      - name: visited_date__iso_week_day__isnull
        required: false
        in: query
        description: visited_date__iso_week_day__isnull
        schema:
          type: string
      - name: visited_date__iso_week_day__istartswith
        required: false
        in: query
        description: visited_date__iso_week_day__istartswith
        schema:
          type: string
      - name: visited_date__iso_week_day__lt
        required: false
        in: query
        description: visited_date__iso_week_day__lt
        schema:
          type: string
      - name: visited_date__iso_week_day__lte
        required: false
        in: query
        description: visited_date__iso_week_day__lte
        schema:
          type: string
      - name: visited_date__iso_week_day__range
        required: false
        in: query
        description: visited_date__iso_week_day__range
        schema:
          type: string
      - name: visited_date__iso_week_day__regex
        required: false
        in: query
        description: visited_date__iso_week_day__regex
        schema:
          type: string
      - name: visited_date__iso_week_day__startswith
        required: false
        in: query
        description: visited_date__iso_week_day__startswith
        schema:
          type: string
      - name: visited_date__iso_year
        required: false
        in: query
        description: visited_date__iso_year
        schema:
          type: string
      - name: visited_date__iso_year__contained_by
        required: false
        in: query
        description: visited_date__iso_year__contained_by
        schema:
          type: string
      - name: visited_date__iso_year__contains
        required: false
        in: query
        description: visited_date__iso_year__contains
        schema:
          type: string
      - name: visited_date__iso_year__endswith
        required: false
        in: query
        description: visited_date__iso_year__endswith
        schema:
          type: string
      - name: visited_date__iso_year__gt
        required: false
        in: query
        description: visited_date__iso_year__gt
        schema:
          type: string
      - name: visited_date__iso_year__gte
        required: false
        in: query
        description: visited_date__iso_year__gte
        schema:
          type: string
      - name: visited_date__iso_year__icontains
        required: false
        in: query
        description: visited_date__iso_year__icontains
        schema:
          type: string
      - name: visited_date__iso_year__iendswith
        required: false
        in: query
        description: visited_date__iso_year__iendswith
        schema:
          type: string
      - name: visited_date__iso_year__iexact
        required: false
        in: query
        description: visited_date__iso_year__iexact
        schema:
          type: string
      - name: visited_date__iso_year__in
        required: false
        in: query
        description: visited_date__iso_year__in
        schema:
          type: string
      - name: visited_date__iso_year__iregex
        required: false
        in: query
        description: visited_date__iso_year__iregex
        schema:
          type: string
      - name: visited_date__iso_year__isnull
        required: false
        in: query
        description: visited_date__iso_year__isnull
        schema:
          type: string
      - name: visited_date__iso_year__istartswith
        required: false
        in: query
        description: visited_date__iso_year__istartswith
        schema:
          type: string
      - name: visited_date__iso_year__lt
        required: false
        in: query
        description: visited_date__iso_year__lt
        schema:
          type: string
      - name: visited_date__iso_year__lte
        required: false
        in: query
        description: visited_date__iso_year__lte
        schema:
          type: string
      - name: visited_date__iso_year__range
        required: false
        in: query
        description: visited_date__iso_year__range
        schema:
          type: string
      - name: visited_date__iso_year__regex
        required: false
        in: query
        description: visited_date__iso_year__regex
        schema:
          type: string
      - name: visited_date__iso_year__startswith
        required: false
        in: query
        description: visited_date__iso_year__startswith
        schema:
          type: string
      - name: visited_date__istartswith
        required: false
        in: query
        description: visited_date__istartswith
        schema:
          type: string
      - name: visited_date__lt
        required: false
        in: query
        description: visited_date__lt
        schema:
          type: string
      - name: visited_date__lte
        required: false
        in: query
        description: visited_date__lte
        schema:
          type: string
      - name: visited_date__month
        required: false
        in: query
        description: visited_date__month
        schema:
          type: string
      - name: visited_date__month__contained_by
        required: false
        in: query
        description: visited_date__month__contained_by
        schema:
          type: string
      - name: visited_date__month__contains
        required: false
        in: query
        description: visited_date__month__contains
        schema:
          type: string
      - name: visited_date__month__endswith
        required: false
        in: query
        description: visited_date__month__endswith
        schema:
          type: string
      - name: visited_date__month__gt
        required: false
        in: query
        description: visited_date__month__gt
        schema:
          type: string
      - name: visited_date__month__gte
        required: false
        in: query
        description: visited_date__month__gte
        schema:
          type: string
      - name: visited_date__month__icontains
        required: false
        in: query
        description: visited_date__month__icontains
        schema:
          type: string
      - name: visited_date__month__iendswith
        required: false
        in: query
        description: visited_date__month__iendswith
        schema:
          type: string
      - name: visited_date__month__iexact
        required: false
        in: query
        description: visited_date__month__iexact
        schema:
          type: string
      - name: visited_date__month__in
        required: false
        in: query
        description: visited_date__month__in
        schema:
          type: string
      - name: visited_date__month__iregex
        required: false
        in: query
        description: visited_date__month__iregex
        schema:
          type: string
      - name: visited_date__month__isnull
        required: false
        in: query
        description: visited_date__month__isnull
        schema:
          type: string
      - name: visited_date__month__istartswith
        required: false
        in: query
        description: visited_date__month__istartswith
        schema:
          type: string
      - name: visited_date__month__lt
        required: false
        in: query
        description: visited_date__month__lt
        schema:
          type: string
      - name: visited_date__month__lte
        required: false
        in: query
        description: visited_date__month__lte
        schema:
          type: string
      - name: visited_date__month__range
        required: false
        in: query
        description: visited_date__month__range
        schema:
          type: string
      - name: visited_date__month__regex
        required: false
        in: query
        description: visited_date__month__regex
        schema:
          type: string
      - name: visited_date__month__startswith
        required: false
        in: query
        description: visited_date__month__startswith
        schema:
          type: string
      - name: visited_date__quarter
        required: false
        in: query
        description: visited_date__quarter
        schema:
          type: string
      - name: visited_date__quarter__contained_by
        required: false
        in: query
        description: visited_date__quarter__contained_by
        schema:
          type: string
      - name: visited_date__quarter__contains
        required: false
        in: query
        description: visited_date__quarter__contains
        schema:
          type: string
      - name: visited_date__quarter__endswith
        required: false
        in: query
        description: visited_date__quarter__endswith
        schema:
          type: string
      - name: visited_date__quarter__gt
        required: false
        in: query
        description: visited_date__quarter__gt
        schema:
          type: string
      - name: visited_date__quarter__gte
        required: false
        in: query
        description: visited_date__quarter__gte
        schema:
          type: string
      - name: visited_date__quarter__icontains
        required: false
        in: query
        description: visited_date__quarter__icontains
        schema:
          type: string
      - name: visited_date__quarter__iendswith
        required: false
        in: query
        description: visited_date__quarter__iendswith
        schema:
          type: string
      - name: visited_date__quarter__iexact
        required: false
        in: query
        description: visited_date__quarter__iexact
        schema:
          type: string
      - name: visited_date__quarter__in
        required: false
        in: query
        description: visited_date__quarter__in
        schema:
          type: string
      - name: visited_date__quarter__iregex
        required: false
        in: query
        description: visited_date__quarter__iregex
        schema:
          type: string
      - name: visited_date__quarter__isnull
        required: false
        in: query
        description: visited_date__quarter__isnull
        schema:
          type: string
      - name: visited_date__quarter__istartswith
        required: false
        in: query
        description: visited_date__quarter__istartswith
        schema:
          type: string
      - name: visited_date__quarter__lt
        required: false
        in: query
        description: visited_date__quarter__lt
        schema:
          type: string
      - name: visited_date__quarter__lte
        required: false
        in: query
        description: visited_date__quarter__lte
        schema:
          type: string
      - name: visited_date__quarter__range
        required: false
        in: query
        description: visited_date__quarter__range
        schema:
          type: string
      - name: visited_date__quarter__regex
        required: false
        in: query
        description: visited_date__quarter__regex
        schema:
          type: string
      - name: visited_date__quarter__startswith
        required: false
        in: query
        description: visited_date__quarter__startswith
        schema:
          type: string
      - name: visited_date__range
        required: false
        in: query
        description: visited_date__range
        schema:
          type: string
      - name: visited_date__regex
        required: false
        in: query
        description: visited_date__regex
        schema:
          type: string
      - name: visited_date__startswith
        required: false
        in: query
        description: visited_date__startswith
        schema:
          type: string
      - name: visited_date__week
        required: false
        in: query
        description: visited_date__week
        schema:
          type: string
      - name: visited_date__week__contained_by
        required: false
        in: query
        description: visited_date__week__contained_by
        schema:
          type: string
      - name: visited_date__week__contains
        required: false
        in: query
        description: visited_date__week__contains
        schema:
          type: string
      - name: visited_date__week__endswith
        required: false
        in: query
        description: visited_date__week__endswith
        schema:
          type: string
      - name: visited_date__week__gt
        required: false
        in: query
        description: visited_date__week__gt
        schema:
          type: string
      - name: visited_date__week__gte
        required: false
        in: query
        description: visited_date__week__gte
        schema:
          type: string
      - name: visited_date__week__icontains
        required: false
        in: query
        description: visited_date__week__icontains
        schema:
          type: string
      - name: visited_date__week__iendswith
        required: false
        in: query
        description: visited_date__week__iendswith
        schema:
          type: string
      - name: visited_date__week__iexact
        required: false
        in: query
        description: visited_date__week__iexact
        schema:
          type: string
      - name: visited_date__week__in
        required: false
        in: query
        description: visited_date__week__in
        schema:
          type: string
      - name: visited_date__week__iregex
        required: false
        in: query
        description: visited_date__week__iregex
        schema:
          type: string
      - name: visited_date__week__isnull
        required: false
        in: query
        description: visited_date__week__isnull
        schema:
          type: string
      - name: visited_date__week__istartswith
        required: false
        in: query
        description: visited_date__week__istartswith
        schema:
          type: string
      - name: visited_date__week__lt
        required: false
        in: query
        description: visited_date__week__lt
        schema:
          type: string
      - name: visited_date__week__lte
        required: false
        in: query
        description: visited_date__week__lte
        schema:
          type: string
      - name: visited_date__week__range
        required: false
        in: query
        description: visited_date__week__range
        schema:
          type: string
      - name: visited_date__week__regex
        required: false
        in: query
        description: visited_date__week__regex
        schema:
          type: string
      - name: visited_date__week__startswith
        required: false
        in: query
        description: visited_date__week__startswith
        schema:
          type: string
      - name: visited_date__week_day
        required: false
        in: query
        description: visited_date__week_day
        schema:
          type: string
      - name: visited_date__week_day__contained_by
        required: false
        in: query
        description: visited_date__week_day__contained_by
        schema:
          type: string
      - name: visited_date__week_day__contains
        required: false
        in: query
        description: visited_date__week_day__contains
        schema:
          type: string
      - name: visited_date__week_day__endswith
        required: false
        in: query
        description: visited_date__week_day__endswith
        schema:
          type: string
      - name: visited_date__week_day__gt
        required: false
        in: query
        description: visited_date__week_day__gt
        schema:
          type: string
      - name: visited_date__week_day__gte
        required: false
        in: query
        description: visited_date__week_day__gte
        schema:
          type: string
      - name: visited_date__week_day__icontains
        required: false
        in: query
        description: visited_date__week_day__icontains
        schema:
          type: string
      - name: visited_date__week_day__iendswith
        required: false
        in: query
        description: visited_date__week_day__iendswith
        schema:
          type: string
      - name: visited_date__week_day__iexact
        required: false
        in: query
        description: visited_date__week_day__iexact
        schema:
          type: string
      - name: visited_date__week_day__in
        required: false
        in: query
        description: visited_date__week_day__in
        schema:
          type: string
      - name: visited_date__week_day__iregex
        required: false
        in: query
        description: visited_date__week_day__iregex
        schema:
          type: string
      - name: visited_date__week_day__isnull
        required: false
        in: query
        description: visited_date__week_day__isnull
        schema:
          type: string
      - name: visited_date__week_day__istartswith
        required: false
        in: query
        description: visited_date__week_day__istartswith
        schema:
          type: string
      - name: visited_date__week_day__lt
        required: false
        in: query
        description: visited_date__week_day__lt
        schema:
          type: string
      - name: visited_date__week_day__lte
        required: false
        in: query
        description: visited_date__week_day__lte
        schema:
          type: string
      - name: visited_date__week_day__range
        required: false
        in: query
        description: visited_date__week_day__range
        schema:
          type: string
      - name: visited_date__week_day__regex
        required: false
        in: query
        description: visited_date__week_day__regex
        schema:
          type: string
      - name: visited_date__week_day__startswith
        required: false
        in: query
        description: visited_date__week_day__startswith
        schema:
          type: string
      - name: visited_date__year
        required: false
        in: query
        description: visited_date__year
        schema:
          type: string
      - name: visited_date__year__contained_by
        required: false
        in: query
        description: visited_date__year__contained_by
        schema:
          type: string
      - name: visited_date__year__contains
        required: false
        in: query
        description: visited_date__year__contains
        schema:
          type: string
      - name: visited_date__year__endswith
        required: false
        in: query
        description: visited_date__year__endswith
        schema:
          type: string
      - name: visited_date__year__gt
        required: false
        in: query
        description: visited_date__year__gt
        schema:
          type: string
      - name: visited_date__year__gte
        required: false
        in: query
        description: visited_date__year__gte
        schema:
          type: string
      - name: visited_date__year__icontains
        required: false
        in: query
        description: visited_date__year__icontains
        schema:
          type: string
      - name: visited_date__year__iendswith
        required: false
        in: query
        description: visited_date__year__iendswith
        schema:
          type: string
      - name: visited_date__year__iexact
        required: false
        in: query
        description: visited_date__year__iexact
        schema:
          type: string
      - name: visited_date__year__in
        required: false
        in: query
        description: visited_date__year__in
        schema:
          type: string
      - name: visited_date__year__iregex
        required: false
        in: query
        description: visited_date__year__iregex
        schema:
          type: string
      - name: visited_date__year__isnull
        required: false
        in: query
        description: visited_date__year__isnull
        schema:
          type: string
      - name: visited_date__year__istartswith
        required: false
        in: query
        description: visited_date__year__istartswith
        schema:
          type: string
      - name: visited_date__year__lt
        required: false
        in: query
        description: visited_date__year__lt
        schema:
          type: string
      - name: visited_date__year__lte
        required: false
        in: query
        description: visited_date__year__lte
        schema:
          type: string
      - name: visited_date__year__range
        required: false
        in: query
        description: visited_date__year__range
        schema:
          type: string
      - name: visited_date__year__regex
        required: false
        in: query
        description: visited_date__year__regex
        schema:
          type: string
      - name: visited_date__year__startswith
        required: false
        in: query
        description: visited_date__year__startswith
        schema:
          type: string
      tags:
      - hostel-visitors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVisitorList'
          description: ''
    post:
      operationId: hostel_visitors_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-visitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visitor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visitor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visitor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
  /api/hostel-visitors/{id}/:
    get:
      operationId: hostel_visitors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visitor.
        required: true
      tags:
      - hostel-visitors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
    put:
      operationId: hostel_visitors_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visitor.
        required: true
      tags:
      - hostel-visitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visitor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visitor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visitor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
    patch:
      operationId: hostel_visitors_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visitor.
        required: true
      tags:
      - hostel-visitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVisitor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVisitor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVisitor'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
    delete:
      operationId: hostel_visitors_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visitor.
        required: true
      tags:
      - hostel-visitors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/hostel-visitors/{id}/check_out/:
    post:
      operationId: hostel_visitors_check_out_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visitor.
        required: true
      tags:
      - hostel-visitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visitor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visitor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visitor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
  /api/hostel-visitors/current_visitors/:
    get:
      operationId: hostel_visitors_current_visitors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - hostel-visitors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
  /api/hostel-visitors/visits_by_student/:
    get:
      operationId: hostel_visitors_visits_by_student_retrieve
      description: Get visitor count by student
      tags:
      - hostel-visitors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visitor'
          description: ''
  /api/inventory/:
    get:
      operationId: inventory_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: bill_image
        required: false
        in: query
        description: bill_image
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: inventory_type
        required: false
        in: query
        description: inventory_type
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_stationary
        required: false
        in: query
        description: is_stationary
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: product_image
        required: false
        in: query
        description: product_image
        schema:
          type: string
      - name: quantity
        required: false
        in: query
        description: quantity
        schema:
          type: string
      - name: remarks
        required: false
        in: query
        description: remarks
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Available
          - Not-Available
      tags:
      - inventory
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryList'
          description: ''
    post:
      operationId: inventory_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/inventory-tracking/:
    get:
      operationId: inventory_tracking_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: inventory
        required: false
        in: query
        description: inventory
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: quantity
        required: false
        in: query
        description: quantity
        schema:
          type: string
      - name: remarks
        required: false
        in: query
        description: remarks
        schema:
          type: string
      - name: return_date
        required: false
        in: query
        description: return_date
        schema:
          type: string
      - name: room
        required: false
        in: query
        description: room
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Issued
          - Damaged
          - Lost
          - Returned
      tags:
      - inventory-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryTrackingList'
          description: ''
    post:
      operationId: inventory_tracking_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTracking'
          description: ''
  /api/inventory-tracking/{id}/:
    get:
      operationId: inventory_tracking_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory tracking.
        required: true
      tags:
      - inventory-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTracking'
          description: ''
    put:
      operationId: inventory_tracking_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory tracking.
        required: true
      tags:
      - inventory-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryTracking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTracking'
          description: ''
    patch:
      operationId: inventory_tracking_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory tracking.
        required: true
      tags:
      - inventory-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryTracking'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTracking'
          description: ''
    delete:
      operationId: inventory_tracking_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory tracking.
        required: true
      tags:
      - inventory-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory-tracking/inventory-status/:
    get:
      operationId: inventory_tracking_inventory_status_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTracking'
          description: ''
  /api/inventory-types/:
    get:
      operationId: inventory_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - Stationary
          - Room
      tags:
      - inventory-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryTypeList'
          description: ''
    post:
      operationId: inventory_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
          description: ''
  /api/inventory-types/{id}/:
    get:
      operationId: inventory_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory type.
        required: true
      tags:
      - inventory-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
          description: ''
    put:
      operationId: inventory_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory type.
        required: true
      tags:
      - inventory-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
          description: ''
    patch:
      operationId: inventory_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory type.
        required: true
      tags:
      - inventory-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
          description: ''
    delete:
      operationId: inventory_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory type.
        required: true
      tags:
      - inventory-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory-types/inventory-types/:
    get:
      operationId: inventory_types_inventory_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
          description: ''
  /api/inventory/{id}/:
    get:
      operationId: inventory_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory.
        required: true
      tags:
      - inventory
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    put:
      operationId: inventory_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: inventory_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    delete:
      operationId: inventory_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory.
        required: true
      tags:
      - inventory
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/dashboard/:
    get:
      operationId: inventory_dashboard_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/inventory/inventory-status/:
    get:
      operationId: inventory_inventory_status_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - inventory
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/iot-management/:
    get:
      operationId: iot_management_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: iot_management_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          description: No response body
  /api/iot-management/{id}/:
    get:
      operationId: iot_management_retrieve_2
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: iot_management_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: iot_management_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: iot_management_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/iot-management/get-certificates/:
    get:
      operationId: iot_management_get_certificates_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - iot-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/leave/:
    get:
      operationId: leave_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: from_date
        required: false
        in: query
        description: from_date
        schema:
          type: string
      - name: from_date__contained_by
        required: false
        in: query
        description: from_date__contained_by
        schema:
          type: string
      - name: from_date__contains
        required: false
        in: query
        description: from_date__contains
        schema:
          type: string
      - name: from_date__day
        required: false
        in: query
        description: from_date__day
        schema:
          type: string
      - name: from_date__day__contained_by
        required: false
        in: query
        description: from_date__day__contained_by
        schema:
          type: string
      - name: from_date__day__contains
        required: false
        in: query
        description: from_date__day__contains
        schema:
          type: string
      - name: from_date__day__endswith
        required: false
        in: query
        description: from_date__day__endswith
        schema:
          type: string
      - name: from_date__day__gt
        required: false
        in: query
        description: from_date__day__gt
        schema:
          type: string
      - name: from_date__day__gte
        required: false
        in: query
        description: from_date__day__gte
        schema:
          type: string
      - name: from_date__day__icontains
        required: false
        in: query
        description: from_date__day__icontains
        schema:
          type: string
      - name: from_date__day__iendswith
        required: false
        in: query
        description: from_date__day__iendswith
        schema:
          type: string
      - name: from_date__day__iexact
        required: false
        in: query
        description: from_date__day__iexact
        schema:
          type: string
      - name: from_date__day__in
        required: false
        in: query
        description: from_date__day__in
        schema:
          type: string
      - name: from_date__day__iregex
        required: false
        in: query
        description: from_date__day__iregex
        schema:
          type: string
      - name: from_date__day__isnull
        required: false
        in: query
        description: from_date__day__isnull
        schema:
          type: string
      - name: from_date__day__istartswith
        required: false
        in: query
        description: from_date__day__istartswith
        schema:
          type: string
      - name: from_date__day__lt
        required: false
        in: query
        description: from_date__day__lt
        schema:
          type: string
      - name: from_date__day__lte
        required: false
        in: query
        description: from_date__day__lte
        schema:
          type: string
      - name: from_date__day__range
        required: false
        in: query
        description: from_date__day__range
        schema:
          type: string
      - name: from_date__day__regex
        required: false
        in: query
        description: from_date__day__regex
        schema:
          type: string
      - name: from_date__day__startswith
        required: false
        in: query
        description: from_date__day__startswith
        schema:
          type: string
      - name: from_date__endswith
        required: false
        in: query
        description: from_date__endswith
        schema:
          type: string
      - name: from_date__gt
        required: false
        in: query
        description: from_date__gt
        schema:
          type: string
      - name: from_date__gte
        required: false
        in: query
        description: from_date__gte
        schema:
          type: string
      - name: from_date__icontains
        required: false
        in: query
        description: from_date__icontains
        schema:
          type: string
      - name: from_date__iendswith
        required: false
        in: query
        description: from_date__iendswith
        schema:
          type: string
      - name: from_date__iexact
        required: false
        in: query
        description: from_date__iexact
        schema:
          type: string
      - name: from_date__in
        required: false
        in: query
        description: from_date__in
        schema:
          type: string
      - name: from_date__iregex
        required: false
        in: query
        description: from_date__iregex
        schema:
          type: string
      - name: from_date__isnull
        required: false
        in: query
        description: from_date__isnull
        schema:
          type: string
      - name: from_date__iso_week_day
        required: false
        in: query
        description: from_date__iso_week_day
        schema:
          type: string
      - name: from_date__iso_week_day__contained_by
        required: false
        in: query
        description: from_date__iso_week_day__contained_by
        schema:
          type: string
      - name: from_date__iso_week_day__contains
        required: false
        in: query
        description: from_date__iso_week_day__contains
        schema:
          type: string
      - name: from_date__iso_week_day__endswith
        required: false
        in: query
        description: from_date__iso_week_day__endswith
        schema:
          type: string
      - name: from_date__iso_week_day__gt
        required: false
        in: query
        description: from_date__iso_week_day__gt
        schema:
          type: string
      - name: from_date__iso_week_day__gte
        required: false
        in: query
        description: from_date__iso_week_day__gte
        schema:
          type: string
      - name: from_date__iso_week_day__icontains
        required: false
        in: query
        description: from_date__iso_week_day__icontains
        schema:
          type: string
      - name: from_date__iso_week_day__iendswith
        required: false
        in: query
        description: from_date__iso_week_day__iendswith
        schema:
          type: string
      - name: from_date__iso_week_day__iexact
        required: false
        in: query
        description: from_date__iso_week_day__iexact
        schema:
          type: string
      - name: from_date__iso_week_day__in
        required: false
        in: query
        description: from_date__iso_week_day__in
        schema:
          type: string
      - name: from_date__iso_week_day__iregex
        required: false
        in: query
        description: from_date__iso_week_day__iregex
        schema:
          type: string
      - name: from_date__iso_week_day__isnull
        required: false
        in: query
        description: from_date__iso_week_day__isnull
        schema:
          type: string
      - name: from_date__iso_week_day__istartswith
        required: false
        in: query
        description: from_date__iso_week_day__istartswith
        schema:
          type: string
      - name: from_date__iso_week_day__lt
        required: false
        in: query
        description: from_date__iso_week_day__lt
        schema:
          type: string
      - name: from_date__iso_week_day__lte
        required: false
        in: query
        description: from_date__iso_week_day__lte
        schema:
          type: string
      - name: from_date__iso_week_day__range
        required: false
        in: query
        description: from_date__iso_week_day__range
        schema:
          type: string
      - name: from_date__iso_week_day__regex
        required: false
        in: query
        description: from_date__iso_week_day__regex
        schema:
          type: string
      - name: from_date__iso_week_day__startswith
        required: false
        in: query
        description: from_date__iso_week_day__startswith
        schema:
          type: string
      - name: from_date__iso_year
        required: false
        in: query
        description: from_date__iso_year
        schema:
          type: string
      - name: from_date__iso_year__contained_by
        required: false
        in: query
        description: from_date__iso_year__contained_by
        schema:
          type: string
      - name: from_date__iso_year__contains
        required: false
        in: query
        description: from_date__iso_year__contains
        schema:
          type: string
      - name: from_date__iso_year__endswith
        required: false
        in: query
        description: from_date__iso_year__endswith
        schema:
          type: string
      - name: from_date__iso_year__gt
        required: false
        in: query
        description: from_date__iso_year__gt
        schema:
          type: string
      - name: from_date__iso_year__gte
        required: false
        in: query
        description: from_date__iso_year__gte
        schema:
          type: string
      - name: from_date__iso_year__icontains
        required: false
        in: query
        description: from_date__iso_year__icontains
        schema:
          type: string
      - name: from_date__iso_year__iendswith
        required: false
        in: query
        description: from_date__iso_year__iendswith
        schema:
          type: string
      - name: from_date__iso_year__iexact
        required: false
        in: query
        description: from_date__iso_year__iexact
        schema:
          type: string
      - name: from_date__iso_year__in
        required: false
        in: query
        description: from_date__iso_year__in
        schema:
          type: string
      - name: from_date__iso_year__iregex
        required: false
        in: query
        description: from_date__iso_year__iregex
        schema:
          type: string
      - name: from_date__iso_year__isnull
        required: false
        in: query
        description: from_date__iso_year__isnull
        schema:
          type: string
      - name: from_date__iso_year__istartswith
        required: false
        in: query
        description: from_date__iso_year__istartswith
        schema:
          type: string
      - name: from_date__iso_year__lt
        required: false
        in: query
        description: from_date__iso_year__lt
        schema:
          type: string
      - name: from_date__iso_year__lte
        required: false
        in: query
        description: from_date__iso_year__lte
        schema:
          type: string
      - name: from_date__iso_year__range
        required: false
        in: query
        description: from_date__iso_year__range
        schema:
          type: string
      - name: from_date__iso_year__regex
        required: false
        in: query
        description: from_date__iso_year__regex
        schema:
          type: string
      - name: from_date__iso_year__startswith
        required: false
        in: query
        description: from_date__iso_year__startswith
        schema:
          type: string
      - name: from_date__istartswith
        required: false
        in: query
        description: from_date__istartswith
        schema:
          type: string
      - name: from_date__lt
        required: false
        in: query
        description: from_date__lt
        schema:
          type: string
      - name: from_date__lte
        required: false
        in: query
        description: from_date__lte
        schema:
          type: string
      - name: from_date__month
        required: false
        in: query
        description: from_date__month
        schema:
          type: string
      - name: from_date__month__contained_by
        required: false
        in: query
        description: from_date__month__contained_by
        schema:
          type: string
      - name: from_date__month__contains
        required: false
        in: query
        description: from_date__month__contains
        schema:
          type: string
      - name: from_date__month__endswith
        required: false
        in: query
        description: from_date__month__endswith
        schema:
          type: string
      - name: from_date__month__gt
        required: false
        in: query
        description: from_date__month__gt
        schema:
          type: string
      - name: from_date__month__gte
        required: false
        in: query
        description: from_date__month__gte
        schema:
          type: string
      - name: from_date__month__icontains
        required: false
        in: query
        description: from_date__month__icontains
        schema:
          type: string
      - name: from_date__month__iendswith
        required: false
        in: query
        description: from_date__month__iendswith
        schema:
          type: string
      - name: from_date__month__iexact
        required: false
        in: query
        description: from_date__month__iexact
        schema:
          type: string
      - name: from_date__month__in
        required: false
        in: query
        description: from_date__month__in
        schema:
          type: string
      - name: from_date__month__iregex
        required: false
        in: query
        description: from_date__month__iregex
        schema:
          type: string
      - name: from_date__month__isnull
        required: false
        in: query
        description: from_date__month__isnull
        schema:
          type: string
      - name: from_date__month__istartswith
        required: false
        in: query
        description: from_date__month__istartswith
        schema:
          type: string
      - name: from_date__month__lt
        required: false
        in: query
        description: from_date__month__lt
        schema:
          type: string
      - name: from_date__month__lte
        required: false
        in: query
        description: from_date__month__lte
        schema:
          type: string
      - name: from_date__month__range
        required: false
        in: query
        description: from_date__month__range
        schema:
          type: string
      - name: from_date__month__regex
        required: false
        in: query
        description: from_date__month__regex
        schema:
          type: string
      - name: from_date__month__startswith
        required: false
        in: query
        description: from_date__month__startswith
        schema:
          type: string
      - name: from_date__quarter
        required: false
        in: query
        description: from_date__quarter
        schema:
          type: string
      - name: from_date__quarter__contained_by
        required: false
        in: query
        description: from_date__quarter__contained_by
        schema:
          type: string
      - name: from_date__quarter__contains
        required: false
        in: query
        description: from_date__quarter__contains
        schema:
          type: string
      - name: from_date__quarter__endswith
        required: false
        in: query
        description: from_date__quarter__endswith
        schema:
          type: string
      - name: from_date__quarter__gt
        required: false
        in: query
        description: from_date__quarter__gt
        schema:
          type: string
      - name: from_date__quarter__gte
        required: false
        in: query
        description: from_date__quarter__gte
        schema:
          type: string
      - name: from_date__quarter__icontains
        required: false
        in: query
        description: from_date__quarter__icontains
        schema:
          type: string
      - name: from_date__quarter__iendswith
        required: false
        in: query
        description: from_date__quarter__iendswith
        schema:
          type: string
      - name: from_date__quarter__iexact
        required: false
        in: query
        description: from_date__quarter__iexact
        schema:
          type: string
      - name: from_date__quarter__in
        required: false
        in: query
        description: from_date__quarter__in
        schema:
          type: string
      - name: from_date__quarter__iregex
        required: false
        in: query
        description: from_date__quarter__iregex
        schema:
          type: string
      - name: from_date__quarter__isnull
        required: false
        in: query
        description: from_date__quarter__isnull
        schema:
          type: string
      - name: from_date__quarter__istartswith
        required: false
        in: query
        description: from_date__quarter__istartswith
        schema:
          type: string
      - name: from_date__quarter__lt
        required: false
        in: query
        description: from_date__quarter__lt
        schema:
          type: string
      - name: from_date__quarter__lte
        required: false
        in: query
        description: from_date__quarter__lte
        schema:
          type: string
      - name: from_date__quarter__range
        required: false
        in: query
        description: from_date__quarter__range
        schema:
          type: string
      - name: from_date__quarter__regex
        required: false
        in: query
        description: from_date__quarter__regex
        schema:
          type: string
      - name: from_date__quarter__startswith
        required: false
        in: query
        description: from_date__quarter__startswith
        schema:
          type: string
      - name: from_date__range
        required: false
        in: query
        description: from_date__range
        schema:
          type: string
      - name: from_date__regex
        required: false
        in: query
        description: from_date__regex
        schema:
          type: string
      - name: from_date__startswith
        required: false
        in: query
        description: from_date__startswith
        schema:
          type: string
      - name: from_date__week
        required: false
        in: query
        description: from_date__week
        schema:
          type: string
      - name: from_date__week__contained_by
        required: false
        in: query
        description: from_date__week__contained_by
        schema:
          type: string
      - name: from_date__week__contains
        required: false
        in: query
        description: from_date__week__contains
        schema:
          type: string
      - name: from_date__week__endswith
        required: false
        in: query
        description: from_date__week__endswith
        schema:
          type: string
      - name: from_date__week__gt
        required: false
        in: query
        description: from_date__week__gt
        schema:
          type: string
      - name: from_date__week__gte
        required: false
        in: query
        description: from_date__week__gte
        schema:
          type: string
      - name: from_date__week__icontains
        required: false
        in: query
        description: from_date__week__icontains
        schema:
          type: string
      - name: from_date__week__iendswith
        required: false
        in: query
        description: from_date__week__iendswith
        schema:
          type: string
      - name: from_date__week__iexact
        required: false
        in: query
        description: from_date__week__iexact
        schema:
          type: string
      - name: from_date__week__in
        required: false
        in: query
        description: from_date__week__in
        schema:
          type: string
      - name: from_date__week__iregex
        required: false
        in: query
        description: from_date__week__iregex
        schema:
          type: string
      - name: from_date__week__isnull
        required: false
        in: query
        description: from_date__week__isnull
        schema:
          type: string
      - name: from_date__week__istartswith
        required: false
        in: query
        description: from_date__week__istartswith
        schema:
          type: string
      - name: from_date__week__lt
        required: false
        in: query
        description: from_date__week__lt
        schema:
          type: string
      - name: from_date__week__lte
        required: false
        in: query
        description: from_date__week__lte
        schema:
          type: string
      - name: from_date__week__range
        required: false
        in: query
        description: from_date__week__range
        schema:
          type: string
      - name: from_date__week__regex
        required: false
        in: query
        description: from_date__week__regex
        schema:
          type: string
      - name: from_date__week__startswith
        required: false
        in: query
        description: from_date__week__startswith
        schema:
          type: string
      - name: from_date__week_day
        required: false
        in: query
        description: from_date__week_day
        schema:
          type: string
      - name: from_date__week_day__contained_by
        required: false
        in: query
        description: from_date__week_day__contained_by
        schema:
          type: string
      - name: from_date__week_day__contains
        required: false
        in: query
        description: from_date__week_day__contains
        schema:
          type: string
      - name: from_date__week_day__endswith
        required: false
        in: query
        description: from_date__week_day__endswith
        schema:
          type: string
      - name: from_date__week_day__gt
        required: false
        in: query
        description: from_date__week_day__gt
        schema:
          type: string
      - name: from_date__week_day__gte
        required: false
        in: query
        description: from_date__week_day__gte
        schema:
          type: string
      - name: from_date__week_day__icontains
        required: false
        in: query
        description: from_date__week_day__icontains
        schema:
          type: string
      - name: from_date__week_day__iendswith
        required: false
        in: query
        description: from_date__week_day__iendswith
        schema:
          type: string
      - name: from_date__week_day__iexact
        required: false
        in: query
        description: from_date__week_day__iexact
        schema:
          type: string
      - name: from_date__week_day__in
        required: false
        in: query
        description: from_date__week_day__in
        schema:
          type: string
      - name: from_date__week_day__iregex
        required: false
        in: query
        description: from_date__week_day__iregex
        schema:
          type: string
      - name: from_date__week_day__isnull
        required: false
        in: query
        description: from_date__week_day__isnull
        schema:
          type: string
      - name: from_date__week_day__istartswith
        required: false
        in: query
        description: from_date__week_day__istartswith
        schema:
          type: string
      - name: from_date__week_day__lt
        required: false
        in: query
        description: from_date__week_day__lt
        schema:
          type: string
      - name: from_date__week_day__lte
        required: false
        in: query
        description: from_date__week_day__lte
        schema:
          type: string
      - name: from_date__week_day__range
        required: false
        in: query
        description: from_date__week_day__range
        schema:
          type: string
      - name: from_date__week_day__regex
        required: false
        in: query
        description: from_date__week_day__regex
        schema:
          type: string
      - name: from_date__week_day__startswith
        required: false
        in: query
        description: from_date__week_day__startswith
        schema:
          type: string
      - name: from_date__year
        required: false
        in: query
        description: from_date__year
        schema:
          type: string
      - name: from_date__year__contained_by
        required: false
        in: query
        description: from_date__year__contained_by
        schema:
          type: string
      - name: from_date__year__contains
        required: false
        in: query
        description: from_date__year__contains
        schema:
          type: string
      - name: from_date__year__endswith
        required: false
        in: query
        description: from_date__year__endswith
        schema:
          type: string
      - name: from_date__year__gt
        required: false
        in: query
        description: from_date__year__gt
        schema:
          type: string
      - name: from_date__year__gte
        required: false
        in: query
        description: from_date__year__gte
        schema:
          type: string
      - name: from_date__year__icontains
        required: false
        in: query
        description: from_date__year__icontains
        schema:
          type: string
      - name: from_date__year__iendswith
        required: false
        in: query
        description: from_date__year__iendswith
        schema:
          type: string
      - name: from_date__year__iexact
        required: false
        in: query
        description: from_date__year__iexact
        schema:
          type: string
      - name: from_date__year__in
        required: false
        in: query
        description: from_date__year__in
        schema:
          type: string
      - name: from_date__year__iregex
        required: false
        in: query
        description: from_date__year__iregex
        schema:
          type: string
      - name: from_date__year__isnull
        required: false
        in: query
        description: from_date__year__isnull
        schema:
          type: string
      - name: from_date__year__istartswith
        required: false
        in: query
        description: from_date__year__istartswith
        schema:
          type: string
      - name: from_date__year__lt
        required: false
        in: query
        description: from_date__year__lt
        schema:
          type: string
      - name: from_date__year__lte
        required: false
        in: query
        description: from_date__year__lte
        schema:
          type: string
      - name: from_date__year__range
        required: false
        in: query
        description: from_date__year__range
        schema:
          type: string
      - name: from_date__year__regex
        required: false
        in: query
        description: from_date__year__regex
        schema:
          type: string
      - name: from_date__year__startswith
        required: false
        in: query
        description: from_date__year__startswith
        schema:
          type: string
      - name: l1_approved
        required: false
        in: query
        description: l1_approved
        schema:
          type: string
      - name: l1_approved_by
        required: false
        in: query
        description: l1_approved_by
        schema:
          type: string
      - name: l2_approved
        required: false
        in: query
        description: l2_approved
        schema:
          type: string
      - name: l2_approved_by
        required: false
        in: query
        description: l2_approved_by
        schema:
          type: string
      - name: leave_duration
        required: false
        in: query
        description: leave_duration
        schema:
          type: string
          enum:
          - Full Day
          - Half Day
      - name: leave_type
        required: false
        in: query
        description: leave_type
        schema:
          type: string
          enum:
          - Casual
          - Sick
          - Earned
          - Maternity
          - Paternity
          - Compensatory
          - Special
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: reason
        required: false
        in: query
        description: reason
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Pending
          - L1_APPROVED
          - Approved
          - Rejected
          - cancelled
      - name: to_date
        required: false
        in: query
        description: to_date
        schema:
          type: string
      - name: to_date__contained_by
        required: false
        in: query
        description: to_date__contained_by
        schema:
          type: string
      - name: to_date__contains
        required: false
        in: query
        description: to_date__contains
        schema:
          type: string
      - name: to_date__day
        required: false
        in: query
        description: to_date__day
        schema:
          type: string
      - name: to_date__day__contained_by
        required: false
        in: query
        description: to_date__day__contained_by
        schema:
          type: string
      - name: to_date__day__contains
        required: false
        in: query
        description: to_date__day__contains
        schema:
          type: string
      - name: to_date__day__endswith
        required: false
        in: query
        description: to_date__day__endswith
        schema:
          type: string
      - name: to_date__day__gt
        required: false
        in: query
        description: to_date__day__gt
        schema:
          type: string
      - name: to_date__day__gte
        required: false
        in: query
        description: to_date__day__gte
        schema:
          type: string
      - name: to_date__day__icontains
        required: false
        in: query
        description: to_date__day__icontains
        schema:
          type: string
      - name: to_date__day__iendswith
        required: false
        in: query
        description: to_date__day__iendswith
        schema:
          type: string
      - name: to_date__day__iexact
        required: false
        in: query
        description: to_date__day__iexact
        schema:
          type: string
      - name: to_date__day__in
        required: false
        in: query
        description: to_date__day__in
        schema:
          type: string
      - name: to_date__day__iregex
        required: false
        in: query
        description: to_date__day__iregex
        schema:
          type: string
      - name: to_date__day__isnull
        required: false
        in: query
        description: to_date__day__isnull
        schema:
          type: string
      - name: to_date__day__istartswith
        required: false
        in: query
        description: to_date__day__istartswith
        schema:
          type: string
      - name: to_date__day__lt
        required: false
        in: query
        description: to_date__day__lt
        schema:
          type: string
      - name: to_date__day__lte
        required: false
        in: query
        description: to_date__day__lte
        schema:
          type: string
      - name: to_date__day__range
        required: false
        in: query
        description: to_date__day__range
        schema:
          type: string
      - name: to_date__day__regex
        required: false
        in: query
        description: to_date__day__regex
        schema:
          type: string
      - name: to_date__day__startswith
        required: false
        in: query
        description: to_date__day__startswith
        schema:
          type: string
      - name: to_date__endswith
        required: false
        in: query
        description: to_date__endswith
        schema:
          type: string
      - name: to_date__gt
        required: false
        in: query
        description: to_date__gt
        schema:
          type: string
      - name: to_date__gte
        required: false
        in: query
        description: to_date__gte
        schema:
          type: string
      - name: to_date__icontains
        required: false
        in: query
        description: to_date__icontains
        schema:
          type: string
      - name: to_date__iendswith
        required: false
        in: query
        description: to_date__iendswith
        schema:
          type: string
      - name: to_date__iexact
        required: false
        in: query
        description: to_date__iexact
        schema:
          type: string
      - name: to_date__in
        required: false
        in: query
        description: to_date__in
        schema:
          type: string
      - name: to_date__iregex
        required: false
        in: query
        description: to_date__iregex
        schema:
          type: string
      - name: to_date__isnull
        required: false
        in: query
        description: to_date__isnull
        schema:
          type: string
      - name: to_date__iso_week_day
        required: false
        in: query
        description: to_date__iso_week_day
        schema:
          type: string
      - name: to_date__iso_week_day__contained_by
        required: false
        in: query
        description: to_date__iso_week_day__contained_by
        schema:
          type: string
      - name: to_date__iso_week_day__contains
        required: false
        in: query
        description: to_date__iso_week_day__contains
        schema:
          type: string
      - name: to_date__iso_week_day__endswith
        required: false
        in: query
        description: to_date__iso_week_day__endswith
        schema:
          type: string
      - name: to_date__iso_week_day__gt
        required: false
        in: query
        description: to_date__iso_week_day__gt
        schema:
          type: string
      - name: to_date__iso_week_day__gte
        required: false
        in: query
        description: to_date__iso_week_day__gte
        schema:
          type: string
      - name: to_date__iso_week_day__icontains
        required: false
        in: query
        description: to_date__iso_week_day__icontains
        schema:
          type: string
      - name: to_date__iso_week_day__iendswith
        required: false
        in: query
        description: to_date__iso_week_day__iendswith
        schema:
          type: string
      - name: to_date__iso_week_day__iexact
        required: false
        in: query
        description: to_date__iso_week_day__iexact
        schema:
          type: string
      - name: to_date__iso_week_day__in
        required: false
        in: query
        description: to_date__iso_week_day__in
        schema:
          type: string
      - name: to_date__iso_week_day__iregex
        required: false
        in: query
        description: to_date__iso_week_day__iregex
        schema:
          type: string
      - name: to_date__iso_week_day__isnull
        required: false
        in: query
        description: to_date__iso_week_day__isnull
        schema:
          type: string
      - name: to_date__iso_week_day__istartswith
        required: false
        in: query
        description: to_date__iso_week_day__istartswith
        schema:
          type: string
      - name: to_date__iso_week_day__lt
        required: false
        in: query
        description: to_date__iso_week_day__lt
        schema:
          type: string
      - name: to_date__iso_week_day__lte
        required: false
        in: query
        description: to_date__iso_week_day__lte
        schema:
          type: string
      - name: to_date__iso_week_day__range
        required: false
        in: query
        description: to_date__iso_week_day__range
        schema:
          type: string
      - name: to_date__iso_week_day__regex
        required: false
        in: query
        description: to_date__iso_week_day__regex
        schema:
          type: string
      - name: to_date__iso_week_day__startswith
        required: false
        in: query
        description: to_date__iso_week_day__startswith
        schema:
          type: string
      - name: to_date__iso_year
        required: false
        in: query
        description: to_date__iso_year
        schema:
          type: string
      - name: to_date__iso_year__contained_by
        required: false
        in: query
        description: to_date__iso_year__contained_by
        schema:
          type: string
      - name: to_date__iso_year__contains
        required: false
        in: query
        description: to_date__iso_year__contains
        schema:
          type: string
      - name: to_date__iso_year__endswith
        required: false
        in: query
        description: to_date__iso_year__endswith
        schema:
          type: string
      - name: to_date__iso_year__gt
        required: false
        in: query
        description: to_date__iso_year__gt
        schema:
          type: string
      - name: to_date__iso_year__gte
        required: false
        in: query
        description: to_date__iso_year__gte
        schema:
          type: string
      - name: to_date__iso_year__icontains
        required: false
        in: query
        description: to_date__iso_year__icontains
        schema:
          type: string
      - name: to_date__iso_year__iendswith
        required: false
        in: query
        description: to_date__iso_year__iendswith
        schema:
          type: string
      - name: to_date__iso_year__iexact
        required: false
        in: query
        description: to_date__iso_year__iexact
        schema:
          type: string
      - name: to_date__iso_year__in
        required: false
        in: query
        description: to_date__iso_year__in
        schema:
          type: string
      - name: to_date__iso_year__iregex
        required: false
        in: query
        description: to_date__iso_year__iregex
        schema:
          type: string
      - name: to_date__iso_year__isnull
        required: false
        in: query
        description: to_date__iso_year__isnull
        schema:
          type: string
      - name: to_date__iso_year__istartswith
        required: false
        in: query
        description: to_date__iso_year__istartswith
        schema:
          type: string
      - name: to_date__iso_year__lt
        required: false
        in: query
        description: to_date__iso_year__lt
        schema:
          type: string
      - name: to_date__iso_year__lte
        required: false
        in: query
        description: to_date__iso_year__lte
        schema:
          type: string
      - name: to_date__iso_year__range
        required: false
        in: query
        description: to_date__iso_year__range
        schema:
          type: string
      - name: to_date__iso_year__regex
        required: false
        in: query
        description: to_date__iso_year__regex
        schema:
          type: string
      - name: to_date__iso_year__startswith
        required: false
        in: query
        description: to_date__iso_year__startswith
        schema:
          type: string
      - name: to_date__istartswith
        required: false
        in: query
        description: to_date__istartswith
        schema:
          type: string
      - name: to_date__lt
        required: false
        in: query
        description: to_date__lt
        schema:
          type: string
      - name: to_date__lte
        required: false
        in: query
        description: to_date__lte
        schema:
          type: string
      - name: to_date__month
        required: false
        in: query
        description: to_date__month
        schema:
          type: string
      - name: to_date__month__contained_by
        required: false
        in: query
        description: to_date__month__contained_by
        schema:
          type: string
      - name: to_date__month__contains
        required: false
        in: query
        description: to_date__month__contains
        schema:
          type: string
      - name: to_date__month__endswith
        required: false
        in: query
        description: to_date__month__endswith
        schema:
          type: string
      - name: to_date__month__gt
        required: false
        in: query
        description: to_date__month__gt
        schema:
          type: string
      - name: to_date__month__gte
        required: false
        in: query
        description: to_date__month__gte
        schema:
          type: string
      - name: to_date__month__icontains
        required: false
        in: query
        description: to_date__month__icontains
        schema:
          type: string
      - name: to_date__month__iendswith
        required: false
        in: query
        description: to_date__month__iendswith
        schema:
          type: string
      - name: to_date__month__iexact
        required: false
        in: query
        description: to_date__month__iexact
        schema:
          type: string
      - name: to_date__month__in
        required: false
        in: query
        description: to_date__month__in
        schema:
          type: string
      - name: to_date__month__iregex
        required: false
        in: query
        description: to_date__month__iregex
        schema:
          type: string
      - name: to_date__month__isnull
        required: false
        in: query
        description: to_date__month__isnull
        schema:
          type: string
      - name: to_date__month__istartswith
        required: false
        in: query
        description: to_date__month__istartswith
        schema:
          type: string
      - name: to_date__month__lt
        required: false
        in: query
        description: to_date__month__lt
        schema:
          type: string
      - name: to_date__month__lte
        required: false
        in: query
        description: to_date__month__lte
        schema:
          type: string
      - name: to_date__month__range
        required: false
        in: query
        description: to_date__month__range
        schema:
          type: string
      - name: to_date__month__regex
        required: false
        in: query
        description: to_date__month__regex
        schema:
          type: string
      - name: to_date__month__startswith
        required: false
        in: query
        description: to_date__month__startswith
        schema:
          type: string
      - name: to_date__quarter
        required: false
        in: query
        description: to_date__quarter
        schema:
          type: string
      - name: to_date__quarter__contained_by
        required: false
        in: query
        description: to_date__quarter__contained_by
        schema:
          type: string
      - name: to_date__quarter__contains
        required: false
        in: query
        description: to_date__quarter__contains
        schema:
          type: string
      - name: to_date__quarter__endswith
        required: false
        in: query
        description: to_date__quarter__endswith
        schema:
          type: string
      - name: to_date__quarter__gt
        required: false
        in: query
        description: to_date__quarter__gt
        schema:
          type: string
      - name: to_date__quarter__gte
        required: false
        in: query
        description: to_date__quarter__gte
        schema:
          type: string
      - name: to_date__quarter__icontains
        required: false
        in: query
        description: to_date__quarter__icontains
        schema:
          type: string
      - name: to_date__quarter__iendswith
        required: false
        in: query
        description: to_date__quarter__iendswith
        schema:
          type: string
      - name: to_date__quarter__iexact
        required: false
        in: query
        description: to_date__quarter__iexact
        schema:
          type: string
      - name: to_date__quarter__in
        required: false
        in: query
        description: to_date__quarter__in
        schema:
          type: string
      - name: to_date__quarter__iregex
        required: false
        in: query
        description: to_date__quarter__iregex
        schema:
          type: string
      - name: to_date__quarter__isnull
        required: false
        in: query
        description: to_date__quarter__isnull
        schema:
          type: string
      - name: to_date__quarter__istartswith
        required: false
        in: query
        description: to_date__quarter__istartswith
        schema:
          type: string
      - name: to_date__quarter__lt
        required: false
        in: query
        description: to_date__quarter__lt
        schema:
          type: string
      - name: to_date__quarter__lte
        required: false
        in: query
        description: to_date__quarter__lte
        schema:
          type: string
      - name: to_date__quarter__range
        required: false
        in: query
        description: to_date__quarter__range
        schema:
          type: string
      - name: to_date__quarter__regex
        required: false
        in: query
        description: to_date__quarter__regex
        schema:
          type: string
      - name: to_date__quarter__startswith
        required: false
        in: query
        description: to_date__quarter__startswith
        schema:
          type: string
      - name: to_date__range
        required: false
        in: query
        description: to_date__range
        schema:
          type: string
      - name: to_date__regex
        required: false
        in: query
        description: to_date__regex
        schema:
          type: string
      - name: to_date__startswith
        required: false
        in: query
        description: to_date__startswith
        schema:
          type: string
      - name: to_date__week
        required: false
        in: query
        description: to_date__week
        schema:
          type: string
      - name: to_date__week__contained_by
        required: false
        in: query
        description: to_date__week__contained_by
        schema:
          type: string
      - name: to_date__week__contains
        required: false
        in: query
        description: to_date__week__contains
        schema:
          type: string
      - name: to_date__week__endswith
        required: false
        in: query
        description: to_date__week__endswith
        schema:
          type: string
      - name: to_date__week__gt
        required: false
        in: query
        description: to_date__week__gt
        schema:
          type: string
      - name: to_date__week__gte
        required: false
        in: query
        description: to_date__week__gte
        schema:
          type: string
      - name: to_date__week__icontains
        required: false
        in: query
        description: to_date__week__icontains
        schema:
          type: string
      - name: to_date__week__iendswith
        required: false
        in: query
        description: to_date__week__iendswith
        schema:
          type: string
      - name: to_date__week__iexact
        required: false
        in: query
        description: to_date__week__iexact
        schema:
          type: string
      - name: to_date__week__in
        required: false
        in: query
        description: to_date__week__in
        schema:
          type: string
      - name: to_date__week__iregex
        required: false
        in: query
        description: to_date__week__iregex
        schema:
          type: string
      - name: to_date__week__isnull
        required: false
        in: query
        description: to_date__week__isnull
        schema:
          type: string
      - name: to_date__week__istartswith
        required: false
        in: query
        description: to_date__week__istartswith
        schema:
          type: string
      - name: to_date__week__lt
        required: false
        in: query
        description: to_date__week__lt
        schema:
          type: string
      - name: to_date__week__lte
        required: false
        in: query
        description: to_date__week__lte
        schema:
          type: string
      - name: to_date__week__range
        required: false
        in: query
        description: to_date__week__range
        schema:
          type: string
      - name: to_date__week__regex
        required: false
        in: query
        description: to_date__week__regex
        schema:
          type: string
      - name: to_date__week__startswith
        required: false
        in: query
        description: to_date__week__startswith
        schema:
          type: string
      - name: to_date__week_day
        required: false
        in: query
        description: to_date__week_day
        schema:
          type: string
      - name: to_date__week_day__contained_by
        required: false
        in: query
        description: to_date__week_day__contained_by
        schema:
          type: string
      - name: to_date__week_day__contains
        required: false
        in: query
        description: to_date__week_day__contains
        schema:
          type: string
      - name: to_date__week_day__endswith
        required: false
        in: query
        description: to_date__week_day__endswith
        schema:
          type: string
      - name: to_date__week_day__gt
        required: false
        in: query
        description: to_date__week_day__gt
        schema:
          type: string
      - name: to_date__week_day__gte
        required: false
        in: query
        description: to_date__week_day__gte
        schema:
          type: string
      - name: to_date__week_day__icontains
        required: false
        in: query
        description: to_date__week_day__icontains
        schema:
          type: string
      - name: to_date__week_day__iendswith
        required: false
        in: query
        description: to_date__week_day__iendswith
        schema:
          type: string
      - name: to_date__week_day__iexact
        required: false
        in: query
        description: to_date__week_day__iexact
        schema:
          type: string
      - name: to_date__week_day__in
        required: false
        in: query
        description: to_date__week_day__in
        schema:
          type: string
      - name: to_date__week_day__iregex
        required: false
        in: query
        description: to_date__week_day__iregex
        schema:
          type: string
      - name: to_date__week_day__isnull
        required: false
        in: query
        description: to_date__week_day__isnull
        schema:
          type: string
      - name: to_date__week_day__istartswith
        required: false
        in: query
        description: to_date__week_day__istartswith
        schema:
          type: string
      - name: to_date__week_day__lt
        required: false
        in: query
        description: to_date__week_day__lt
        schema:
          type: string
      - name: to_date__week_day__lte
        required: false
        in: query
        description: to_date__week_day__lte
        schema:
          type: string
      - name: to_date__week_day__range
        required: false
        in: query
        description: to_date__week_day__range
        schema:
          type: string
      - name: to_date__week_day__regex
        required: false
        in: query
        description: to_date__week_day__regex
        schema:
          type: string
      - name: to_date__week_day__startswith
        required: false
        in: query
        description: to_date__week_day__startswith
        schema:
          type: string
      - name: to_date__year
        required: false
        in: query
        description: to_date__year
        schema:
          type: string
      - name: to_date__year__contained_by
        required: false
        in: query
        description: to_date__year__contained_by
        schema:
          type: string
      - name: to_date__year__contains
        required: false
        in: query
        description: to_date__year__contains
        schema:
          type: string
      - name: to_date__year__endswith
        required: false
        in: query
        description: to_date__year__endswith
        schema:
          type: string
      - name: to_date__year__gt
        required: false
        in: query
        description: to_date__year__gt
        schema:
          type: string
      - name: to_date__year__gte
        required: false
        in: query
        description: to_date__year__gte
        schema:
          type: string
      - name: to_date__year__icontains
        required: false
        in: query
        description: to_date__year__icontains
        schema:
          type: string
      - name: to_date__year__iendswith
        required: false
        in: query
        description: to_date__year__iendswith
        schema:
          type: string
      - name: to_date__year__iexact
        required: false
        in: query
        description: to_date__year__iexact
        schema:
          type: string
      - name: to_date__year__in
        required: false
        in: query
        description: to_date__year__in
        schema:
          type: string
      - name: to_date__year__iregex
        required: false
        in: query
        description: to_date__year__iregex
        schema:
          type: string
      - name: to_date__year__isnull
        required: false
        in: query
        description: to_date__year__isnull
        schema:
          type: string
      - name: to_date__year__istartswith
        required: false
        in: query
        description: to_date__year__istartswith
        schema:
          type: string
      - name: to_date__year__lt
        required: false
        in: query
        description: to_date__year__lt
        schema:
          type: string
      - name: to_date__year__lte
        required: false
        in: query
        description: to_date__year__lte
        schema:
          type: string
      - name: to_date__year__range
        required: false
        in: query
        description: to_date__year__range
        schema:
          type: string
      - name: to_date__year__regex
        required: false
        in: query
        description: to_date__year__regex
        schema:
          type: string
      - name: to_date__year__startswith
        required: false
        in: query
        description: to_date__year__startswith
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeaveList'
          description: ''
    post:
      operationId: leave_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Leave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Leave'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/leave/{id}/:
    get:
      operationId: leave_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this leave.
        required: true
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
    put:
      operationId: leave_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this leave.
        required: true
      tags:
      - leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Leave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Leave'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
    patch:
      operationId: leave_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this leave.
        required: true
      tags:
      - leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeave'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
    delete:
      operationId: leave_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this leave.
        required: true
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/leave/{id}/cancel/:
    post:
      operationId: leave_cancel_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this leave.
        required: true
      tags:
      - leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Leave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Leave'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/leave/get-leaves-to-approve/:
    get:
      operationId: leave_get_leaves_to_approve_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/leave/leave-duration/:
    get:
      operationId: leave_leave_duration_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/leave/leave-status/:
    get:
      operationId: leave_leave_status_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/leave/leave-types/:
    get:
      operationId: leave_leave_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - leave
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leave'
          description: ''
  /api/monthly-salaries/:
    get:
      operationId: monthly_salaries_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - monthly-salaries
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffMonthlySalaryList'
          description: ''
    post:
      operationId: monthly_salaries_create
      tags:
      - monthly-salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
  /api/monthly-salaries/{id}/:
    get:
      operationId: monthly_salaries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff monthly salary.
        required: true
      tags:
      - monthly-salaries
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
    put:
      operationId: monthly_salaries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff monthly salary.
        required: true
      tags:
      - monthly-salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
    patch:
      operationId: monthly_salaries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff monthly salary.
        required: true
      tags:
      - monthly-salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffMonthlySalary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffMonthlySalary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffMonthlySalary'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
    delete:
      operationId: monthly_salaries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff monthly salary.
        required: true
      tags:
      - monthly-salaries
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/monthly-salaries/{id}/payslip/:
    get:
      operationId: monthly_salaries_payslip_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff monthly salary.
        required: true
      tags:
      - monthly-salaries
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
  /api/monthly-salaries/generate/:
    post:
      operationId: monthly_salaries_generate_create
      tags:
      - monthly-salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffMonthlySalary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMonthlySalary'
          description: ''
  /api/mqtt-logs/:
    get:
      operationId: mqtt_logs_retrieve
      tags:
      - mqtt-logs
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/notifications/:
    get:
      operationId: notifications_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: meta_data
        required: false
        in: query
        description: meta_data
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: notification_sub_type
        required: false
        in: query
        description: notification_sub_type
        schema:
          type: string
          enum:
          - Create
          - Update
          - Delete
      - name: notification_type
        required: false
        in: query
        description: notification_type
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
    post:
      operationId: notifications_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/notification-sub-types/:
    get:
      operationId: notifications_notification_sub_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/notification-types/:
    get:
      operationId: notifications_notification_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/organisations/:
    get:
      operationId: organisations_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: domain
        required: false
        in: query
        description: domain
        schema:
          type: string
      - name: email__icontains
        required: false
        in: query
        description: email__icontains
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: organisation_slug
        required: false
        in: query
        description: organisation_slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organisations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationCreateList'
          description: ''
    post:
      operationId: organisations_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCreate'
          description: ''
  /api/organisations/{id}/:
    get:
      operationId: organisations_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation.
        required: true
      tags:
      - organisations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCreate'
          description: ''
    put:
      operationId: organisations_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation.
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCreate'
          description: ''
    delete:
      operationId: organisations_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation.
        required: true
      tags:
      - organisations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/organisations/validate-email/:
    post:
      operationId: organisations_validate_email_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateEmail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateEmail'
          description: ''
  /api/period/:
    get:
      operationId: period_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: day
        required: false
        in: query
        description: day
        schema:
          type: string
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: period_number
        required: false
        in: query
        description: period_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: section_standard_branch
        required: false
        in: query
        description: section_standard_branch
        schema:
          type: string
      - name: teacher
        required: false
        in: query
        description: teacher
        schema:
          type: string
      tags:
      - period
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPeriodList'
          description: ''
    post:
      operationId: period_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - period
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /api/period-schedule/:
    get:
      operationId: period_schedule_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year_id
        required: false
        in: query
        description: academic_year_id
        schema:
          type: string
      - name: branch_id
        required: false
        in: query
        description: branch_id
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: period
        required: false
        in: query
        description: period
        schema:
          type: string
      - name: schedule_percent
        required: false
        in: query
        description: schedule_percent
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: syllabus
        required: false
        in: query
        description: syllabus
        schema:
          type: string
      tags:
      - period-schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPeriodScheduleList'
          description: ''
    post:
      operationId: period_schedule_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - period-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodSchedule'
          description: ''
  /api/period-schedule/{id}/:
    get:
      operationId: period_schedule_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period schedule.
        required: true
      tags:
      - period-schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodSchedule'
          description: ''
    put:
      operationId: period_schedule_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period schedule.
        required: true
      tags:
      - period-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PeriodSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodSchedule'
          description: ''
    patch:
      operationId: period_schedule_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period schedule.
        required: true
      tags:
      - period-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPeriodSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPeriodSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPeriodSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodSchedule'
          description: ''
    delete:
      operationId: period_schedule_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period schedule.
        required: true
      tags:
      - period-schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/period/{id}/:
    get:
      operationId: period_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period.
        required: true
      tags:
      - period
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    put:
      operationId: period_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period.
        required: true
      tags:
      - period
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    patch:
      operationId: period_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period.
        required: true
      tags:
      - period
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPeriod'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
    delete:
      operationId: period_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this period.
        required: true
      tags:
      - period
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/period/teacher-timetable/:
    get:
      operationId: period_teacher_timetable_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - period
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /api/permissions/:
    get:
      operationId: permissions_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - permissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: permissions_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - permissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/permissions/{id}/:
    get:
      operationId: permissions_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - permissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: permissions_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - permissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: permissions_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - permissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/place-types/:
    get:
      operationId: place_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - place-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaceTypeList'
          description: ''
    post:
      operationId: place_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - place-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaceType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceType'
          description: ''
  /api/place-types/{id}/:
    get:
      operationId: place_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place type.
        required: true
      tags:
      - place-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceType'
          description: ''
    put:
      operationId: place_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place type.
        required: true
      tags:
      - place-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaceType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceType'
          description: ''
    patch:
      operationId: place_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place type.
        required: true
      tags:
      - place-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlaceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlaceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlaceType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceType'
          description: ''
    delete:
      operationId: place_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place type.
        required: true
      tags:
      - place-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/places/:
    get:
      operationId: places_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: place_type
        required: false
        in: query
        description: place_type
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - places
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaceList'
          description: ''
    post:
      operationId: places_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - places
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Place'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
  /api/places/{id}/:
    get:
      operationId: places_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - places
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    put:
      operationId: places_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - places
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Place'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    patch:
      operationId: places_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - places
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    delete:
      operationId: places_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - places
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/query/:
    get:
      operationId: query_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: assigned_to
        required: false
        in: query
        description: assigned_to
        schema:
          type: string
      - name: comment
        required: false
        in: query
        description: comment
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - Low
          - Medium
          - High
          - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Open
          - In Progress
          - Resolved
          - Closed
      - name: subject
        required: false
        in: query
        description: subject
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - query
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryList'
          description: ''
    post:
      operationId: query_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Query'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
  /api/query/{id}/:
    get:
      operationId: query_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - query
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    put:
      operationId: query_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Query'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    patch:
      operationId: query_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    delete:
      operationId: query_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - query
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/query/priority-choices/:
    get:
      operationId: query_priority_choices_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - query
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
  /api/query/status-choices/:
    get:
      operationId: query_status_choices_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - query
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
  /api/question-options/:
    get:
      operationId: question_options_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_correct
        required: false
        in: query
        description: is_correct
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: question
        required: false
        in: query
        description: question
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - question-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionOptionList'
          description: ''
    post:
      operationId: question_options_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - question-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
  /api/question-options/{id}/:
    get:
      operationId: question_options_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      tags:
      - question-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    put:
      operationId: question_options_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      tags:
      - question-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    patch:
      operationId: question_options_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      tags:
      - question-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    delete:
      operationId: question_options_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      tags:
      - question-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/questions/:
    get:
      operationId: questions_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: exam
        required: false
        in: query
        description: exam
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: marks
        required: false
        in: query
        description: marks
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: negative_marks
        required: false
        in: query
        description: negative_marks
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: question
        required: false
        in: query
        description: question
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
    post:
      operationId: questions_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/questions/{id}/:
    get:
      operationId: questions_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: questions_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: questions_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: questions_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/quiz-options/:
    get:
      operationId: quiz_options_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_correct
        required: false
        in: query
        description: is_correct
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: question
        required: false
        in: query
        description: question
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - quiz-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuizOptionList'
          description: ''
    post:
      operationId: quiz_options_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - quiz-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuizOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuizOption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizOption'
          description: ''
  /api/quiz-options/{id}/:
    get:
      operationId: quiz_options_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz option.
        required: true
      tags:
      - quiz-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizOption'
          description: ''
    put:
      operationId: quiz_options_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz option.
        required: true
      tags:
      - quiz-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuizOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuizOption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizOption'
          description: ''
    patch:
      operationId: quiz_options_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz option.
        required: true
      tags:
      - quiz-options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuizOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuizOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuizOption'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizOption'
          description: ''
    delete:
      operationId: quiz_options_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz option.
        required: true
      tags:
      - quiz-options
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/quiz-questions/:
    get:
      operationId: quiz_questions_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: marks
        required: false
        in: query
        description: marks
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: question
        required: false
        in: query
        description: question
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      tags:
      - quiz-questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuizQuestionList'
          description: ''
    post:
      operationId: quiz_questions_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - quiz-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizQuestion'
          description: ''
  /api/quiz-questions/{id}/:
    get:
      operationId: quiz_questions_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz question.
        required: true
      tags:
      - quiz-questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizQuestion'
          description: ''
    put:
      operationId: quiz_questions_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz question.
        required: true
      tags:
      - quiz-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuizQuestion'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizQuestion'
          description: ''
    patch:
      operationId: quiz_questions_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz question.
        required: true
      tags:
      - quiz-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuizQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuizQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuizQuestion'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizQuestion'
          description: ''
    delete:
      operationId: quiz_questions_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quiz question.
        required: true
      tags:
      - quiz-questions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/releaving-document-categories/:
    get:
      operationId: releaving_document_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - releaving-document-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReleavingDocumentCategoryList'
          description: ''
    post:
      operationId: releaving_document_categories_create
      tags:
      - releaving-document-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentCategory'
          description: ''
  /api/releaving-document-categories/{id}/:
    get:
      operationId: releaving_document_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document category.
        required: true
      tags:
      - releaving-document-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentCategory'
          description: ''
    put:
      operationId: releaving_document_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document category.
        required: true
      tags:
      - releaving-document-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentCategory'
          description: ''
    patch:
      operationId: releaving_document_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document category.
        required: true
      tags:
      - releaving-document-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentCategory'
          description: ''
    delete:
      operationId: releaving_document_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document category.
        required: true
      tags:
      - releaving-document-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/releaving-document-status/:
    get:
      operationId: releaving_document_status_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - releaving-document-status
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReleavingDocumentStatusList'
          description: ''
    post:
      operationId: releaving_document_status_create
      tags:
      - releaving-document-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentStatus'
          description: ''
  /api/releaving-document-status/{id}/:
    get:
      operationId: releaving_document_status_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document status.
        required: true
      tags:
      - releaving-document-status
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentStatus'
          description: ''
    put:
      operationId: releaving_document_status_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document status.
        required: true
      tags:
      - releaving-document-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleavingDocumentStatus'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentStatus'
          description: ''
    patch:
      operationId: releaving_document_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document status.
        required: true
      tags:
      - releaving-document-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReleavingDocumentStatus'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleavingDocumentStatus'
          description: ''
    delete:
      operationId: releaving_document_status_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this releaving document status.
        required: true
      tags:
      - releaving-document-status
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/rooms/:
    get:
      operationId: rooms_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: capacity
        required: false
        in: query
        description: capacity
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: floor
        required: false
        in: query
        description: floor
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: room_no
        required: false
        in: query
        description: room_no
        schema:
          type: string
      - name: room_type
        required: false
        in: query
        description: room_type
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomList'
          description: ''
    post:
      operationId: rooms_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/rooms-types/:
    get:
      operationId: rooms_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - rooms-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomTypeList'
          description: ''
    post:
      operationId: rooms_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - rooms-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoomType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoomType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
          description: ''
  /api/rooms-types/{id}/:
    get:
      operationId: rooms_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room type.
        required: true
      tags:
      - rooms-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
          description: ''
    put:
      operationId: rooms_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room type.
        required: true
      tags:
      - rooms-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoomType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoomType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
          description: ''
    patch:
      operationId: rooms_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room type.
        required: true
      tags:
      - rooms-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoomType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoomType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoomType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
          description: ''
    delete:
      operationId: rooms_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room type.
        required: true
      tags:
      - rooms-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/rooms/{id}/:
    get:
      operationId: rooms_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: rooms_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: rooms_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - rooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: rooms_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - rooms
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/salary-categories/:
    get:
      operationId: salary_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - salary-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalaryCategoryList'
          description: ''
    post:
      operationId: salary_categories_create
      tags:
      - salary-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryCategory'
          description: ''
  /api/salary-categories/{id}/:
    get:
      operationId: salary_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this salary category.
        required: true
      tags:
      - salary-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryCategory'
          description: ''
    put:
      operationId: salary_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this salary category.
        required: true
      tags:
      - salary-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalaryCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryCategory'
          description: ''
    patch:
      operationId: salary_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this salary category.
        required: true
      tags:
      - salary-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSalaryCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSalaryCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSalaryCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryCategory'
          description: ''
    delete:
      operationId: salary_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this salary category.
        required: true
      tags:
      - salary-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/salary-templates/:
    get:
      operationId: salary_templates_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - salary-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffSalaryTemplateList'
          description: ''
    post:
      operationId: salary_templates_create
      tags:
      - salary-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSalaryTemplate'
          description: ''
  /api/salary-templates/{id}/:
    get:
      operationId: salary_templates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff salary template.
        required: true
      tags:
      - salary-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSalaryTemplate'
          description: ''
    put:
      operationId: salary_templates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff salary template.
        required: true
      tags:
      - salary-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffSalaryTemplate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSalaryTemplate'
          description: ''
    patch:
      operationId: salary_templates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff salary template.
        required: true
      tags:
      - salary-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffSalaryTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffSalaryTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffSalaryTemplate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSalaryTemplate'
          description: ''
    delete:
      operationId: salary_templates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff salary template.
        required: true
      tags:
      - salary-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/salary-templates/grouped/:
    get:
      operationId: salary_templates_grouped_retrieve
      tags:
      - salary-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSalaryTemplate'
          description: ''
  /api/schedules/:
    get:
      operationId: schedules_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: end_time
        required: false
        in: query
        description: end_time
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: start_time
        required: false
        in: query
        description: start_time
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleList'
          description: ''
    post:
      operationId: schedules_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/schedules/{id}/:
    get:
      operationId: schedules_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: schedules_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: schedules_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: schedules_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/secrets/:
    get:
      operationId: secrets_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - secrets
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSecretList'
          description: ''
    post:
      operationId: secrets_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - secrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Secret'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Secret'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: ''
  /api/secrets/{id}/:
    get:
      operationId: secrets_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this secret.
        required: true
      tags:
      - secrets
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: ''
    put:
      operationId: secrets_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this secret.
        required: true
      tags:
      - secrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Secret'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Secret'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: ''
    delete:
      operationId: secrets_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this secret.
        required: true
      tags:
      - secrets
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/sections/:
    get:
      operationId: sections_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: head_teacher
        required: false
        in: query
        description: head_teacher
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      tags:
      - sections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSectionList'
          description: ''
    post:
      operationId: sections_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Section'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /api/sections/{id}/:
    get:
      operationId: sections_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    put:
      operationId: sections_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Section'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    patch:
      operationId: sections_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    delete:
      operationId: sections_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/sections/{id}/add-students/:
    post:
      operationId: sections_add_students_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStudentToSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddStudentToSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddStudentToSection'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddStudentToSection'
          description: ''
  /api/sections/{id}/remove-head-teacher/:
    delete:
      operationId: sections_remove_head_teacher_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/sections/bulk-update-sections/:
    post:
      operationId: sections_bulk_update_sections_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Section'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /api/standards/:
    get:
      operationId: standards_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: stationary
        required: false
        in: query
        description: stationary
        schema:
          type: string
      tags:
      - standards
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStandardList'
          description: ''
    post:
      operationId: standards_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - standards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Standard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Standard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Standard'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standard'
          description: ''
  /api/standards/{id}/:
    get:
      operationId: standards_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standard.
        required: true
      tags:
      - standards
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standard'
          description: ''
    put:
      operationId: standards_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standard.
        required: true
      tags:
      - standards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Standard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Standard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Standard'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standard'
          description: ''
    patch:
      operationId: standards_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standard.
        required: true
      tags:
      - standards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStandard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStandard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStandard'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standard'
          description: ''
    delete:
      operationId: standards_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standard.
        required: true
      tags:
      - standards
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/standards/{id}/add-students/:
    post:
      operationId: standards_add_students_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standard.
        required: true
      tags:
      - standards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentListID'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentListID'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentListID'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentListID'
          description: ''
  /api/stationary/:
    get:
      operationId: stationary_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: inventory_tracking
        required: false
        in: query
        description: inventory_tracking
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: quantity
        required: false
        in: query
        description: quantity
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: stationary_type
        required: false
        in: query
        description: stationary_type
        schema:
          type: string
      tags:
      - stationary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStationaryList'
          description: ''
    post:
      operationId: stationary_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - stationary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stationary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stationary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stationary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stationary'
          description: ''
  /api/stationary-fee/:
    get:
      operationId: stationary_fee_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      tags:
      - stationary-fee
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStationaryFeeList'
          description: ''
    post:
      operationId: stationary_fee_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - stationary-fee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationaryFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationaryFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationaryFee'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryFee'
          description: ''
  /api/stationary-fee/{id}/:
    get:
      operationId: stationary_fee_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary fee.
        required: true
      tags:
      - stationary-fee
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryFee'
          description: ''
    put:
      operationId: stationary_fee_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary fee.
        required: true
      tags:
      - stationary-fee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationaryFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationaryFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationaryFee'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryFee'
          description: ''
    patch:
      operationId: stationary_fee_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary fee.
        required: true
      tags:
      - stationary-fee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStationaryFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStationaryFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStationaryFee'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryFee'
          description: ''
    delete:
      operationId: stationary_fee_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary fee.
        required: true
      tags:
      - stationary-fee
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/stationary-types/:
    get:
      operationId: stationary_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - stationary-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStationaryTypeList'
          description: ''
    post:
      operationId: stationary_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - stationary-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationaryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationaryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationaryType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryType'
          description: ''
  /api/stationary-types/{id}/:
    get:
      operationId: stationary_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary type.
        required: true
      tags:
      - stationary-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryType'
          description: ''
    put:
      operationId: stationary_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary type.
        required: true
      tags:
      - stationary-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationaryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationaryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationaryType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryType'
          description: ''
    patch:
      operationId: stationary_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary type.
        required: true
      tags:
      - stationary-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStationaryType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStationaryType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStationaryType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationaryType'
          description: ''
    delete:
      operationId: stationary_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary type.
        required: true
      tags:
      - stationary-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/stationary/{id}/:
    get:
      operationId: stationary_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary.
        required: true
      tags:
      - stationary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stationary'
          description: ''
    put:
      operationId: stationary_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary.
        required: true
      tags:
      - stationary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stationary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stationary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stationary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stationary'
          description: ''
    patch:
      operationId: stationary_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary.
        required: true
      tags:
      - stationary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStationary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStationary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStationary'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stationary'
          description: ''
    delete:
      operationId: stationary_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stationary.
        required: true
      tags:
      - stationary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/student-details/:
    get:
      operationId: student_details_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: bed
        required: false
        in: query
        description: bed
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: given_stationary
        required: false
        in: query
        description: given_stationary
        schema:
          type: string
      - name: given_stationary_count
        required: false
        in: query
        description: given_stationary_count
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_class_representative
        required: false
        in: query
        description: is_class_representative
        schema:
          type: string
      - name: is_stationary_given
        required: false
        in: query
        description: is_stationary_given
        schema:
          type: string
      - name: is_transport_required
        required: false
        in: query
        description: is_transport_required
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: roll_number
        required: false
        in: query
        description: roll_number
        schema:
          type: string
      - name: roll_number__contains
        required: false
        in: query
        description: roll_number__contains
        schema:
          type: string
      - name: roll_number__endswith
        required: false
        in: query
        description: roll_number__endswith
        schema:
          type: string
      - name: roll_number__gt
        required: false
        in: query
        description: roll_number__gt
        schema:
          type: string
      - name: roll_number__gte
        required: false
        in: query
        description: roll_number__gte
        schema:
          type: string
      - name: roll_number__icontains
        required: false
        in: query
        description: roll_number__icontains
        schema:
          type: string
      - name: roll_number__iendswith
        required: false
        in: query
        description: roll_number__iendswith
        schema:
          type: string
      - name: roll_number__iexact
        required: false
        in: query
        description: roll_number__iexact
        schema:
          type: string
      - name: roll_number__in
        required: false
        in: query
        description: roll_number__in
        schema:
          type: string
      - name: roll_number__iregex
        required: false
        in: query
        description: roll_number__iregex
        schema:
          type: string
      - name: roll_number__isnull
        required: false
        in: query
        description: roll_number__isnull
        schema:
          type: string
      - name: roll_number__istartswith
        required: false
        in: query
        description: roll_number__istartswith
        schema:
          type: string
      - name: roll_number__lt
        required: false
        in: query
        description: roll_number__lt
        schema:
          type: string
      - name: roll_number__lte
        required: false
        in: query
        description: roll_number__lte
        schema:
          type: string
      - name: roll_number__range
        required: false
        in: query
        description: roll_number__range
        schema:
          type: string
      - name: roll_number__regex
        required: false
        in: query
        description: roll_number__regex
        schema:
          type: string
      - name: roll_number__startswith
        required: false
        in: query
        description: roll_number__startswith
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: stationary_fee_amount_paid
        required: false
        in: query
        description: stationary_fee_amount_paid
        schema:
          type: string
      - name: stationary_fee_paid
        required: false
        in: query
        description: stationary_fee_paid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - student-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDetailsList'
          description: ''
    post:
      operationId: student_details_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - student-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
  /api/student-details-stationary-payments/:
    get:
      operationId: student_details_stationary_payments_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - student-details-stationary-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDetailsList'
          description: ''
    post:
      operationId: student_details_stationary_payments_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - student-details-stationary-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
  /api/student-details-stationary-payments/{id}/:
    get:
      operationId: student_details_stationary_payments_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    put:
      operationId: student_details_stationary_payments_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    patch:
      operationId: student_details_stationary_payments_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    delete:
      operationId: student_details_stationary_payments_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/student-details-stationary-payments/{id}/add-stationary-payment/:
    post:
      operationId: student_details_stationary_payments_add_stationary_payment_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
  /api/student-details-stationary-payments/{id}/stationary-payments/:
    get:
      operationId: student_details_stationary_payments_stationary_payments_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details-stationary-payments
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
  /api/student-details/{id}/:
    get:
      operationId: student_details_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    put:
      operationId: student_details_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    patch:
      operationId: student_details_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetails'
          description: ''
    delete:
      operationId: student_details_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student details.
        required: true
      tags:
      - student-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/student-exam-marks/:
    get:
      operationId: student_exam_marks_list
      parameters:
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: exam
        required: false
        in: query
        description: exam
        schema:
          type: string
      - name: exam_schedule__department
        required: false
        in: query
        description: exam_schedule__department
        schema:
          type: string
      - name: exam_schedule__exam
        required: false
        in: query
        description: exam_schedule__exam
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: student__section
        required: false
        in: query
        description: student__section
        schema:
          type: string
      - name: student__standard
        required: false
        in: query
        description: student__standard
        schema:
          type: string
      tags:
      - student-exam-marks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentExamMarkList'
          description: ''
    post:
      operationId: student_exam_marks_create
      tags:
      - student-exam-marks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
  /api/student-exam-marks/{id}/:
    get:
      operationId: student_exam_marks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student exam mark.
        required: true
      tags:
      - student-exam-marks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
    put:
      operationId: student_exam_marks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student exam mark.
        required: true
      tags:
      - student-exam-marks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
    patch:
      operationId: student_exam_marks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student exam mark.
        required: true
      tags:
      - student-exam-marks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentExamMark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentExamMark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentExamMark'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
    delete:
      operationId: student_exam_marks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student exam mark.
        required: true
      tags:
      - student-exam-marks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/student-exam-marks/exam-analytics/:
    get:
      operationId: student_exam_marks_exam_analytics_retrieve
      tags:
      - student-exam-marks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
  /api/student-exam-marks/student-results/:
    get:
      operationId: student_exam_marks_student_results_retrieve
      tags:
      - student-exam-marks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
  /api/student-exam-marks/submit-marks/:
    post:
      operationId: student_exam_marks_submit_marks_create
      tags:
      - student-exam-marks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentExamMark'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentExamMark'
          description: ''
  /api/sub-tasks/:
    get:
      operationId: sub_tasks_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: task
        required: false
        in: query
        description: task
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      tags:
      - sub-tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubTaskList'
          description: ''
    post:
      operationId: sub_tasks_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - sub-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubTask'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
  /api/sub-tasks/{id}/:
    get:
      operationId: sub_tasks_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sub task.
        required: true
      tags:
      - sub-tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    put:
      operationId: sub_tasks_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sub task.
        required: true
      tags:
      - sub-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubTask'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    patch:
      operationId: sub_tasks_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sub task.
        required: true
      tags:
      - sub-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    delete:
      operationId: sub_tasks_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sub task.
        required: true
      tags:
      - sub-tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/devices/:
    get:
      operationId: superadmin_devices_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVAI_IoTDeviceList'
          description: ''
    post:
      operationId: superadmin_devices_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VAI_IoTDevice'
          description: ''
  /api/superadmin/devices/{id}/:
    get:
      operationId: superadmin_devices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this va i_ io t device.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VAI_IoTDevice'
          description: ''
    put:
      operationId: superadmin_devices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this va i_ io t device.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VAI_IoTDevice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VAI_IoTDevice'
          description: ''
    patch:
      operationId: superadmin_devices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this va i_ io t device.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVAI_IoTDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVAI_IoTDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVAI_IoTDevice'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VAI_IoTDevice'
          description: ''
    delete:
      operationId: superadmin_devices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this va i_ io t device.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/emi-plan/:
    get:
      operationId: superadmin_emi_plan_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEMIPlanList'
          description: ''
    post:
      operationId: superadmin_emi_plan_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMIPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EMIPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EMIPlan'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMIPlan'
          description: ''
  /api/superadmin/emi-plan/{id}/:
    get:
      operationId: superadmin_emi_plan_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this emi plan.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMIPlan'
          description: ''
    put:
      operationId: superadmin_emi_plan_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this emi plan.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMIPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EMIPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EMIPlan'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMIPlan'
          description: ''
    patch:
      operationId: superadmin_emi_plan_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this emi plan.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEMIPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEMIPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEMIPlan'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMIPlan'
          description: ''
    delete:
      operationId: superadmin_emi_plan_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this emi plan.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/features/:
    get:
      operationId: superadmin_features_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationFeatureList'
          description: ''
    post:
      operationId: superadmin_features_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationFeature'
          description: ''
  /api/superadmin/features/{id}/:
    get:
      operationId: superadmin_features_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation feature.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationFeature'
          description: ''
    put:
      operationId: superadmin_features_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation feature.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationFeature'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationFeature'
          description: ''
    patch:
      operationId: superadmin_features_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation feature.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationFeature'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationFeature'
          description: ''
    delete:
      operationId: superadmin_features_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation feature.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/org-reports/active/:
    get:
      operationId: superadmin_org_reports_active_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/org-reports/consolidated/:
    get:
      operationId: superadmin_org_reports_consolidated_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/org-reports/counts/:
    get:
      operationId: superadmin_org_reports_counts_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/org-reports/inactive/:
    get:
      operationId: superadmin_org_reports_inactive_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/org-reports/recent/:
    get:
      operationId: superadmin_org_reports_recent_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/org-reports/status-over-time/:
    get:
      operationId: superadmin_org_reports_status_over_time_retrieve
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/superadmin/organisations/:
    get:
      operationId: superadmin_organisations_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOfficialOrganisationList'
          description: ''
    post:
      operationId: superadmin_organisations_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficialOrganisation'
          description: ''
  /api/superadmin/organisations/{id}/:
    get:
      operationId: superadmin_organisations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this official organisation.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficialOrganisation'
          description: ''
    put:
      operationId: superadmin_organisations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this official organisation.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OfficialOrganisation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficialOrganisation'
          description: ''
    patch:
      operationId: superadmin_organisations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this official organisation.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOfficialOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOfficialOrganisation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOfficialOrganisation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficialOrganisation'
          description: ''
    delete:
      operationId: superadmin_organisations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this official organisation.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/payment-schedule/:
    get:
      operationId: superadmin_payment_schedule_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationPaymentScheduleList'
          description: ''
    post:
      operationId: superadmin_payment_schedule_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPaymentSchedule'
          description: ''
  /api/superadmin/payment-schedule/{id}/:
    get:
      operationId: superadmin_payment_schedule_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation payment
          schedule.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPaymentSchedule'
          description: ''
    put:
      operationId: superadmin_payment_schedule_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation payment
          schedule.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationPaymentSchedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPaymentSchedule'
          description: ''
    patch:
      operationId: superadmin_payment_schedule_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation payment
          schedule.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPaymentSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPaymentSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPaymentSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPaymentSchedule'
          description: ''
    delete:
      operationId: superadmin_payment_schedule_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation payment
          schedule.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/superadmin/pricing/:
    get:
      operationId: superadmin_pricing_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationPricingList'
          description: ''
    post:
      operationId: superadmin_pricing_create
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPricing'
          description: ''
  /api/superadmin/pricing/{id}/:
    get:
      operationId: superadmin_pricing_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation pricing.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPricing'
          description: ''
    put:
      operationId: superadmin_pricing_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation pricing.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationPricing'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPricing'
          description: ''
    patch:
      operationId: superadmin_pricing_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation pricing.
        required: true
      tags:
      - superadmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationPricing'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationPricing'
          description: ''
    delete:
      operationId: superadmin_pricing_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organisation pricing.
        required: true
      tags:
      - superadmin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/switches/:
    get:
      operationId: switches_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - switches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSwitchList'
          description: ''
    post:
      operationId: switches_create
      tags:
      - switches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Switch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Switch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Switch'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: ''
  /api/switches/{id}/:
    get:
      operationId: switches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this switch.
        required: true
      tags:
      - switches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: ''
    put:
      operationId: switches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this switch.
        required: true
      tags:
      - switches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Switch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Switch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Switch'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: ''
    patch:
      operationId: switches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this switch.
        required: true
      tags:
      - switches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSwitch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSwitch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSwitch'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: ''
    delete:
      operationId: switches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this switch.
        required: true
      tags:
      - switches
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/syllabus/:
    get:
      operationId: syllabus_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      tags:
      - syllabus
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyllabusList'
          description: ''
    post:
      operationId: syllabus_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - syllabus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Syllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Syllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Syllabus'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
  /api/syllabus/{id}/:
    get:
      operationId: syllabus_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus.
        required: true
      tags:
      - syllabus
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
    put:
      operationId: syllabus_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus.
        required: true
      tags:
      - syllabus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Syllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Syllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Syllabus'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
    patch:
      operationId: syllabus_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus.
        required: true
      tags:
      - syllabus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
    delete:
      operationId: syllabus_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus.
        required: true
      tags:
      - syllabus
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/task-categories/:
    get:
      operationId: task_categories_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - task-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskCategoryList'
          description: ''
    post:
      operationId: task_categories_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - task-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategory'
          description: ''
  /api/task-categories/{id}/:
    get:
      operationId: task_categories_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task category.
        required: true
      tags:
      - task-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategory'
          description: ''
    put:
      operationId: task_categories_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task category.
        required: true
      tags:
      - task-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCategory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategory'
          description: ''
    patch:
      operationId: task_categories_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task category.
        required: true
      tags:
      - task-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategory'
          description: ''
    delete:
      operationId: task_categories_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task category.
        required: true
      tags:
      - task-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/task-submissions/:
    get:
      operationId: task_submissions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - task-submissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskSubmissionList'
          description: ''
    post:
      operationId: task_submissions_create
      tags:
      - task-submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubmission'
          description: ''
  /api/task-submissions/{id}/:
    get:
      operationId: task_submissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task submission.
        required: true
      tags:
      - task-submissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubmission'
          description: ''
    put:
      operationId: task_submissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task submission.
        required: true
      tags:
      - task-submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskSubmission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubmission'
          description: ''
    patch:
      operationId: task_submissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task submission.
        required: true
      tags:
      - task-submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskSubmission'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubmission'
          description: ''
    delete:
      operationId: task_submissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task submission.
        required: true
      tags:
      - task-submissions
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: category
        required: false
        in: query
        description: category
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: due_date
        required: false
        in: query
        description: due_date
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - Low
          - Medium
          - High
          - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/priority-choices/:
    get:
      operationId: tasks_priority_choices_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks_create/:
    get:
      operationId: tasks_create_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - tasks_create
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create_create
      tags:
      - tasks_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks_create/{id}/:
    get:
      operationId: tasks_create_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks_create
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_create_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_create_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_create_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks_create
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks_create/{id}/submissions/:
    get:
      operationId: tasks_create_submissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks_create
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/teacher-attendance/:
    get:
      operationId: teacher_attendance_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: attendance_date
        required: false
        in: query
        description: attendance_date
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - Present
          - Absent
          - Half Day
          - Late
          - Leave
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeacherAttendanceList'
          description: ''
    post:
      operationId: teacher_attendance_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - teacher-attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
  /api/teacher-attendance/{id}/:
    get:
      operationId: teacher_attendance_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher attendance.
        required: true
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
    put:
      operationId: teacher_attendance_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher attendance.
        required: true
      tags:
      - teacher-attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeacherAttendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
    patch:
      operationId: teacher_attendance_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher attendance.
        required: true
      tags:
      - teacher-attendance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeacherAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeacherAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeacherAttendance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
    delete:
      operationId: teacher_attendance_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher attendance.
        required: true
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/teacher-attendance/teacher-attendance-report/:
    get:
      operationId: teacher_attendance_teacher_attendance_report_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
  /api/teacher-attendance/teacher-attendance-report-branch/:
    get:
      operationId: teacher_attendance_teacher_attendance_report_branch_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
  /api/teacher-attendance/teacher-attendance-report-department/:
    get:
      operationId: teacher_attendance_teacher_attendance_report_department_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - teacher-attendance
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherAttendance'
          description: ''
  /api/topics/:
    get:
      operationId: topics_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: parent
        required: false
        in: query
        description: parent
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: syllabus
        required: false
        in: query
        description: syllabus
        schema:
          type: string
      - name: url_link
        required: false
        in: query
        description: url_link
        schema:
          type: string
      tags:
      - topics
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
          description: ''
    post:
      operationId: topics_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - topics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
  /api/topics/{id}/:
    get:
      operationId: topics_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - topics
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    put:
      operationId: topics_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - topics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    patch:
      operationId: topics_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - topics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    delete:
      operationId: topics_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - topics
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/total-fee-summary/:
    get:
      operationId: total_fee_summary_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section_id
        required: false
        in: query
        description: section_id
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - total-fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTotalFeeSummaryList'
          description: ''
    post:
      operationId: total_fee_summary_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - total-fee-summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalFeeSummary'
          description: ''
  /api/total-fee-summary/{id}/:
    get:
      operationId: total_fee_summary_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this total fee summary.
        required: true
      tags:
      - total-fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalFeeSummary'
          description: ''
    put:
      operationId: total_fee_summary_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this total fee summary.
        required: true
      tags:
      - total-fee-summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TotalFeeSummary'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalFeeSummary'
          description: ''
    delete:
      operationId: total_fee_summary_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this total fee summary.
        required: true
      tags:
      - total-fee-summary
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-drivers/:
    get:
      operationId: transport_drivers_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: experience
        required: false
        in: query
        description: experience
        schema:
          type: string
      - name: license_expiry_date
        required: false
        in: query
        description: license_expiry_date
        schema:
          type: string
      - name: license_expiry_date__contained_by
        required: false
        in: query
        description: license_expiry_date__contained_by
        schema:
          type: string
      - name: license_expiry_date__contains
        required: false
        in: query
        description: license_expiry_date__contains
        schema:
          type: string
      - name: license_expiry_date__day
        required: false
        in: query
        description: license_expiry_date__day
        schema:
          type: string
      - name: license_expiry_date__day__contained_by
        required: false
        in: query
        description: license_expiry_date__day__contained_by
        schema:
          type: string
      - name: license_expiry_date__day__contains
        required: false
        in: query
        description: license_expiry_date__day__contains
        schema:
          type: string
      - name: license_expiry_date__day__endswith
        required: false
        in: query
        description: license_expiry_date__day__endswith
        schema:
          type: string
      - name: license_expiry_date__day__gt
        required: false
        in: query
        description: license_expiry_date__day__gt
        schema:
          type: string
      - name: license_expiry_date__day__gte
        required: false
        in: query
        description: license_expiry_date__day__gte
        schema:
          type: string
      - name: license_expiry_date__day__icontains
        required: false
        in: query
        description: license_expiry_date__day__icontains
        schema:
          type: string
      - name: license_expiry_date__day__iendswith
        required: false
        in: query
        description: license_expiry_date__day__iendswith
        schema:
          type: string
      - name: license_expiry_date__day__iexact
        required: false
        in: query
        description: license_expiry_date__day__iexact
        schema:
          type: string
      - name: license_expiry_date__day__in
        required: false
        in: query
        description: license_expiry_date__day__in
        schema:
          type: string
      - name: license_expiry_date__day__iregex
        required: false
        in: query
        description: license_expiry_date__day__iregex
        schema:
          type: string
      - name: license_expiry_date__day__isnull
        required: false
        in: query
        description: license_expiry_date__day__isnull
        schema:
          type: string
      - name: license_expiry_date__day__istartswith
        required: false
        in: query
        description: license_expiry_date__day__istartswith
        schema:
          type: string
      - name: license_expiry_date__day__lt
        required: false
        in: query
        description: license_expiry_date__day__lt
        schema:
          type: string
      - name: license_expiry_date__day__lte
        required: false
        in: query
        description: license_expiry_date__day__lte
        schema:
          type: string
      - name: license_expiry_date__day__range
        required: false
        in: query
        description: license_expiry_date__day__range
        schema:
          type: string
      - name: license_expiry_date__day__regex
        required: false
        in: query
        description: license_expiry_date__day__regex
        schema:
          type: string
      - name: license_expiry_date__day__startswith
        required: false
        in: query
        description: license_expiry_date__day__startswith
        schema:
          type: string
      - name: license_expiry_date__endswith
        required: false
        in: query
        description: license_expiry_date__endswith
        schema:
          type: string
      - name: license_expiry_date__gt
        required: false
        in: query
        description: license_expiry_date__gt
        schema:
          type: string
      - name: license_expiry_date__gte
        required: false
        in: query
        description: license_expiry_date__gte
        schema:
          type: string
      - name: license_expiry_date__icontains
        required: false
        in: query
        description: license_expiry_date__icontains
        schema:
          type: string
      - name: license_expiry_date__iendswith
        required: false
        in: query
        description: license_expiry_date__iendswith
        schema:
          type: string
      - name: license_expiry_date__iexact
        required: false
        in: query
        description: license_expiry_date__iexact
        schema:
          type: string
      - name: license_expiry_date__in
        required: false
        in: query
        description: license_expiry_date__in
        schema:
          type: string
      - name: license_expiry_date__iregex
        required: false
        in: query
        description: license_expiry_date__iregex
        schema:
          type: string
      - name: license_expiry_date__isnull
        required: false
        in: query
        description: license_expiry_date__isnull
        schema:
          type: string
      - name: license_expiry_date__iso_week_day
        required: false
        in: query
        description: license_expiry_date__iso_week_day
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__contained_by
        required: false
        in: query
        description: license_expiry_date__iso_week_day__contained_by
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__contains
        required: false
        in: query
        description: license_expiry_date__iso_week_day__contains
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__endswith
        required: false
        in: query
        description: license_expiry_date__iso_week_day__endswith
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__gt
        required: false
        in: query
        description: license_expiry_date__iso_week_day__gt
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__gte
        required: false
        in: query
        description: license_expiry_date__iso_week_day__gte
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__icontains
        required: false
        in: query
        description: license_expiry_date__iso_week_day__icontains
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__iendswith
        required: false
        in: query
        description: license_expiry_date__iso_week_day__iendswith
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__iexact
        required: false
        in: query
        description: license_expiry_date__iso_week_day__iexact
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__in
        required: false
        in: query
        description: license_expiry_date__iso_week_day__in
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__iregex
        required: false
        in: query
        description: license_expiry_date__iso_week_day__iregex
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__isnull
        required: false
        in: query
        description: license_expiry_date__iso_week_day__isnull
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__istartswith
        required: false
        in: query
        description: license_expiry_date__iso_week_day__istartswith
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__lt
        required: false
        in: query
        description: license_expiry_date__iso_week_day__lt
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__lte
        required: false
        in: query
        description: license_expiry_date__iso_week_day__lte
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__range
        required: false
        in: query
        description: license_expiry_date__iso_week_day__range
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__regex
        required: false
        in: query
        description: license_expiry_date__iso_week_day__regex
        schema:
          type: string
      - name: license_expiry_date__iso_week_day__startswith
        required: false
        in: query
        description: license_expiry_date__iso_week_day__startswith
        schema:
          type: string
      - name: license_expiry_date__iso_year
        required: false
        in: query
        description: license_expiry_date__iso_year
        schema:
          type: string
      - name: license_expiry_date__iso_year__contained_by
        required: false
        in: query
        description: license_expiry_date__iso_year__contained_by
        schema:
          type: string
      - name: license_expiry_date__iso_year__contains
        required: false
        in: query
        description: license_expiry_date__iso_year__contains
        schema:
          type: string
      - name: license_expiry_date__iso_year__endswith
        required: false
        in: query
        description: license_expiry_date__iso_year__endswith
        schema:
          type: string
      - name: license_expiry_date__iso_year__gt
        required: false
        in: query
        description: license_expiry_date__iso_year__gt
        schema:
          type: string
      - name: license_expiry_date__iso_year__gte
        required: false
        in: query
        description: license_expiry_date__iso_year__gte
        schema:
          type: string
      - name: license_expiry_date__iso_year__icontains
        required: false
        in: query
        description: license_expiry_date__iso_year__icontains
        schema:
          type: string
      - name: license_expiry_date__iso_year__iendswith
        required: false
        in: query
        description: license_expiry_date__iso_year__iendswith
        schema:
          type: string
      - name: license_expiry_date__iso_year__iexact
        required: false
        in: query
        description: license_expiry_date__iso_year__iexact
        schema:
          type: string
      - name: license_expiry_date__iso_year__in
        required: false
        in: query
        description: license_expiry_date__iso_year__in
        schema:
          type: string
      - name: license_expiry_date__iso_year__iregex
        required: false
        in: query
        description: license_expiry_date__iso_year__iregex
        schema:
          type: string
      - name: license_expiry_date__iso_year__isnull
        required: false
        in: query
        description: license_expiry_date__iso_year__isnull
        schema:
          type: string
      - name: license_expiry_date__iso_year__istartswith
        required: false
        in: query
        description: license_expiry_date__iso_year__istartswith
        schema:
          type: string
      - name: license_expiry_date__iso_year__lt
        required: false
        in: query
        description: license_expiry_date__iso_year__lt
        schema:
          type: string
      - name: license_expiry_date__iso_year__lte
        required: false
        in: query
        description: license_expiry_date__iso_year__lte
        schema:
          type: string
      - name: license_expiry_date__iso_year__range
        required: false
        in: query
        description: license_expiry_date__iso_year__range
        schema:
          type: string
      - name: license_expiry_date__iso_year__regex
        required: false
        in: query
        description: license_expiry_date__iso_year__regex
        schema:
          type: string
      - name: license_expiry_date__iso_year__startswith
        required: false
        in: query
        description: license_expiry_date__iso_year__startswith
        schema:
          type: string
      - name: license_expiry_date__istartswith
        required: false
        in: query
        description: license_expiry_date__istartswith
        schema:
          type: string
      - name: license_expiry_date__lt
        required: false
        in: query
        description: license_expiry_date__lt
        schema:
          type: string
      - name: license_expiry_date__lte
        required: false
        in: query
        description: license_expiry_date__lte
        schema:
          type: string
      - name: license_expiry_date__month
        required: false
        in: query
        description: license_expiry_date__month
        schema:
          type: string
      - name: license_expiry_date__month__contained_by
        required: false
        in: query
        description: license_expiry_date__month__contained_by
        schema:
          type: string
      - name: license_expiry_date__month__contains
        required: false
        in: query
        description: license_expiry_date__month__contains
        schema:
          type: string
      - name: license_expiry_date__month__endswith
        required: false
        in: query
        description: license_expiry_date__month__endswith
        schema:
          type: string
      - name: license_expiry_date__month__gt
        required: false
        in: query
        description: license_expiry_date__month__gt
        schema:
          type: string
      - name: license_expiry_date__month__gte
        required: false
        in: query
        description: license_expiry_date__month__gte
        schema:
          type: string
      - name: license_expiry_date__month__icontains
        required: false
        in: query
        description: license_expiry_date__month__icontains
        schema:
          type: string
      - name: license_expiry_date__month__iendswith
        required: false
        in: query
        description: license_expiry_date__month__iendswith
        schema:
          type: string
      - name: license_expiry_date__month__iexact
        required: false
        in: query
        description: license_expiry_date__month__iexact
        schema:
          type: string
      - name: license_expiry_date__month__in
        required: false
        in: query
        description: license_expiry_date__month__in
        schema:
          type: string
      - name: license_expiry_date__month__iregex
        required: false
        in: query
        description: license_expiry_date__month__iregex
        schema:
          type: string
      - name: license_expiry_date__month__isnull
        required: false
        in: query
        description: license_expiry_date__month__isnull
        schema:
          type: string
      - name: license_expiry_date__month__istartswith
        required: false
        in: query
        description: license_expiry_date__month__istartswith
        schema:
          type: string
      - name: license_expiry_date__month__lt
        required: false
        in: query
        description: license_expiry_date__month__lt
        schema:
          type: string
      - name: license_expiry_date__month__lte
        required: false
        in: query
        description: license_expiry_date__month__lte
        schema:
          type: string
      - name: license_expiry_date__month__range
        required: false
        in: query
        description: license_expiry_date__month__range
        schema:
          type: string
      - name: license_expiry_date__month__regex
        required: false
        in: query
        description: license_expiry_date__month__regex
        schema:
          type: string
      - name: license_expiry_date__month__startswith
        required: false
        in: query
        description: license_expiry_date__month__startswith
        schema:
          type: string
      - name: license_expiry_date__quarter
        required: false
        in: query
        description: license_expiry_date__quarter
        schema:
          type: string
      - name: license_expiry_date__quarter__contained_by
        required: false
        in: query
        description: license_expiry_date__quarter__contained_by
        schema:
          type: string
      - name: license_expiry_date__quarter__contains
        required: false
        in: query
        description: license_expiry_date__quarter__contains
        schema:
          type: string
      - name: license_expiry_date__quarter__endswith
        required: false
        in: query
        description: license_expiry_date__quarter__endswith
        schema:
          type: string
      - name: license_expiry_date__quarter__gt
        required: false
        in: query
        description: license_expiry_date__quarter__gt
        schema:
          type: string
      - name: license_expiry_date__quarter__gte
        required: false
        in: query
        description: license_expiry_date__quarter__gte
        schema:
          type: string
      - name: license_expiry_date__quarter__icontains
        required: false
        in: query
        description: license_expiry_date__quarter__icontains
        schema:
          type: string
      - name: license_expiry_date__quarter__iendswith
        required: false
        in: query
        description: license_expiry_date__quarter__iendswith
        schema:
          type: string
      - name: license_expiry_date__quarter__iexact
        required: false
        in: query
        description: license_expiry_date__quarter__iexact
        schema:
          type: string
      - name: license_expiry_date__quarter__in
        required: false
        in: query
        description: license_expiry_date__quarter__in
        schema:
          type: string
      - name: license_expiry_date__quarter__iregex
        required: false
        in: query
        description: license_expiry_date__quarter__iregex
        schema:
          type: string
      - name: license_expiry_date__quarter__isnull
        required: false
        in: query
        description: license_expiry_date__quarter__isnull
        schema:
          type: string
      - name: license_expiry_date__quarter__istartswith
        required: false
        in: query
        description: license_expiry_date__quarter__istartswith
        schema:
          type: string
      - name: license_expiry_date__quarter__lt
        required: false
        in: query
        description: license_expiry_date__quarter__lt
        schema:
          type: string
      - name: license_expiry_date__quarter__lte
        required: false
        in: query
        description: license_expiry_date__quarter__lte
        schema:
          type: string
      - name: license_expiry_date__quarter__range
        required: false
        in: query
        description: license_expiry_date__quarter__range
        schema:
          type: string
      - name: license_expiry_date__quarter__regex
        required: false
        in: query
        description: license_expiry_date__quarter__regex
        schema:
          type: string
      - name: license_expiry_date__quarter__startswith
        required: false
        in: query
        description: license_expiry_date__quarter__startswith
        schema:
          type: string
      - name: license_expiry_date__range
        required: false
        in: query
        description: license_expiry_date__range
        schema:
          type: string
      - name: license_expiry_date__regex
        required: false
        in: query
        description: license_expiry_date__regex
        schema:
          type: string
      - name: license_expiry_date__startswith
        required: false
        in: query
        description: license_expiry_date__startswith
        schema:
          type: string
      - name: license_expiry_date__week
        required: false
        in: query
        description: license_expiry_date__week
        schema:
          type: string
      - name: license_expiry_date__week__contained_by
        required: false
        in: query
        description: license_expiry_date__week__contained_by
        schema:
          type: string
      - name: license_expiry_date__week__contains
        required: false
        in: query
        description: license_expiry_date__week__contains
        schema:
          type: string
      - name: license_expiry_date__week__endswith
        required: false
        in: query
        description: license_expiry_date__week__endswith
        schema:
          type: string
      - name: license_expiry_date__week__gt
        required: false
        in: query
        description: license_expiry_date__week__gt
        schema:
          type: string
      - name: license_expiry_date__week__gte
        required: false
        in: query
        description: license_expiry_date__week__gte
        schema:
          type: string
      - name: license_expiry_date__week__icontains
        required: false
        in: query
        description: license_expiry_date__week__icontains
        schema:
          type: string
      - name: license_expiry_date__week__iendswith
        required: false
        in: query
        description: license_expiry_date__week__iendswith
        schema:
          type: string
      - name: license_expiry_date__week__iexact
        required: false
        in: query
        description: license_expiry_date__week__iexact
        schema:
          type: string
      - name: license_expiry_date__week__in
        required: false
        in: query
        description: license_expiry_date__week__in
        schema:
          type: string
      - name: license_expiry_date__week__iregex
        required: false
        in: query
        description: license_expiry_date__week__iregex
        schema:
          type: string
      - name: license_expiry_date__week__isnull
        required: false
        in: query
        description: license_expiry_date__week__isnull
        schema:
          type: string
      - name: license_expiry_date__week__istartswith
        required: false
        in: query
        description: license_expiry_date__week__istartswith
        schema:
          type: string
      - name: license_expiry_date__week__lt
        required: false
        in: query
        description: license_expiry_date__week__lt
        schema:
          type: string
      - name: license_expiry_date__week__lte
        required: false
        in: query
        description: license_expiry_date__week__lte
        schema:
          type: string
      - name: license_expiry_date__week__range
        required: false
        in: query
        description: license_expiry_date__week__range
        schema:
          type: string
      - name: license_expiry_date__week__regex
        required: false
        in: query
        description: license_expiry_date__week__regex
        schema:
          type: string
      - name: license_expiry_date__week__startswith
        required: false
        in: query
        description: license_expiry_date__week__startswith
        schema:
          type: string
      - name: license_expiry_date__week_day
        required: false
        in: query
        description: license_expiry_date__week_day
        schema:
          type: string
      - name: license_expiry_date__week_day__contained_by
        required: false
        in: query
        description: license_expiry_date__week_day__contained_by
        schema:
          type: string
      - name: license_expiry_date__week_day__contains
        required: false
        in: query
        description: license_expiry_date__week_day__contains
        schema:
          type: string
      - name: license_expiry_date__week_day__endswith
        required: false
        in: query
        description: license_expiry_date__week_day__endswith
        schema:
          type: string
      - name: license_expiry_date__week_day__gt
        required: false
        in: query
        description: license_expiry_date__week_day__gt
        schema:
          type: string
      - name: license_expiry_date__week_day__gte
        required: false
        in: query
        description: license_expiry_date__week_day__gte
        schema:
          type: string
      - name: license_expiry_date__week_day__icontains
        required: false
        in: query
        description: license_expiry_date__week_day__icontains
        schema:
          type: string
      - name: license_expiry_date__week_day__iendswith
        required: false
        in: query
        description: license_expiry_date__week_day__iendswith
        schema:
          type: string
      - name: license_expiry_date__week_day__iexact
        required: false
        in: query
        description: license_expiry_date__week_day__iexact
        schema:
          type: string
      - name: license_expiry_date__week_day__in
        required: false
        in: query
        description: license_expiry_date__week_day__in
        schema:
          type: string
      - name: license_expiry_date__week_day__iregex
        required: false
        in: query
        description: license_expiry_date__week_day__iregex
        schema:
          type: string
      - name: license_expiry_date__week_day__isnull
        required: false
        in: query
        description: license_expiry_date__week_day__isnull
        schema:
          type: string
      - name: license_expiry_date__week_day__istartswith
        required: false
        in: query
        description: license_expiry_date__week_day__istartswith
        schema:
          type: string
      - name: license_expiry_date__week_day__lt
        required: false
        in: query
        description: license_expiry_date__week_day__lt
        schema:
          type: string
      - name: license_expiry_date__week_day__lte
        required: false
        in: query
        description: license_expiry_date__week_day__lte
        schema:
          type: string
      - name: license_expiry_date__week_day__range
        required: false
        in: query
        description: license_expiry_date__week_day__range
        schema:
          type: string
      - name: license_expiry_date__week_day__regex
        required: false
        in: query
        description: license_expiry_date__week_day__regex
        schema:
          type: string
      - name: license_expiry_date__week_day__startswith
        required: false
        in: query
        description: license_expiry_date__week_day__startswith
        schema:
          type: string
      - name: license_expiry_date__year
        required: false
        in: query
        description: license_expiry_date__year
        schema:
          type: string
      - name: license_expiry_date__year__contained_by
        required: false
        in: query
        description: license_expiry_date__year__contained_by
        schema:
          type: string
      - name: license_expiry_date__year__contains
        required: false
        in: query
        description: license_expiry_date__year__contains
        schema:
          type: string
      - name: license_expiry_date__year__endswith
        required: false
        in: query
        description: license_expiry_date__year__endswith
        schema:
          type: string
      - name: license_expiry_date__year__gt
        required: false
        in: query
        description: license_expiry_date__year__gt
        schema:
          type: string
      - name: license_expiry_date__year__gte
        required: false
        in: query
        description: license_expiry_date__year__gte
        schema:
          type: string
      - name: license_expiry_date__year__icontains
        required: false
        in: query
        description: license_expiry_date__year__icontains
        schema:
          type: string
      - name: license_expiry_date__year__iendswith
        required: false
        in: query
        description: license_expiry_date__year__iendswith
        schema:
          type: string
      - name: license_expiry_date__year__iexact
        required: false
        in: query
        description: license_expiry_date__year__iexact
        schema:
          type: string
      - name: license_expiry_date__year__in
        required: false
        in: query
        description: license_expiry_date__year__in
        schema:
          type: string
      - name: license_expiry_date__year__iregex
        required: false
        in: query
        description: license_expiry_date__year__iregex
        schema:
          type: string
      - name: license_expiry_date__year__isnull
        required: false
        in: query
        description: license_expiry_date__year__isnull
        schema:
          type: string
      - name: license_expiry_date__year__istartswith
        required: false
        in: query
        description: license_expiry_date__year__istartswith
        schema:
          type: string
      - name: license_expiry_date__year__lt
        required: false
        in: query
        description: license_expiry_date__year__lt
        schema:
          type: string
      - name: license_expiry_date__year__lte
        required: false
        in: query
        description: license_expiry_date__year__lte
        schema:
          type: string
      - name: license_expiry_date__year__range
        required: false
        in: query
        description: license_expiry_date__year__range
        schema:
          type: string
      - name: license_expiry_date__year__regex
        required: false
        in: query
        description: license_expiry_date__year__regex
        schema:
          type: string
      - name: license_expiry_date__year__startswith
        required: false
        in: query
        description: license_expiry_date__year__startswith
        schema:
          type: string
      - name: license_number
        required: false
        in: query
        description: license_number
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - transport-drivers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDriverList'
          description: ''
    post:
      operationId: transport_drivers_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-drivers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Driver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
  /api/transport-drivers/{id}/:
    get:
      operationId: transport_drivers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver details.
        required: true
      tags:
      - transport-drivers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    put:
      operationId: transport_drivers_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver details.
        required: true
      tags:
      - transport-drivers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Driver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    patch:
      operationId: transport_drivers_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver details.
        required: true
      tags:
      - transport-drivers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    delete:
      operationId: transport_drivers_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver details.
        required: true
      tags:
      - transport-drivers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-drivers/expiring_licenses/:
    get:
      operationId: transport_drivers_expiring_licenses_retrieve
      description: Get drivers with licenses expiring in the next 30 days
      tags:
      - transport-drivers
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
  /api/transport-trip-stops/:
    get:
      operationId: transport_trip_stops_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: trip
        required: false
        in: query
        description: trip
        schema:
          type: string
      tags:
      - transport-trip-stops
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTripStopList'
          description: ''
    post:
      operationId: transport_trip_stops_create
      tags:
      - transport-trip-stops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TripStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TripStop'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripStop'
          description: ''
  /api/transport-trip-stops/{id}/:
    get:
      operationId: transport_trip_stops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip stop.
        required: true
      tags:
      - transport-trip-stops
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripStop'
          description: ''
    put:
      operationId: transport_trip_stops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip stop.
        required: true
      tags:
      - transport-trip-stops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TripStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TripStop'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripStop'
          description: ''
    patch:
      operationId: transport_trip_stops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip stop.
        required: true
      tags:
      - transport-trip-stops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTripStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTripStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTripStop'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripStop'
          description: ''
    delete:
      operationId: transport_trip_stops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip stop.
        required: true
      tags:
      - transport-trip-stops
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-trips/:
    get:
      operationId: transport_trips_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: creation_date
        required: false
        in: query
        description: creation_date
        schema:
          type: string
      - name: creation_date__contained_by
        required: false
        in: query
        description: creation_date__contained_by
        schema:
          type: string
      - name: creation_date__contains
        required: false
        in: query
        description: creation_date__contains
        schema:
          type: string
      - name: creation_date__day
        required: false
        in: query
        description: creation_date__day
        schema:
          type: string
      - name: creation_date__day__contained_by
        required: false
        in: query
        description: creation_date__day__contained_by
        schema:
          type: string
      - name: creation_date__day__contains
        required: false
        in: query
        description: creation_date__day__contains
        schema:
          type: string
      - name: creation_date__day__endswith
        required: false
        in: query
        description: creation_date__day__endswith
        schema:
          type: string
      - name: creation_date__day__gt
        required: false
        in: query
        description: creation_date__day__gt
        schema:
          type: string
      - name: creation_date__day__gte
        required: false
        in: query
        description: creation_date__day__gte
        schema:
          type: string
      - name: creation_date__day__icontains
        required: false
        in: query
        description: creation_date__day__icontains
        schema:
          type: string
      - name: creation_date__day__iendswith
        required: false
        in: query
        description: creation_date__day__iendswith
        schema:
          type: string
      - name: creation_date__day__iexact
        required: false
        in: query
        description: creation_date__day__iexact
        schema:
          type: string
      - name: creation_date__day__in
        required: false
        in: query
        description: creation_date__day__in
        schema:
          type: string
      - name: creation_date__day__iregex
        required: false
        in: query
        description: creation_date__day__iregex
        schema:
          type: string
      - name: creation_date__day__isnull
        required: false
        in: query
        description: creation_date__day__isnull
        schema:
          type: string
      - name: creation_date__day__istartswith
        required: false
        in: query
        description: creation_date__day__istartswith
        schema:
          type: string
      - name: creation_date__day__lt
        required: false
        in: query
        description: creation_date__day__lt
        schema:
          type: string
      - name: creation_date__day__lte
        required: false
        in: query
        description: creation_date__day__lte
        schema:
          type: string
      - name: creation_date__day__range
        required: false
        in: query
        description: creation_date__day__range
        schema:
          type: string
      - name: creation_date__day__regex
        required: false
        in: query
        description: creation_date__day__regex
        schema:
          type: string
      - name: creation_date__day__startswith
        required: false
        in: query
        description: creation_date__day__startswith
        schema:
          type: string
      - name: creation_date__endswith
        required: false
        in: query
        description: creation_date__endswith
        schema:
          type: string
      - name: creation_date__gt
        required: false
        in: query
        description: creation_date__gt
        schema:
          type: string
      - name: creation_date__gte
        required: false
        in: query
        description: creation_date__gte
        schema:
          type: string
      - name: creation_date__icontains
        required: false
        in: query
        description: creation_date__icontains
        schema:
          type: string
      - name: creation_date__iendswith
        required: false
        in: query
        description: creation_date__iendswith
        schema:
          type: string
      - name: creation_date__iexact
        required: false
        in: query
        description: creation_date__iexact
        schema:
          type: string
      - name: creation_date__in
        required: false
        in: query
        description: creation_date__in
        schema:
          type: string
      - name: creation_date__iregex
        required: false
        in: query
        description: creation_date__iregex
        schema:
          type: string
      - name: creation_date__isnull
        required: false
        in: query
        description: creation_date__isnull
        schema:
          type: string
      - name: creation_date__iso_week_day
        required: false
        in: query
        description: creation_date__iso_week_day
        schema:
          type: string
      - name: creation_date__iso_week_day__contained_by
        required: false
        in: query
        description: creation_date__iso_week_day__contained_by
        schema:
          type: string
      - name: creation_date__iso_week_day__contains
        required: false
        in: query
        description: creation_date__iso_week_day__contains
        schema:
          type: string
      - name: creation_date__iso_week_day__endswith
        required: false
        in: query
        description: creation_date__iso_week_day__endswith
        schema:
          type: string
      - name: creation_date__iso_week_day__gt
        required: false
        in: query
        description: creation_date__iso_week_day__gt
        schema:
          type: string
      - name: creation_date__iso_week_day__gte
        required: false
        in: query
        description: creation_date__iso_week_day__gte
        schema:
          type: string
      - name: creation_date__iso_week_day__icontains
        required: false
        in: query
        description: creation_date__iso_week_day__icontains
        schema:
          type: string
      - name: creation_date__iso_week_day__iendswith
        required: false
        in: query
        description: creation_date__iso_week_day__iendswith
        schema:
          type: string
      - name: creation_date__iso_week_day__iexact
        required: false
        in: query
        description: creation_date__iso_week_day__iexact
        schema:
          type: string
      - name: creation_date__iso_week_day__in
        required: false
        in: query
        description: creation_date__iso_week_day__in
        schema:
          type: string
      - name: creation_date__iso_week_day__iregex
        required: false
        in: query
        description: creation_date__iso_week_day__iregex
        schema:
          type: string
      - name: creation_date__iso_week_day__isnull
        required: false
        in: query
        description: creation_date__iso_week_day__isnull
        schema:
          type: string
      - name: creation_date__iso_week_day__istartswith
        required: false
        in: query
        description: creation_date__iso_week_day__istartswith
        schema:
          type: string
      - name: creation_date__iso_week_day__lt
        required: false
        in: query
        description: creation_date__iso_week_day__lt
        schema:
          type: string
      - name: creation_date__iso_week_day__lte
        required: false
        in: query
        description: creation_date__iso_week_day__lte
        schema:
          type: string
      - name: creation_date__iso_week_day__range
        required: false
        in: query
        description: creation_date__iso_week_day__range
        schema:
          type: string
      - name: creation_date__iso_week_day__regex
        required: false
        in: query
        description: creation_date__iso_week_day__regex
        schema:
          type: string
      - name: creation_date__iso_week_day__startswith
        required: false
        in: query
        description: creation_date__iso_week_day__startswith
        schema:
          type: string
      - name: creation_date__iso_year
        required: false
        in: query
        description: creation_date__iso_year
        schema:
          type: string
      - name: creation_date__iso_year__contained_by
        required: false
        in: query
        description: creation_date__iso_year__contained_by
        schema:
          type: string
      - name: creation_date__iso_year__contains
        required: false
        in: query
        description: creation_date__iso_year__contains
        schema:
          type: string
      - name: creation_date__iso_year__endswith
        required: false
        in: query
        description: creation_date__iso_year__endswith
        schema:
          type: string
      - name: creation_date__iso_year__gt
        required: false
        in: query
        description: creation_date__iso_year__gt
        schema:
          type: string
      - name: creation_date__iso_year__gte
        required: false
        in: query
        description: creation_date__iso_year__gte
        schema:
          type: string
      - name: creation_date__iso_year__icontains
        required: false
        in: query
        description: creation_date__iso_year__icontains
        schema:
          type: string
      - name: creation_date__iso_year__iendswith
        required: false
        in: query
        description: creation_date__iso_year__iendswith
        schema:
          type: string
      - name: creation_date__iso_year__iexact
        required: false
        in: query
        description: creation_date__iso_year__iexact
        schema:
          type: string
      - name: creation_date__iso_year__in
        required: false
        in: query
        description: creation_date__iso_year__in
        schema:
          type: string
      - name: creation_date__iso_year__iregex
        required: false
        in: query
        description: creation_date__iso_year__iregex
        schema:
          type: string
      - name: creation_date__iso_year__isnull
        required: false
        in: query
        description: creation_date__iso_year__isnull
        schema:
          type: string
      - name: creation_date__iso_year__istartswith
        required: false
        in: query
        description: creation_date__iso_year__istartswith
        schema:
          type: string
      - name: creation_date__iso_year__lt
        required: false
        in: query
        description: creation_date__iso_year__lt
        schema:
          type: string
      - name: creation_date__iso_year__lte
        required: false
        in: query
        description: creation_date__iso_year__lte
        schema:
          type: string
      - name: creation_date__iso_year__range
        required: false
        in: query
        description: creation_date__iso_year__range
        schema:
          type: string
      - name: creation_date__iso_year__regex
        required: false
        in: query
        description: creation_date__iso_year__regex
        schema:
          type: string
      - name: creation_date__iso_year__startswith
        required: false
        in: query
        description: creation_date__iso_year__startswith
        schema:
          type: string
      - name: creation_date__istartswith
        required: false
        in: query
        description: creation_date__istartswith
        schema:
          type: string
      - name: creation_date__lt
        required: false
        in: query
        description: creation_date__lt
        schema:
          type: string
      - name: creation_date__lte
        required: false
        in: query
        description: creation_date__lte
        schema:
          type: string
      - name: creation_date__month
        required: false
        in: query
        description: creation_date__month
        schema:
          type: string
      - name: creation_date__month__contained_by
        required: false
        in: query
        description: creation_date__month__contained_by
        schema:
          type: string
      - name: creation_date__month__contains
        required: false
        in: query
        description: creation_date__month__contains
        schema:
          type: string
      - name: creation_date__month__endswith
        required: false
        in: query
        description: creation_date__month__endswith
        schema:
          type: string
      - name: creation_date__month__gt
        required: false
        in: query
        description: creation_date__month__gt
        schema:
          type: string
      - name: creation_date__month__gte
        required: false
        in: query
        description: creation_date__month__gte
        schema:
          type: string
      - name: creation_date__month__icontains
        required: false
        in: query
        description: creation_date__month__icontains
        schema:
          type: string
      - name: creation_date__month__iendswith
        required: false
        in: query
        description: creation_date__month__iendswith
        schema:
          type: string
      - name: creation_date__month__iexact
        required: false
        in: query
        description: creation_date__month__iexact
        schema:
          type: string
      - name: creation_date__month__in
        required: false
        in: query
        description: creation_date__month__in
        schema:
          type: string
      - name: creation_date__month__iregex
        required: false
        in: query
        description: creation_date__month__iregex
        schema:
          type: string
      - name: creation_date__month__isnull
        required: false
        in: query
        description: creation_date__month__isnull
        schema:
          type: string
      - name: creation_date__month__istartswith
        required: false
        in: query
        description: creation_date__month__istartswith
        schema:
          type: string
      - name: creation_date__month__lt
        required: false
        in: query
        description: creation_date__month__lt
        schema:
          type: string
      - name: creation_date__month__lte
        required: false
        in: query
        description: creation_date__month__lte
        schema:
          type: string
      - name: creation_date__month__range
        required: false
        in: query
        description: creation_date__month__range
        schema:
          type: string
      - name: creation_date__month__regex
        required: false
        in: query
        description: creation_date__month__regex
        schema:
          type: string
      - name: creation_date__month__startswith
        required: false
        in: query
        description: creation_date__month__startswith
        schema:
          type: string
      - name: creation_date__quarter
        required: false
        in: query
        description: creation_date__quarter
        schema:
          type: string
      - name: creation_date__quarter__contained_by
        required: false
        in: query
        description: creation_date__quarter__contained_by
        schema:
          type: string
      - name: creation_date__quarter__contains
        required: false
        in: query
        description: creation_date__quarter__contains
        schema:
          type: string
      - name: creation_date__quarter__endswith
        required: false
        in: query
        description: creation_date__quarter__endswith
        schema:
          type: string
      - name: creation_date__quarter__gt
        required: false
        in: query
        description: creation_date__quarter__gt
        schema:
          type: string
      - name: creation_date__quarter__gte
        required: false
        in: query
        description: creation_date__quarter__gte
        schema:
          type: string
      - name: creation_date__quarter__icontains
        required: false
        in: query
        description: creation_date__quarter__icontains
        schema:
          type: string
      - name: creation_date__quarter__iendswith
        required: false
        in: query
        description: creation_date__quarter__iendswith
        schema:
          type: string
      - name: creation_date__quarter__iexact
        required: false
        in: query
        description: creation_date__quarter__iexact
        schema:
          type: string
      - name: creation_date__quarter__in
        required: false
        in: query
        description: creation_date__quarter__in
        schema:
          type: string
      - name: creation_date__quarter__iregex
        required: false
        in: query
        description: creation_date__quarter__iregex
        schema:
          type: string
      - name: creation_date__quarter__isnull
        required: false
        in: query
        description: creation_date__quarter__isnull
        schema:
          type: string
      - name: creation_date__quarter__istartswith
        required: false
        in: query
        description: creation_date__quarter__istartswith
        schema:
          type: string
      - name: creation_date__quarter__lt
        required: false
        in: query
        description: creation_date__quarter__lt
        schema:
          type: string
      - name: creation_date__quarter__lte
        required: false
        in: query
        description: creation_date__quarter__lte
        schema:
          type: string
      - name: creation_date__quarter__range
        required: false
        in: query
        description: creation_date__quarter__range
        schema:
          type: string
      - name: creation_date__quarter__regex
        required: false
        in: query
        description: creation_date__quarter__regex
        schema:
          type: string
      - name: creation_date__quarter__startswith
        required: false
        in: query
        description: creation_date__quarter__startswith
        schema:
          type: string
      - name: creation_date__range
        required: false
        in: query
        description: creation_date__range
        schema:
          type: string
      - name: creation_date__regex
        required: false
        in: query
        description: creation_date__regex
        schema:
          type: string
      - name: creation_date__startswith
        required: false
        in: query
        description: creation_date__startswith
        schema:
          type: string
      - name: creation_date__week
        required: false
        in: query
        description: creation_date__week
        schema:
          type: string
      - name: creation_date__week__contained_by
        required: false
        in: query
        description: creation_date__week__contained_by
        schema:
          type: string
      - name: creation_date__week__contains
        required: false
        in: query
        description: creation_date__week__contains
        schema:
          type: string
      - name: creation_date__week__endswith
        required: false
        in: query
        description: creation_date__week__endswith
        schema:
          type: string
      - name: creation_date__week__gt
        required: false
        in: query
        description: creation_date__week__gt
        schema:
          type: string
      - name: creation_date__week__gte
        required: false
        in: query
        description: creation_date__week__gte
        schema:
          type: string
      - name: creation_date__week__icontains
        required: false
        in: query
        description: creation_date__week__icontains
        schema:
          type: string
      - name: creation_date__week__iendswith
        required: false
        in: query
        description: creation_date__week__iendswith
        schema:
          type: string
      - name: creation_date__week__iexact
        required: false
        in: query
        description: creation_date__week__iexact
        schema:
          type: string
      - name: creation_date__week__in
        required: false
        in: query
        description: creation_date__week__in
        schema:
          type: string
      - name: creation_date__week__iregex
        required: false
        in: query
        description: creation_date__week__iregex
        schema:
          type: string
      - name: creation_date__week__isnull
        required: false
        in: query
        description: creation_date__week__isnull
        schema:
          type: string
      - name: creation_date__week__istartswith
        required: false
        in: query
        description: creation_date__week__istartswith
        schema:
          type: string
      - name: creation_date__week__lt
        required: false
        in: query
        description: creation_date__week__lt
        schema:
          type: string
      - name: creation_date__week__lte
        required: false
        in: query
        description: creation_date__week__lte
        schema:
          type: string
      - name: creation_date__week__range
        required: false
        in: query
        description: creation_date__week__range
        schema:
          type: string
      - name: creation_date__week__regex
        required: false
        in: query
        description: creation_date__week__regex
        schema:
          type: string
      - name: creation_date__week__startswith
        required: false
        in: query
        description: creation_date__week__startswith
        schema:
          type: string
      - name: creation_date__week_day
        required: false
        in: query
        description: creation_date__week_day
        schema:
          type: string
      - name: creation_date__week_day__contained_by
        required: false
        in: query
        description: creation_date__week_day__contained_by
        schema:
          type: string
      - name: creation_date__week_day__contains
        required: false
        in: query
        description: creation_date__week_day__contains
        schema:
          type: string
      - name: creation_date__week_day__endswith
        required: false
        in: query
        description: creation_date__week_day__endswith
        schema:
          type: string
      - name: creation_date__week_day__gt
        required: false
        in: query
        description: creation_date__week_day__gt
        schema:
          type: string
      - name: creation_date__week_day__gte
        required: false
        in: query
        description: creation_date__week_day__gte
        schema:
          type: string
      - name: creation_date__week_day__icontains
        required: false
        in: query
        description: creation_date__week_day__icontains
        schema:
          type: string
      - name: creation_date__week_day__iendswith
        required: false
        in: query
        description: creation_date__week_day__iendswith
        schema:
          type: string
      - name: creation_date__week_day__iexact
        required: false
        in: query
        description: creation_date__week_day__iexact
        schema:
          type: string
      - name: creation_date__week_day__in
        required: false
        in: query
        description: creation_date__week_day__in
        schema:
          type: string
      - name: creation_date__week_day__iregex
        required: false
        in: query
        description: creation_date__week_day__iregex
        schema:
          type: string
      - name: creation_date__week_day__isnull
        required: false
        in: query
        description: creation_date__week_day__isnull
        schema:
          type: string
      - name: creation_date__week_day__istartswith
        required: false
        in: query
        description: creation_date__week_day__istartswith
        schema:
          type: string
      - name: creation_date__week_day__lt
        required: false
        in: query
        description: creation_date__week_day__lt
        schema:
          type: string
      - name: creation_date__week_day__lte
        required: false
        in: query
        description: creation_date__week_day__lte
        schema:
          type: string
      - name: creation_date__week_day__range
        required: false
        in: query
        description: creation_date__week_day__range
        schema:
          type: string
      - name: creation_date__week_day__regex
        required: false
        in: query
        description: creation_date__week_day__regex
        schema:
          type: string
      - name: creation_date__week_day__startswith
        required: false
        in: query
        description: creation_date__week_day__startswith
        schema:
          type: string
      - name: creation_date__year
        required: false
        in: query
        description: creation_date__year
        schema:
          type: string
      - name: creation_date__year__contained_by
        required: false
        in: query
        description: creation_date__year__contained_by
        schema:
          type: string
      - name: creation_date__year__contains
        required: false
        in: query
        description: creation_date__year__contains
        schema:
          type: string
      - name: creation_date__year__endswith
        required: false
        in: query
        description: creation_date__year__endswith
        schema:
          type: string
      - name: creation_date__year__gt
        required: false
        in: query
        description: creation_date__year__gt
        schema:
          type: string
      - name: creation_date__year__gte
        required: false
        in: query
        description: creation_date__year__gte
        schema:
          type: string
      - name: creation_date__year__icontains
        required: false
        in: query
        description: creation_date__year__icontains
        schema:
          type: string
      - name: creation_date__year__iendswith
        required: false
        in: query
        description: creation_date__year__iendswith
        schema:
          type: string
      - name: creation_date__year__iexact
        required: false
        in: query
        description: creation_date__year__iexact
        schema:
          type: string
      - name: creation_date__year__in
        required: false
        in: query
        description: creation_date__year__in
        schema:
          type: string
      - name: creation_date__year__iregex
        required: false
        in: query
        description: creation_date__year__iregex
        schema:
          type: string
      - name: creation_date__year__isnull
        required: false
        in: query
        description: creation_date__year__isnull
        schema:
          type: string
      - name: creation_date__year__istartswith
        required: false
        in: query
        description: creation_date__year__istartswith
        schema:
          type: string
      - name: creation_date__year__lt
        required: false
        in: query
        description: creation_date__year__lt
        schema:
          type: string
      - name: creation_date__year__lte
        required: false
        in: query
        description: creation_date__year__lte
        schema:
          type: string
      - name: creation_date__year__range
        required: false
        in: query
        description: creation_date__year__range
        schema:
          type: string
      - name: creation_date__year__regex
        required: false
        in: query
        description: creation_date__year__regex
        schema:
          type: string
      - name: creation_date__year__startswith
        required: false
        in: query
        description: creation_date__year__startswith
        schema:
          type: string
      - name: end_point
        required: false
        in: query
        description: end_point
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: parking_location
        required: false
        in: query
        description: parking_location
        schema:
          type: string
      - name: primary_driver
        required: false
        in: query
        description: primary_driver
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: secondary_driver
        required: false
        in: query
        description: secondary_driver
        schema:
          type: string
      - name: start_point
        required: false
        in: query
        description: start_point
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - planned
          - started
          - In Travel
          - active
          - completed
          - cancelled
      - name: status__contains
        required: false
        in: query
        description: status__contains
        schema:
          type: string
      - name: status__endswith
        required: false
        in: query
        description: status__endswith
        schema:
          type: string
      - name: status__gt
        required: false
        in: query
        description: status__gt
        schema:
          type: string
      - name: status__gte
        required: false
        in: query
        description: status__gte
        schema:
          type: string
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      - name: status__iendswith
        required: false
        in: query
        description: status__iendswith
        schema:
          type: string
      - name: status__iexact
        required: false
        in: query
        description: status__iexact
        schema:
          type: string
      - name: status__in
        required: false
        in: query
        description: status__in
        schema:
          type: string
      - name: status__iregex
        required: false
        in: query
        description: status__iregex
        schema:
          type: string
      - name: status__isnull
        required: false
        in: query
        description: status__isnull
        schema:
          type: string
      - name: status__istartswith
        required: false
        in: query
        description: status__istartswith
        schema:
          type: string
      - name: status__lt
        required: false
        in: query
        description: status__lt
        schema:
          type: string
      - name: status__lte
        required: false
        in: query
        description: status__lte
        schema:
          type: string
      - name: status__range
        required: false
        in: query
        description: status__range
        schema:
          type: string
      - name: status__regex
        required: false
        in: query
        description: status__regex
        schema:
          type: string
      - name: status__startswith
        required: false
        in: query
        description: status__startswith
        schema:
          type: string
      - name: vehicle
        required: false
        in: query
        description: vehicle
        schema:
          type: string
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTripList'
          description: ''
    post:
      operationId: transport_trips_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/{id}/:
    get:
      operationId: transport_trips_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    put:
      operationId: transport_trips_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    patch:
      operationId: transport_trips_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    delete:
      operationId: transport_trips_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-trips/{id}/add_passenger/:
    post:
      operationId: transport_trips_add_passenger_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/{id}/passengers/:
    get:
      operationId: transport_trips_passengers_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/{id}/remove_passenger/:
    delete:
      operationId: transport_trips_remove_passenger_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-trips/{id}/stops/:
    get:
      operationId: transport_trips_stops_retrieve
      description: List all stops for a specific trip
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/{id}/update_status/:
    post:
      operationId: transport_trips_update_status_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - transport-trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/active_trips/:
    get:
      operationId: transport_trips_active_trips_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-trips/dashboard/:
    get:
      operationId: transport_trips_dashboard_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-trips
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/transport-vehicle-tracking/:
    get:
      operationId: transport_vehicle_tracking_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: current_location
        required: false
        in: query
        description: current_location
        schema:
          type: string
      - name: latitude
        required: false
        in: query
        description: latitude
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: longitude
        required: false
        in: query
        description: longitude
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: timestamp
        required: false
        in: query
        description: timestamp
        schema:
          type: string
      - name: timestamp__contained_by
        required: false
        in: query
        description: timestamp__contained_by
        schema:
          type: string
      - name: timestamp__contains
        required: false
        in: query
        description: timestamp__contains
        schema:
          type: string
      - name: timestamp__date
        required: false
        in: query
        description: timestamp__date
        schema:
          type: string
      - name: timestamp__date__contained_by
        required: false
        in: query
        description: timestamp__date__contained_by
        schema:
          type: string
      - name: timestamp__date__contains
        required: false
        in: query
        description: timestamp__date__contains
        schema:
          type: string
      - name: timestamp__date__day
        required: false
        in: query
        description: timestamp__date__day
        schema:
          type: string
      - name: timestamp__date__day__contained_by
        required: false
        in: query
        description: timestamp__date__day__contained_by
        schema:
          type: string
      - name: timestamp__date__day__contains
        required: false
        in: query
        description: timestamp__date__day__contains
        schema:
          type: string
      - name: timestamp__date__day__endswith
        required: false
        in: query
        description: timestamp__date__day__endswith
        schema:
          type: string
      - name: timestamp__date__day__gt
        required: false
        in: query
        description: timestamp__date__day__gt
        schema:
          type: string
      - name: timestamp__date__day__gte
        required: false
        in: query
        description: timestamp__date__day__gte
        schema:
          type: string
      - name: timestamp__date__day__icontains
        required: false
        in: query
        description: timestamp__date__day__icontains
        schema:
          type: string
      - name: timestamp__date__day__iendswith
        required: false
        in: query
        description: timestamp__date__day__iendswith
        schema:
          type: string
      - name: timestamp__date__day__iexact
        required: false
        in: query
        description: timestamp__date__day__iexact
        schema:
          type: string
      - name: timestamp__date__day__in
        required: false
        in: query
        description: timestamp__date__day__in
        schema:
          type: string
      - name: timestamp__date__day__iregex
        required: false
        in: query
        description: timestamp__date__day__iregex
        schema:
          type: string
      - name: timestamp__date__day__isnull
        required: false
        in: query
        description: timestamp__date__day__isnull
        schema:
          type: string
      - name: timestamp__date__day__istartswith
        required: false
        in: query
        description: timestamp__date__day__istartswith
        schema:
          type: string
      - name: timestamp__date__day__lt
        required: false
        in: query
        description: timestamp__date__day__lt
        schema:
          type: string
      - name: timestamp__date__day__lte
        required: false
        in: query
        description: timestamp__date__day__lte
        schema:
          type: string
      - name: timestamp__date__day__range
        required: false
        in: query
        description: timestamp__date__day__range
        schema:
          type: string
      - name: timestamp__date__day__regex
        required: false
        in: query
        description: timestamp__date__day__regex
        schema:
          type: string
      - name: timestamp__date__day__startswith
        required: false
        in: query
        description: timestamp__date__day__startswith
        schema:
          type: string
      - name: timestamp__date__endswith
        required: false
        in: query
        description: timestamp__date__endswith
        schema:
          type: string
      - name: timestamp__date__gt
        required: false
        in: query
        description: timestamp__date__gt
        schema:
          type: string
      - name: timestamp__date__gte
        required: false
        in: query
        description: timestamp__date__gte
        schema:
          type: string
      - name: timestamp__date__icontains
        required: false
        in: query
        description: timestamp__date__icontains
        schema:
          type: string
      - name: timestamp__date__iendswith
        required: false
        in: query
        description: timestamp__date__iendswith
        schema:
          type: string
      - name: timestamp__date__iexact
        required: false
        in: query
        description: timestamp__date__iexact
        schema:
          type: string
      - name: timestamp__date__in
        required: false
        in: query
        description: timestamp__date__in
        schema:
          type: string
      - name: timestamp__date__iregex
        required: false
        in: query
        description: timestamp__date__iregex
        schema:
          type: string
      - name: timestamp__date__isnull
        required: false
        in: query
        description: timestamp__date__isnull
        schema:
          type: string
      - name: timestamp__date__iso_week_day
        required: false
        in: query
        description: timestamp__date__iso_week_day
        schema:
          type: string
      - name: timestamp__date__iso_week_day__contained_by
        required: false
        in: query
        description: timestamp__date__iso_week_day__contained_by
        schema:
          type: string
      - name: timestamp__date__iso_week_day__contains
        required: false
        in: query
        description: timestamp__date__iso_week_day__contains
        schema:
          type: string
      - name: timestamp__date__iso_week_day__endswith
        required: false
        in: query
        description: timestamp__date__iso_week_day__endswith
        schema:
          type: string
      - name: timestamp__date__iso_week_day__gt
        required: false
        in: query
        description: timestamp__date__iso_week_day__gt
        schema:
          type: string
      - name: timestamp__date__iso_week_day__gte
        required: false
        in: query
        description: timestamp__date__iso_week_day__gte
        schema:
          type: string
      - name: timestamp__date__iso_week_day__icontains
        required: false
        in: query
        description: timestamp__date__iso_week_day__icontains
        schema:
          type: string
      - name: timestamp__date__iso_week_day__iendswith
        required: false
        in: query
        description: timestamp__date__iso_week_day__iendswith
        schema:
          type: string
      - name: timestamp__date__iso_week_day__iexact
        required: false
        in: query
        description: timestamp__date__iso_week_day__iexact
        schema:
          type: string
      - name: timestamp__date__iso_week_day__in
        required: false
        in: query
        description: timestamp__date__iso_week_day__in
        schema:
          type: string
      - name: timestamp__date__iso_week_day__iregex
        required: false
        in: query
        description: timestamp__date__iso_week_day__iregex
        schema:
          type: string
      - name: timestamp__date__iso_week_day__isnull
        required: false
        in: query
        description: timestamp__date__iso_week_day__isnull
        schema:
          type: string
      - name: timestamp__date__iso_week_day__istartswith
        required: false
        in: query
        description: timestamp__date__iso_week_day__istartswith
        schema:
          type: string
      - name: timestamp__date__iso_week_day__lt
        required: false
        in: query
        description: timestamp__date__iso_week_day__lt
        schema:
          type: string
      - name: timestamp__date__iso_week_day__lte
        required: false
        in: query
        description: timestamp__date__iso_week_day__lte
        schema:
          type: string
      - name: timestamp__date__iso_week_day__range
        required: false
        in: query
        description: timestamp__date__iso_week_day__range
        schema:
          type: string
      - name: timestamp__date__iso_week_day__regex
        required: false
        in: query
        description: timestamp__date__iso_week_day__regex
        schema:
          type: string
      - name: timestamp__date__iso_week_day__startswith
        required: false
        in: query
        description: timestamp__date__iso_week_day__startswith
        schema:
          type: string
      - name: timestamp__date__iso_year
        required: false
        in: query
        description: timestamp__date__iso_year
        schema:
          type: string
      - name: timestamp__date__iso_year__contained_by
        required: false
        in: query
        description: timestamp__date__iso_year__contained_by
        schema:
          type: string
      - name: timestamp__date__iso_year__contains
        required: false
        in: query
        description: timestamp__date__iso_year__contains
        schema:
          type: string
      - name: timestamp__date__iso_year__endswith
        required: false
        in: query
        description: timestamp__date__iso_year__endswith
        schema:
          type: string
      - name: timestamp__date__iso_year__gt
        required: false
        in: query
        description: timestamp__date__iso_year__gt
        schema:
          type: string
      - name: timestamp__date__iso_year__gte
        required: false
        in: query
        description: timestamp__date__iso_year__gte
        schema:
          type: string
      - name: timestamp__date__iso_year__icontains
        required: false
        in: query
        description: timestamp__date__iso_year__icontains
        schema:
          type: string
      - name: timestamp__date__iso_year__iendswith
        required: false
        in: query
        description: timestamp__date__iso_year__iendswith
        schema:
          type: string
      - name: timestamp__date__iso_year__iexact
        required: false
        in: query
        description: timestamp__date__iso_year__iexact
        schema:
          type: string
      - name: timestamp__date__iso_year__in
        required: false
        in: query
        description: timestamp__date__iso_year__in
        schema:
          type: string
      - name: timestamp__date__iso_year__iregex
        required: false
        in: query
        description: timestamp__date__iso_year__iregex
        schema:
          type: string
      - name: timestamp__date__iso_year__isnull
        required: false
        in: query
        description: timestamp__date__iso_year__isnull
        schema:
          type: string
      - name: timestamp__date__iso_year__istartswith
        required: false
        in: query
        description: timestamp__date__iso_year__istartswith
        schema:
          type: string
      - name: timestamp__date__iso_year__lt
        required: false
        in: query
        description: timestamp__date__iso_year__lt
        schema:
          type: string
      - name: timestamp__date__iso_year__lte
        required: false
        in: query
        description: timestamp__date__iso_year__lte
        schema:
          type: string
      - name: timestamp__date__iso_year__range
        required: false
        in: query
        description: timestamp__date__iso_year__range
        schema:
          type: string
      - name: timestamp__date__iso_year__regex
        required: false
        in: query
        description: timestamp__date__iso_year__regex
        schema:
          type: string
      - name: timestamp__date__iso_year__startswith
        required: false
        in: query
        description: timestamp__date__iso_year__startswith
        schema:
          type: string
      - name: timestamp__date__istartswith
        required: false
        in: query
        description: timestamp__date__istartswith
        schema:
          type: string
      - name: timestamp__date__lt
        required: false
        in: query
        description: timestamp__date__lt
        schema:
          type: string
      - name: timestamp__date__lte
        required: false
        in: query
        description: timestamp__date__lte
        schema:
          type: string
      - name: timestamp__date__month
        required: false
        in: query
        description: timestamp__date__month
        schema:
          type: string
      - name: timestamp__date__month__contained_by
        required: false
        in: query
        description: timestamp__date__month__contained_by
        schema:
          type: string
      - name: timestamp__date__month__contains
        required: false
        in: query
        description: timestamp__date__month__contains
        schema:
          type: string
      - name: timestamp__date__month__endswith
        required: false
        in: query
        description: timestamp__date__month__endswith
        schema:
          type: string
      - name: timestamp__date__month__gt
        required: false
        in: query
        description: timestamp__date__month__gt
        schema:
          type: string
      - name: timestamp__date__month__gte
        required: false
        in: query
        description: timestamp__date__month__gte
        schema:
          type: string
      - name: timestamp__date__month__icontains
        required: false
        in: query
        description: timestamp__date__month__icontains
        schema:
          type: string
      - name: timestamp__date__month__iendswith
        required: false
        in: query
        description: timestamp__date__month__iendswith
        schema:
          type: string
      - name: timestamp__date__month__iexact
        required: false
        in: query
        description: timestamp__date__month__iexact
        schema:
          type: string
      - name: timestamp__date__month__in
        required: false
        in: query
        description: timestamp__date__month__in
        schema:
          type: string
      - name: timestamp__date__month__iregex
        required: false
        in: query
        description: timestamp__date__month__iregex
        schema:
          type: string
      - name: timestamp__date__month__isnull
        required: false
        in: query
        description: timestamp__date__month__isnull
        schema:
          type: string
      - name: timestamp__date__month__istartswith
        required: false
        in: query
        description: timestamp__date__month__istartswith
        schema:
          type: string
      - name: timestamp__date__month__lt
        required: false
        in: query
        description: timestamp__date__month__lt
        schema:
          type: string
      - name: timestamp__date__month__lte
        required: false
        in: query
        description: timestamp__date__month__lte
        schema:
          type: string
      - name: timestamp__date__month__range
        required: false
        in: query
        description: timestamp__date__month__range
        schema:
          type: string
      - name: timestamp__date__month__regex
        required: false
        in: query
        description: timestamp__date__month__regex
        schema:
          type: string
      - name: timestamp__date__month__startswith
        required: false
        in: query
        description: timestamp__date__month__startswith
        schema:
          type: string
      - name: timestamp__date__quarter
        required: false
        in: query
        description: timestamp__date__quarter
        schema:
          type: string
      - name: timestamp__date__quarter__contained_by
        required: false
        in: query
        description: timestamp__date__quarter__contained_by
        schema:
          type: string
      - name: timestamp__date__quarter__contains
        required: false
        in: query
        description: timestamp__date__quarter__contains
        schema:
          type: string
      - name: timestamp__date__quarter__endswith
        required: false
        in: query
        description: timestamp__date__quarter__endswith
        schema:
          type: string
      - name: timestamp__date__quarter__gt
        required: false
        in: query
        description: timestamp__date__quarter__gt
        schema:
          type: string
      - name: timestamp__date__quarter__gte
        required: false
        in: query
        description: timestamp__date__quarter__gte
        schema:
          type: string
      - name: timestamp__date__quarter__icontains
        required: false
        in: query
        description: timestamp__date__quarter__icontains
        schema:
          type: string
      - name: timestamp__date__quarter__iendswith
        required: false
        in: query
        description: timestamp__date__quarter__iendswith
        schema:
          type: string
      - name: timestamp__date__quarter__iexact
        required: false
        in: query
        description: timestamp__date__quarter__iexact
        schema:
          type: string
      - name: timestamp__date__quarter__in
        required: false
        in: query
        description: timestamp__date__quarter__in
        schema:
          type: string
      - name: timestamp__date__quarter__iregex
        required: false
        in: query
        description: timestamp__date__quarter__iregex
        schema:
          type: string
      - name: timestamp__date__quarter__isnull
        required: false
        in: query
        description: timestamp__date__quarter__isnull
        schema:
          type: string
      - name: timestamp__date__quarter__istartswith
        required: false
        in: query
        description: timestamp__date__quarter__istartswith
        schema:
          type: string
      - name: timestamp__date__quarter__lt
        required: false
        in: query
        description: timestamp__date__quarter__lt
        schema:
          type: string
      - name: timestamp__date__quarter__lte
        required: false
        in: query
        description: timestamp__date__quarter__lte
        schema:
          type: string
      - name: timestamp__date__quarter__range
        required: false
        in: query
        description: timestamp__date__quarter__range
        schema:
          type: string
      - name: timestamp__date__quarter__regex
        required: false
        in: query
        description: timestamp__date__quarter__regex
        schema:
          type: string
      - name: timestamp__date__quarter__startswith
        required: false
        in: query
        description: timestamp__date__quarter__startswith
        schema:
          type: string
      - name: timestamp__date__range
        required: false
        in: query
        description: timestamp__date__range
        schema:
          type: string
      - name: timestamp__date__regex
        required: false
        in: query
        description: timestamp__date__regex
        schema:
          type: string
      - name: timestamp__date__startswith
        required: false
        in: query
        description: timestamp__date__startswith
        schema:
          type: string
      - name: timestamp__date__week
        required: false
        in: query
        description: timestamp__date__week
        schema:
          type: string
      - name: timestamp__date__week__contained_by
        required: false
        in: query
        description: timestamp__date__week__contained_by
        schema:
          type: string
      - name: timestamp__date__week__contains
        required: false
        in: query
        description: timestamp__date__week__contains
        schema:
          type: string
      - name: timestamp__date__week__endswith
        required: false
        in: query
        description: timestamp__date__week__endswith
        schema:
          type: string
      - name: timestamp__date__week__gt
        required: false
        in: query
        description: timestamp__date__week__gt
        schema:
          type: string
      - name: timestamp__date__week__gte
        required: false
        in: query
        description: timestamp__date__week__gte
        schema:
          type: string
      - name: timestamp__date__week__icontains
        required: false
        in: query
        description: timestamp__date__week__icontains
        schema:
          type: string
      - name: timestamp__date__week__iendswith
        required: false
        in: query
        description: timestamp__date__week__iendswith
        schema:
          type: string
      - name: timestamp__date__week__iexact
        required: false
        in: query
        description: timestamp__date__week__iexact
        schema:
          type: string
      - name: timestamp__date__week__in
        required: false
        in: query
        description: timestamp__date__week__in
        schema:
          type: string
      - name: timestamp__date__week__iregex
        required: false
        in: query
        description: timestamp__date__week__iregex
        schema:
          type: string
      - name: timestamp__date__week__isnull
        required: false
        in: query
        description: timestamp__date__week__isnull
        schema:
          type: string
      - name: timestamp__date__week__istartswith
        required: false
        in: query
        description: timestamp__date__week__istartswith
        schema:
          type: string
      - name: timestamp__date__week__lt
        required: false
        in: query
        description: timestamp__date__week__lt
        schema:
          type: string
      - name: timestamp__date__week__lte
        required: false
        in: query
        description: timestamp__date__week__lte
        schema:
          type: string
      - name: timestamp__date__week__range
        required: false
        in: query
        description: timestamp__date__week__range
        schema:
          type: string
      - name: timestamp__date__week__regex
        required: false
        in: query
        description: timestamp__date__week__regex
        schema:
          type: string
      - name: timestamp__date__week__startswith
        required: false
        in: query
        description: timestamp__date__week__startswith
        schema:
          type: string
      - name: timestamp__date__week_day
        required: false
        in: query
        description: timestamp__date__week_day
        schema:
          type: string
      - name: timestamp__date__week_day__contained_by
        required: false
        in: query
        description: timestamp__date__week_day__contained_by
        schema:
          type: string
      - name: timestamp__date__week_day__contains
        required: false
        in: query
        description: timestamp__date__week_day__contains
        schema:
          type: string
      - name: timestamp__date__week_day__endswith
        required: false
        in: query
        description: timestamp__date__week_day__endswith
        schema:
          type: string
      - name: timestamp__date__week_day__gt
        required: false
        in: query
        description: timestamp__date__week_day__gt
        schema:
          type: string
      - name: timestamp__date__week_day__gte
        required: false
        in: query
        description: timestamp__date__week_day__gte
        schema:
          type: string
      - name: timestamp__date__week_day__icontains
        required: false
        in: query
        description: timestamp__date__week_day__icontains
        schema:
          type: string
      - name: timestamp__date__week_day__iendswith
        required: false
        in: query
        description: timestamp__date__week_day__iendswith
        schema:
          type: string
      - name: timestamp__date__week_day__iexact
        required: false
        in: query
        description: timestamp__date__week_day__iexact
        schema:
          type: string
      - name: timestamp__date__week_day__in
        required: false
        in: query
        description: timestamp__date__week_day__in
        schema:
          type: string
      - name: timestamp__date__week_day__iregex
        required: false
        in: query
        description: timestamp__date__week_day__iregex
        schema:
          type: string
      - name: timestamp__date__week_day__isnull
        required: false
        in: query
        description: timestamp__date__week_day__isnull
        schema:
          type: string
      - name: timestamp__date__week_day__istartswith
        required: false
        in: query
        description: timestamp__date__week_day__istartswith
        schema:
          type: string
      - name: timestamp__date__week_day__lt
        required: false
        in: query
        description: timestamp__date__week_day__lt
        schema:
          type: string
      - name: timestamp__date__week_day__lte
        required: false
        in: query
        description: timestamp__date__week_day__lte
        schema:
          type: string
      - name: timestamp__date__week_day__range
        required: false
        in: query
        description: timestamp__date__week_day__range
        schema:
          type: string
      - name: timestamp__date__week_day__regex
        required: false
        in: query
        description: timestamp__date__week_day__regex
        schema:
          type: string
      - name: timestamp__date__week_day__startswith
        required: false
        in: query
        description: timestamp__date__week_day__startswith
        schema:
          type: string
      - name: timestamp__date__year
        required: false
        in: query
        description: timestamp__date__year
        schema:
          type: string
      - name: timestamp__date__year__contained_by
        required: false
        in: query
        description: timestamp__date__year__contained_by
        schema:
          type: string
      - name: timestamp__date__year__contains
        required: false
        in: query
        description: timestamp__date__year__contains
        schema:
          type: string
      - name: timestamp__date__year__endswith
        required: false
        in: query
        description: timestamp__date__year__endswith
        schema:
          type: string
      - name: timestamp__date__year__gt
        required: false
        in: query
        description: timestamp__date__year__gt
        schema:
          type: string
      - name: timestamp__date__year__gte
        required: false
        in: query
        description: timestamp__date__year__gte
        schema:
          type: string
      - name: timestamp__date__year__icontains
        required: false
        in: query
        description: timestamp__date__year__icontains
        schema:
          type: string
      - name: timestamp__date__year__iendswith
        required: false
        in: query
        description: timestamp__date__year__iendswith
        schema:
          type: string
      - name: timestamp__date__year__iexact
        required: false
        in: query
        description: timestamp__date__year__iexact
        schema:
          type: string
      - name: timestamp__date__year__in
        required: false
        in: query
        description: timestamp__date__year__in
        schema:
          type: string
      - name: timestamp__date__year__iregex
        required: false
        in: query
        description: timestamp__date__year__iregex
        schema:
          type: string
      - name: timestamp__date__year__isnull
        required: false
        in: query
        description: timestamp__date__year__isnull
        schema:
          type: string
      - name: timestamp__date__year__istartswith
        required: false
        in: query
        description: timestamp__date__year__istartswith
        schema:
          type: string
      - name: timestamp__date__year__lt
        required: false
        in: query
        description: timestamp__date__year__lt
        schema:
          type: string
      - name: timestamp__date__year__lte
        required: false
        in: query
        description: timestamp__date__year__lte
        schema:
          type: string
      - name: timestamp__date__year__range
        required: false
        in: query
        description: timestamp__date__year__range
        schema:
          type: string
      - name: timestamp__date__year__regex
        required: false
        in: query
        description: timestamp__date__year__regex
        schema:
          type: string
      - name: timestamp__date__year__startswith
        required: false
        in: query
        description: timestamp__date__year__startswith
        schema:
          type: string
      - name: timestamp__day
        required: false
        in: query
        description: timestamp__day
        schema:
          type: string
      - name: timestamp__day__contained_by
        required: false
        in: query
        description: timestamp__day__contained_by
        schema:
          type: string
      - name: timestamp__day__contains
        required: false
        in: query
        description: timestamp__day__contains
        schema:
          type: string
      - name: timestamp__day__endswith
        required: false
        in: query
        description: timestamp__day__endswith
        schema:
          type: string
      - name: timestamp__day__gt
        required: false
        in: query
        description: timestamp__day__gt
        schema:
          type: string
      - name: timestamp__day__gte
        required: false
        in: query
        description: timestamp__day__gte
        schema:
          type: string
      - name: timestamp__day__icontains
        required: false
        in: query
        description: timestamp__day__icontains
        schema:
          type: string
      - name: timestamp__day__iendswith
        required: false
        in: query
        description: timestamp__day__iendswith
        schema:
          type: string
      - name: timestamp__day__iexact
        required: false
        in: query
        description: timestamp__day__iexact
        schema:
          type: string
      - name: timestamp__day__in
        required: false
        in: query
        description: timestamp__day__in
        schema:
          type: string
      - name: timestamp__day__iregex
        required: false
        in: query
        description: timestamp__day__iregex
        schema:
          type: string
      - name: timestamp__day__isnull
        required: false
        in: query
        description: timestamp__day__isnull
        schema:
          type: string
      - name: timestamp__day__istartswith
        required: false
        in: query
        description: timestamp__day__istartswith
        schema:
          type: string
      - name: timestamp__day__lt
        required: false
        in: query
        description: timestamp__day__lt
        schema:
          type: string
      - name: timestamp__day__lte
        required: false
        in: query
        description: timestamp__day__lte
        schema:
          type: string
      - name: timestamp__day__range
        required: false
        in: query
        description: timestamp__day__range
        schema:
          type: string
      - name: timestamp__day__regex
        required: false
        in: query
        description: timestamp__day__regex
        schema:
          type: string
      - name: timestamp__day__startswith
        required: false
        in: query
        description: timestamp__day__startswith
        schema:
          type: string
      - name: timestamp__endswith
        required: false
        in: query
        description: timestamp__endswith
        schema:
          type: string
      - name: timestamp__gt
        required: false
        in: query
        description: timestamp__gt
        schema:
          type: string
      - name: timestamp__gte
        required: false
        in: query
        description: timestamp__gte
        schema:
          type: string
      - name: timestamp__hour
        required: false
        in: query
        description: timestamp__hour
        schema:
          type: string
      - name: timestamp__hour__contained_by
        required: false
        in: query
        description: timestamp__hour__contained_by
        schema:
          type: string
      - name: timestamp__hour__contains
        required: false
        in: query
        description: timestamp__hour__contains
        schema:
          type: string
      - name: timestamp__hour__endswith
        required: false
        in: query
        description: timestamp__hour__endswith
        schema:
          type: string
      - name: timestamp__hour__gt
        required: false
        in: query
        description: timestamp__hour__gt
        schema:
          type: string
      - name: timestamp__hour__gte
        required: false
        in: query
        description: timestamp__hour__gte
        schema:
          type: string
      - name: timestamp__hour__icontains
        required: false
        in: query
        description: timestamp__hour__icontains
        schema:
          type: string
      - name: timestamp__hour__iendswith
        required: false
        in: query
        description: timestamp__hour__iendswith
        schema:
          type: string
      - name: timestamp__hour__iexact
        required: false
        in: query
        description: timestamp__hour__iexact
        schema:
          type: string
      - name: timestamp__hour__in
        required: false
        in: query
        description: timestamp__hour__in
        schema:
          type: string
      - name: timestamp__hour__iregex
        required: false
        in: query
        description: timestamp__hour__iregex
        schema:
          type: string
      - name: timestamp__hour__isnull
        required: false
        in: query
        description: timestamp__hour__isnull
        schema:
          type: string
      - name: timestamp__hour__istartswith
        required: false
        in: query
        description: timestamp__hour__istartswith
        schema:
          type: string
      - name: timestamp__hour__lt
        required: false
        in: query
        description: timestamp__hour__lt
        schema:
          type: string
      - name: timestamp__hour__lte
        required: false
        in: query
        description: timestamp__hour__lte
        schema:
          type: string
      - name: timestamp__hour__range
        required: false
        in: query
        description: timestamp__hour__range
        schema:
          type: string
      - name: timestamp__hour__regex
        required: false
        in: query
        description: timestamp__hour__regex
        schema:
          type: string
      - name: timestamp__hour__startswith
        required: false
        in: query
        description: timestamp__hour__startswith
        schema:
          type: string
      - name: timestamp__icontains
        required: false
        in: query
        description: timestamp__icontains
        schema:
          type: string
      - name: timestamp__iendswith
        required: false
        in: query
        description: timestamp__iendswith
        schema:
          type: string
      - name: timestamp__iexact
        required: false
        in: query
        description: timestamp__iexact
        schema:
          type: string
      - name: timestamp__in
        required: false
        in: query
        description: timestamp__in
        schema:
          type: string
      - name: timestamp__iregex
        required: false
        in: query
        description: timestamp__iregex
        schema:
          type: string
      - name: timestamp__isnull
        required: false
        in: query
        description: timestamp__isnull
        schema:
          type: string
      - name: timestamp__iso_week_day
        required: false
        in: query
        description: timestamp__iso_week_day
        schema:
          type: string
      - name: timestamp__iso_week_day__contained_by
        required: false
        in: query
        description: timestamp__iso_week_day__contained_by
        schema:
          type: string
      - name: timestamp__iso_week_day__contains
        required: false
        in: query
        description: timestamp__iso_week_day__contains
        schema:
          type: string
      - name: timestamp__iso_week_day__endswith
        required: false
        in: query
        description: timestamp__iso_week_day__endswith
        schema:
          type: string
      - name: timestamp__iso_week_day__gt
        required: false
        in: query
        description: timestamp__iso_week_day__gt
        schema:
          type: string
      - name: timestamp__iso_week_day__gte
        required: false
        in: query
        description: timestamp__iso_week_day__gte
        schema:
          type: string
      - name: timestamp__iso_week_day__icontains
        required: false
        in: query
        description: timestamp__iso_week_day__icontains
        schema:
          type: string
      - name: timestamp__iso_week_day__iendswith
        required: false
        in: query
        description: timestamp__iso_week_day__iendswith
        schema:
          type: string
      - name: timestamp__iso_week_day__iexact
        required: false
        in: query
        description: timestamp__iso_week_day__iexact
        schema:
          type: string
      - name: timestamp__iso_week_day__in
        required: false
        in: query
        description: timestamp__iso_week_day__in
        schema:
          type: string
      - name: timestamp__iso_week_day__iregex
        required: false
        in: query
        description: timestamp__iso_week_day__iregex
        schema:
          type: string
      - name: timestamp__iso_week_day__isnull
        required: false
        in: query
        description: timestamp__iso_week_day__isnull
        schema:
          type: string
      - name: timestamp__iso_week_day__istartswith
        required: false
        in: query
        description: timestamp__iso_week_day__istartswith
        schema:
          type: string
      - name: timestamp__iso_week_day__lt
        required: false
        in: query
        description: timestamp__iso_week_day__lt
        schema:
          type: string
      - name: timestamp__iso_week_day__lte
        required: false
        in: query
        description: timestamp__iso_week_day__lte
        schema:
          type: string
      - name: timestamp__iso_week_day__range
        required: false
        in: query
        description: timestamp__iso_week_day__range
        schema:
          type: string
      - name: timestamp__iso_week_day__regex
        required: false
        in: query
        description: timestamp__iso_week_day__regex
        schema:
          type: string
      - name: timestamp__iso_week_day__startswith
        required: false
        in: query
        description: timestamp__iso_week_day__startswith
        schema:
          type: string
      - name: timestamp__iso_year
        required: false
        in: query
        description: timestamp__iso_year
        schema:
          type: string
      - name: timestamp__iso_year__contained_by
        required: false
        in: query
        description: timestamp__iso_year__contained_by
        schema:
          type: string
      - name: timestamp__iso_year__contains
        required: false
        in: query
        description: timestamp__iso_year__contains
        schema:
          type: string
      - name: timestamp__iso_year__endswith
        required: false
        in: query
        description: timestamp__iso_year__endswith
        schema:
          type: string
      - name: timestamp__iso_year__gt
        required: false
        in: query
        description: timestamp__iso_year__gt
        schema:
          type: string
      - name: timestamp__iso_year__gte
        required: false
        in: query
        description: timestamp__iso_year__gte
        schema:
          type: string
      - name: timestamp__iso_year__icontains
        required: false
        in: query
        description: timestamp__iso_year__icontains
        schema:
          type: string
      - name: timestamp__iso_year__iendswith
        required: false
        in: query
        description: timestamp__iso_year__iendswith
        schema:
          type: string
      - name: timestamp__iso_year__iexact
        required: false
        in: query
        description: timestamp__iso_year__iexact
        schema:
          type: string
      - name: timestamp__iso_year__in
        required: false
        in: query
        description: timestamp__iso_year__in
        schema:
          type: string
      - name: timestamp__iso_year__iregex
        required: false
        in: query
        description: timestamp__iso_year__iregex
        schema:
          type: string
      - name: timestamp__iso_year__isnull
        required: false
        in: query
        description: timestamp__iso_year__isnull
        schema:
          type: string
      - name: timestamp__iso_year__istartswith
        required: false
        in: query
        description: timestamp__iso_year__istartswith
        schema:
          type: string
      - name: timestamp__iso_year__lt
        required: false
        in: query
        description: timestamp__iso_year__lt
        schema:
          type: string
      - name: timestamp__iso_year__lte
        required: false
        in: query
        description: timestamp__iso_year__lte
        schema:
          type: string
      - name: timestamp__iso_year__range
        required: false
        in: query
        description: timestamp__iso_year__range
        schema:
          type: string
      - name: timestamp__iso_year__regex
        required: false
        in: query
        description: timestamp__iso_year__regex
        schema:
          type: string
      - name: timestamp__iso_year__startswith
        required: false
        in: query
        description: timestamp__iso_year__startswith
        schema:
          type: string
      - name: timestamp__istartswith
        required: false
        in: query
        description: timestamp__istartswith
        schema:
          type: string
      - name: timestamp__lt
        required: false
        in: query
        description: timestamp__lt
        schema:
          type: string
      - name: timestamp__lte
        required: false
        in: query
        description: timestamp__lte
        schema:
          type: string
      - name: timestamp__minute
        required: false
        in: query
        description: timestamp__minute
        schema:
          type: string
      - name: timestamp__minute__contained_by
        required: false
        in: query
        description: timestamp__minute__contained_by
        schema:
          type: string
      - name: timestamp__minute__contains
        required: false
        in: query
        description: timestamp__minute__contains
        schema:
          type: string
      - name: timestamp__minute__endswith
        required: false
        in: query
        description: timestamp__minute__endswith
        schema:
          type: string
      - name: timestamp__minute__gt
        required: false
        in: query
        description: timestamp__minute__gt
        schema:
          type: string
      - name: timestamp__minute__gte
        required: false
        in: query
        description: timestamp__minute__gte
        schema:
          type: string
      - name: timestamp__minute__icontains
        required: false
        in: query
        description: timestamp__minute__icontains
        schema:
          type: string
      - name: timestamp__minute__iendswith
        required: false
        in: query
        description: timestamp__minute__iendswith
        schema:
          type: string
      - name: timestamp__minute__iexact
        required: false
        in: query
        description: timestamp__minute__iexact
        schema:
          type: string
      - name: timestamp__minute__in
        required: false
        in: query
        description: timestamp__minute__in
        schema:
          type: string
      - name: timestamp__minute__iregex
        required: false
        in: query
        description: timestamp__minute__iregex
        schema:
          type: string
      - name: timestamp__minute__isnull
        required: false
        in: query
        description: timestamp__minute__isnull
        schema:
          type: string
      - name: timestamp__minute__istartswith
        required: false
        in: query
        description: timestamp__minute__istartswith
        schema:
          type: string
      - name: timestamp__minute__lt
        required: false
        in: query
        description: timestamp__minute__lt
        schema:
          type: string
      - name: timestamp__minute__lte
        required: false
        in: query
        description: timestamp__minute__lte
        schema:
          type: string
      - name: timestamp__minute__range
        required: false
        in: query
        description: timestamp__minute__range
        schema:
          type: string
      - name: timestamp__minute__regex
        required: false
        in: query
        description: timestamp__minute__regex
        schema:
          type: string
      - name: timestamp__minute__startswith
        required: false
        in: query
        description: timestamp__minute__startswith
        schema:
          type: string
      - name: timestamp__month
        required: false
        in: query
        description: timestamp__month
        schema:
          type: string
      - name: timestamp__month__contained_by
        required: false
        in: query
        description: timestamp__month__contained_by
        schema:
          type: string
      - name: timestamp__month__contains
        required: false
        in: query
        description: timestamp__month__contains
        schema:
          type: string
      - name: timestamp__month__endswith
        required: false
        in: query
        description: timestamp__month__endswith
        schema:
          type: string
      - name: timestamp__month__gt
        required: false
        in: query
        description: timestamp__month__gt
        schema:
          type: string
      - name: timestamp__month__gte
        required: false
        in: query
        description: timestamp__month__gte
        schema:
          type: string
      - name: timestamp__month__icontains
        required: false
        in: query
        description: timestamp__month__icontains
        schema:
          type: string
      - name: timestamp__month__iendswith
        required: false
        in: query
        description: timestamp__month__iendswith
        schema:
          type: string
      - name: timestamp__month__iexact
        required: false
        in: query
        description: timestamp__month__iexact
        schema:
          type: string
      - name: timestamp__month__in
        required: false
        in: query
        description: timestamp__month__in
        schema:
          type: string
      - name: timestamp__month__iregex
        required: false
        in: query
        description: timestamp__month__iregex
        schema:
          type: string
      - name: timestamp__month__isnull
        required: false
        in: query
        description: timestamp__month__isnull
        schema:
          type: string
      - name: timestamp__month__istartswith
        required: false
        in: query
        description: timestamp__month__istartswith
        schema:
          type: string
      - name: timestamp__month__lt
        required: false
        in: query
        description: timestamp__month__lt
        schema:
          type: string
      - name: timestamp__month__lte
        required: false
        in: query
        description: timestamp__month__lte
        schema:
          type: string
      - name: timestamp__month__range
        required: false
        in: query
        description: timestamp__month__range
        schema:
          type: string
      - name: timestamp__month__regex
        required: false
        in: query
        description: timestamp__month__regex
        schema:
          type: string
      - name: timestamp__month__startswith
        required: false
        in: query
        description: timestamp__month__startswith
        schema:
          type: string
      - name: timestamp__quarter
        required: false
        in: query
        description: timestamp__quarter
        schema:
          type: string
      - name: timestamp__quarter__contained_by
        required: false
        in: query
        description: timestamp__quarter__contained_by
        schema:
          type: string
      - name: timestamp__quarter__contains
        required: false
        in: query
        description: timestamp__quarter__contains
        schema:
          type: string
      - name: timestamp__quarter__endswith
        required: false
        in: query
        description: timestamp__quarter__endswith
        schema:
          type: string
      - name: timestamp__quarter__gt
        required: false
        in: query
        description: timestamp__quarter__gt
        schema:
          type: string
      - name: timestamp__quarter__gte
        required: false
        in: query
        description: timestamp__quarter__gte
        schema:
          type: string
      - name: timestamp__quarter__icontains
        required: false
        in: query
        description: timestamp__quarter__icontains
        schema:
          type: string
      - name: timestamp__quarter__iendswith
        required: false
        in: query
        description: timestamp__quarter__iendswith
        schema:
          type: string
      - name: timestamp__quarter__iexact
        required: false
        in: query
        description: timestamp__quarter__iexact
        schema:
          type: string
      - name: timestamp__quarter__in
        required: false
        in: query
        description: timestamp__quarter__in
        schema:
          type: string
      - name: timestamp__quarter__iregex
        required: false
        in: query
        description: timestamp__quarter__iregex
        schema:
          type: string
      - name: timestamp__quarter__isnull
        required: false
        in: query
        description: timestamp__quarter__isnull
        schema:
          type: string
      - name: timestamp__quarter__istartswith
        required: false
        in: query
        description: timestamp__quarter__istartswith
        schema:
          type: string
      - name: timestamp__quarter__lt
        required: false
        in: query
        description: timestamp__quarter__lt
        schema:
          type: string
      - name: timestamp__quarter__lte
        required: false
        in: query
        description: timestamp__quarter__lte
        schema:
          type: string
      - name: timestamp__quarter__range
        required: false
        in: query
        description: timestamp__quarter__range
        schema:
          type: string
      - name: timestamp__quarter__regex
        required: false
        in: query
        description: timestamp__quarter__regex
        schema:
          type: string
      - name: timestamp__quarter__startswith
        required: false
        in: query
        description: timestamp__quarter__startswith
        schema:
          type: string
      - name: timestamp__range
        required: false
        in: query
        description: timestamp__range
        schema:
          type: string
      - name: timestamp__regex
        required: false
        in: query
        description: timestamp__regex
        schema:
          type: string
      - name: timestamp__second
        required: false
        in: query
        description: timestamp__second
        schema:
          type: string
      - name: timestamp__second__contained_by
        required: false
        in: query
        description: timestamp__second__contained_by
        schema:
          type: string
      - name: timestamp__second__contains
        required: false
        in: query
        description: timestamp__second__contains
        schema:
          type: string
      - name: timestamp__second__endswith
        required: false
        in: query
        description: timestamp__second__endswith
        schema:
          type: string
      - name: timestamp__second__gt
        required: false
        in: query
        description: timestamp__second__gt
        schema:
          type: string
      - name: timestamp__second__gte
        required: false
        in: query
        description: timestamp__second__gte
        schema:
          type: string
      - name: timestamp__second__icontains
        required: false
        in: query
        description: timestamp__second__icontains
        schema:
          type: string
      - name: timestamp__second__iendswith
        required: false
        in: query
        description: timestamp__second__iendswith
        schema:
          type: string
      - name: timestamp__second__iexact
        required: false
        in: query
        description: timestamp__second__iexact
        schema:
          type: string
      - name: timestamp__second__in
        required: false
        in: query
        description: timestamp__second__in
        schema:
          type: string
      - name: timestamp__second__iregex
        required: false
        in: query
        description: timestamp__second__iregex
        schema:
          type: string
      - name: timestamp__second__isnull
        required: false
        in: query
        description: timestamp__second__isnull
        schema:
          type: string
      - name: timestamp__second__istartswith
        required: false
        in: query
        description: timestamp__second__istartswith
        schema:
          type: string
      - name: timestamp__second__lt
        required: false
        in: query
        description: timestamp__second__lt
        schema:
          type: string
      - name: timestamp__second__lte
        required: false
        in: query
        description: timestamp__second__lte
        schema:
          type: string
      - name: timestamp__second__range
        required: false
        in: query
        description: timestamp__second__range
        schema:
          type: string
      - name: timestamp__second__regex
        required: false
        in: query
        description: timestamp__second__regex
        schema:
          type: string
      - name: timestamp__second__startswith
        required: false
        in: query
        description: timestamp__second__startswith
        schema:
          type: string
      - name: timestamp__startswith
        required: false
        in: query
        description: timestamp__startswith
        schema:
          type: string
      - name: timestamp__time
        required: false
        in: query
        description: timestamp__time
        schema:
          type: string
      - name: timestamp__time__contains
        required: false
        in: query
        description: timestamp__time__contains
        schema:
          type: string
      - name: timestamp__time__endswith
        required: false
        in: query
        description: timestamp__time__endswith
        schema:
          type: string
      - name: timestamp__time__gt
        required: false
        in: query
        description: timestamp__time__gt
        schema:
          type: string
      - name: timestamp__time__gte
        required: false
        in: query
        description: timestamp__time__gte
        schema:
          type: string
      - name: timestamp__time__hour
        required: false
        in: query
        description: timestamp__time__hour
        schema:
          type: string
      - name: timestamp__time__hour__contained_by
        required: false
        in: query
        description: timestamp__time__hour__contained_by
        schema:
          type: string
      - name: timestamp__time__hour__contains
        required: false
        in: query
        description: timestamp__time__hour__contains
        schema:
          type: string
      - name: timestamp__time__hour__endswith
        required: false
        in: query
        description: timestamp__time__hour__endswith
        schema:
          type: string
      - name: timestamp__time__hour__gt
        required: false
        in: query
        description: timestamp__time__hour__gt
        schema:
          type: string
      - name: timestamp__time__hour__gte
        required: false
        in: query
        description: timestamp__time__hour__gte
        schema:
          type: string
      - name: timestamp__time__hour__icontains
        required: false
        in: query
        description: timestamp__time__hour__icontains
        schema:
          type: string
      - name: timestamp__time__hour__iendswith
        required: false
        in: query
        description: timestamp__time__hour__iendswith
        schema:
          type: string
      - name: timestamp__time__hour__iexact
        required: false
        in: query
        description: timestamp__time__hour__iexact
        schema:
          type: string
      - name: timestamp__time__hour__in
        required: false
        in: query
        description: timestamp__time__hour__in
        schema:
          type: string
      - name: timestamp__time__hour__iregex
        required: false
        in: query
        description: timestamp__time__hour__iregex
        schema:
          type: string
      - name: timestamp__time__hour__isnull
        required: false
        in: query
        description: timestamp__time__hour__isnull
        schema:
          type: string
      - name: timestamp__time__hour__istartswith
        required: false
        in: query
        description: timestamp__time__hour__istartswith
        schema:
          type: string
      - name: timestamp__time__hour__lt
        required: false
        in: query
        description: timestamp__time__hour__lt
        schema:
          type: string
      - name: timestamp__time__hour__lte
        required: false
        in: query
        description: timestamp__time__hour__lte
        schema:
          type: string
      - name: timestamp__time__hour__range
        required: false
        in: query
        description: timestamp__time__hour__range
        schema:
          type: string
      - name: timestamp__time__hour__regex
        required: false
        in: query
        description: timestamp__time__hour__regex
        schema:
          type: string
      - name: timestamp__time__hour__startswith
        required: false
        in: query
        description: timestamp__time__hour__startswith
        schema:
          type: string
      - name: timestamp__time__icontains
        required: false
        in: query
        description: timestamp__time__icontains
        schema:
          type: string
      - name: timestamp__time__iendswith
        required: false
        in: query
        description: timestamp__time__iendswith
        schema:
          type: string
      - name: timestamp__time__iexact
        required: false
        in: query
        description: timestamp__time__iexact
        schema:
          type: string
      - name: timestamp__time__in
        required: false
        in: query
        description: timestamp__time__in
        schema:
          type: string
      - name: timestamp__time__iregex
        required: false
        in: query
        description: timestamp__time__iregex
        schema:
          type: string
      - name: timestamp__time__isnull
        required: false
        in: query
        description: timestamp__time__isnull
        schema:
          type: string
      - name: timestamp__time__istartswith
        required: false
        in: query
        description: timestamp__time__istartswith
        schema:
          type: string
      - name: timestamp__time__lt
        required: false
        in: query
        description: timestamp__time__lt
        schema:
          type: string
      - name: timestamp__time__lte
        required: false
        in: query
        description: timestamp__time__lte
        schema:
          type: string
      - name: timestamp__time__minute
        required: false
        in: query
        description: timestamp__time__minute
        schema:
          type: string
      - name: timestamp__time__minute__contained_by
        required: false
        in: query
        description: timestamp__time__minute__contained_by
        schema:
          type: string
      - name: timestamp__time__minute__contains
        required: false
        in: query
        description: timestamp__time__minute__contains
        schema:
          type: string
      - name: timestamp__time__minute__endswith
        required: false
        in: query
        description: timestamp__time__minute__endswith
        schema:
          type: string
      - name: timestamp__time__minute__gt
        required: false
        in: query
        description: timestamp__time__minute__gt
        schema:
          type: string
      - name: timestamp__time__minute__gte
        required: false
        in: query
        description: timestamp__time__minute__gte
        schema:
          type: string
      - name: timestamp__time__minute__icontains
        required: false
        in: query
        description: timestamp__time__minute__icontains
        schema:
          type: string
      - name: timestamp__time__minute__iendswith
        required: false
        in: query
        description: timestamp__time__minute__iendswith
        schema:
          type: string
      - name: timestamp__time__minute__iexact
        required: false
        in: query
        description: timestamp__time__minute__iexact
        schema:
          type: string
      - name: timestamp__time__minute__in
        required: false
        in: query
        description: timestamp__time__minute__in
        schema:
          type: string
      - name: timestamp__time__minute__iregex
        required: false
        in: query
        description: timestamp__time__minute__iregex
        schema:
          type: string
      - name: timestamp__time__minute__isnull
        required: false
        in: query
        description: timestamp__time__minute__isnull
        schema:
          type: string
      - name: timestamp__time__minute__istartswith
        required: false
        in: query
        description: timestamp__time__minute__istartswith
        schema:
          type: string
      - name: timestamp__time__minute__lt
        required: false
        in: query
        description: timestamp__time__minute__lt
        schema:
          type: string
      - name: timestamp__time__minute__lte
        required: false
        in: query
        description: timestamp__time__minute__lte
        schema:
          type: string
      - name: timestamp__time__minute__range
        required: false
        in: query
        description: timestamp__time__minute__range
        schema:
          type: string
      - name: timestamp__time__minute__regex
        required: false
        in: query
        description: timestamp__time__minute__regex
        schema:
          type: string
      - name: timestamp__time__minute__startswith
        required: false
        in: query
        description: timestamp__time__minute__startswith
        schema:
          type: string
      - name: timestamp__time__range
        required: false
        in: query
        description: timestamp__time__range
        schema:
          type: string
      - name: timestamp__time__regex
        required: false
        in: query
        description: timestamp__time__regex
        schema:
          type: string
      - name: timestamp__time__second
        required: false
        in: query
        description: timestamp__time__second
        schema:
          type: string
      - name: timestamp__time__second__contained_by
        required: false
        in: query
        description: timestamp__time__second__contained_by
        schema:
          type: string
      - name: timestamp__time__second__contains
        required: false
        in: query
        description: timestamp__time__second__contains
        schema:
          type: string
      - name: timestamp__time__second__endswith
        required: false
        in: query
        description: timestamp__time__second__endswith
        schema:
          type: string
      - name: timestamp__time__second__gt
        required: false
        in: query
        description: timestamp__time__second__gt
        schema:
          type: string
      - name: timestamp__time__second__gte
        required: false
        in: query
        description: timestamp__time__second__gte
        schema:
          type: string
      - name: timestamp__time__second__icontains
        required: false
        in: query
        description: timestamp__time__second__icontains
        schema:
          type: string
      - name: timestamp__time__second__iendswith
        required: false
        in: query
        description: timestamp__time__second__iendswith
        schema:
          type: string
      - name: timestamp__time__second__iexact
        required: false
        in: query
        description: timestamp__time__second__iexact
        schema:
          type: string
      - name: timestamp__time__second__in
        required: false
        in: query
        description: timestamp__time__second__in
        schema:
          type: string
      - name: timestamp__time__second__iregex
        required: false
        in: query
        description: timestamp__time__second__iregex
        schema:
          type: string
      - name: timestamp__time__second__isnull
        required: false
        in: query
        description: timestamp__time__second__isnull
        schema:
          type: string
      - name: timestamp__time__second__istartswith
        required: false
        in: query
        description: timestamp__time__second__istartswith
        schema:
          type: string
      - name: timestamp__time__second__lt
        required: false
        in: query
        description: timestamp__time__second__lt
        schema:
          type: string
      - name: timestamp__time__second__lte
        required: false
        in: query
        description: timestamp__time__second__lte
        schema:
          type: string
      - name: timestamp__time__second__range
        required: false
        in: query
        description: timestamp__time__second__range
        schema:
          type: string
      - name: timestamp__time__second__regex
        required: false
        in: query
        description: timestamp__time__second__regex
        schema:
          type: string
      - name: timestamp__time__second__startswith
        required: false
        in: query
        description: timestamp__time__second__startswith
        schema:
          type: string
      - name: timestamp__time__startswith
        required: false
        in: query
        description: timestamp__time__startswith
        schema:
          type: string
      - name: timestamp__week
        required: false
        in: query
        description: timestamp__week
        schema:
          type: string
      - name: timestamp__week__contained_by
        required: false
        in: query
        description: timestamp__week__contained_by
        schema:
          type: string
      - name: timestamp__week__contains
        required: false
        in: query
        description: timestamp__week__contains
        schema:
          type: string
      - name: timestamp__week__endswith
        required: false
        in: query
        description: timestamp__week__endswith
        schema:
          type: string
      - name: timestamp__week__gt
        required: false
        in: query
        description: timestamp__week__gt
        schema:
          type: string
      - name: timestamp__week__gte
        required: false
        in: query
        description: timestamp__week__gte
        schema:
          type: string
      - name: timestamp__week__icontains
        required: false
        in: query
        description: timestamp__week__icontains
        schema:
          type: string
      - name: timestamp__week__iendswith
        required: false
        in: query
        description: timestamp__week__iendswith
        schema:
          type: string
      - name: timestamp__week__iexact
        required: false
        in: query
        description: timestamp__week__iexact
        schema:
          type: string
      - name: timestamp__week__in
        required: false
        in: query
        description: timestamp__week__in
        schema:
          type: string
      - name: timestamp__week__iregex
        required: false
        in: query
        description: timestamp__week__iregex
        schema:
          type: string
      - name: timestamp__week__isnull
        required: false
        in: query
        description: timestamp__week__isnull
        schema:
          type: string
      - name: timestamp__week__istartswith
        required: false
        in: query
        description: timestamp__week__istartswith
        schema:
          type: string
      - name: timestamp__week__lt
        required: false
        in: query
        description: timestamp__week__lt
        schema:
          type: string
      - name: timestamp__week__lte
        required: false
        in: query
        description: timestamp__week__lte
        schema:
          type: string
      - name: timestamp__week__range
        required: false
        in: query
        description: timestamp__week__range
        schema:
          type: string
      - name: timestamp__week__regex
        required: false
        in: query
        description: timestamp__week__regex
        schema:
          type: string
      - name: timestamp__week__startswith
        required: false
        in: query
        description: timestamp__week__startswith
        schema:
          type: string
      - name: timestamp__week_day
        required: false
        in: query
        description: timestamp__week_day
        schema:
          type: string
      - name: timestamp__week_day__contained_by
        required: false
        in: query
        description: timestamp__week_day__contained_by
        schema:
          type: string
      - name: timestamp__week_day__contains
        required: false
        in: query
        description: timestamp__week_day__contains
        schema:
          type: string
      - name: timestamp__week_day__endswith
        required: false
        in: query
        description: timestamp__week_day__endswith
        schema:
          type: string
      - name: timestamp__week_day__gt
        required: false
        in: query
        description: timestamp__week_day__gt
        schema:
          type: string
      - name: timestamp__week_day__gte
        required: false
        in: query
        description: timestamp__week_day__gte
        schema:
          type: string
      - name: timestamp__week_day__icontains
        required: false
        in: query
        description: timestamp__week_day__icontains
        schema:
          type: string
      - name: timestamp__week_day__iendswith
        required: false
        in: query
        description: timestamp__week_day__iendswith
        schema:
          type: string
      - name: timestamp__week_day__iexact
        required: false
        in: query
        description: timestamp__week_day__iexact
        schema:
          type: string
      - name: timestamp__week_day__in
        required: false
        in: query
        description: timestamp__week_day__in
        schema:
          type: string
      - name: timestamp__week_day__iregex
        required: false
        in: query
        description: timestamp__week_day__iregex
        schema:
          type: string
      - name: timestamp__week_day__isnull
        required: false
        in: query
        description: timestamp__week_day__isnull
        schema:
          type: string
      - name: timestamp__week_day__istartswith
        required: false
        in: query
        description: timestamp__week_day__istartswith
        schema:
          type: string
      - name: timestamp__week_day__lt
        required: false
        in: query
        description: timestamp__week_day__lt
        schema:
          type: string
      - name: timestamp__week_day__lte
        required: false
        in: query
        description: timestamp__week_day__lte
        schema:
          type: string
      - name: timestamp__week_day__range
        required: false
        in: query
        description: timestamp__week_day__range
        schema:
          type: string
      - name: timestamp__week_day__regex
        required: false
        in: query
        description: timestamp__week_day__regex
        schema:
          type: string
      - name: timestamp__week_day__startswith
        required: false
        in: query
        description: timestamp__week_day__startswith
        schema:
          type: string
      - name: timestamp__year
        required: false
        in: query
        description: timestamp__year
        schema:
          type: string
      - name: timestamp__year__contained_by
        required: false
        in: query
        description: timestamp__year__contained_by
        schema:
          type: string
      - name: timestamp__year__contains
        required: false
        in: query
        description: timestamp__year__contains
        schema:
          type: string
      - name: timestamp__year__endswith
        required: false
        in: query
        description: timestamp__year__endswith
        schema:
          type: string
      - name: timestamp__year__gt
        required: false
        in: query
        description: timestamp__year__gt
        schema:
          type: string
      - name: timestamp__year__gte
        required: false
        in: query
        description: timestamp__year__gte
        schema:
          type: string
      - name: timestamp__year__icontains
        required: false
        in: query
        description: timestamp__year__icontains
        schema:
          type: string
      - name: timestamp__year__iendswith
        required: false
        in: query
        description: timestamp__year__iendswith
        schema:
          type: string
      - name: timestamp__year__iexact
        required: false
        in: query
        description: timestamp__year__iexact
        schema:
          type: string
      - name: timestamp__year__in
        required: false
        in: query
        description: timestamp__year__in
        schema:
          type: string
      - name: timestamp__year__iregex
        required: false
        in: query
        description: timestamp__year__iregex
        schema:
          type: string
      - name: timestamp__year__isnull
        required: false
        in: query
        description: timestamp__year__isnull
        schema:
          type: string
      - name: timestamp__year__istartswith
        required: false
        in: query
        description: timestamp__year__istartswith
        schema:
          type: string
      - name: timestamp__year__lt
        required: false
        in: query
        description: timestamp__year__lt
        schema:
          type: string
      - name: timestamp__year__lte
        required: false
        in: query
        description: timestamp__year__lte
        schema:
          type: string
      - name: timestamp__year__range
        required: false
        in: query
        description: timestamp__year__range
        schema:
          type: string
      - name: timestamp__year__regex
        required: false
        in: query
        description: timestamp__year__regex
        schema:
          type: string
      - name: timestamp__year__startswith
        required: false
        in: query
        description: timestamp__year__startswith
        schema:
          type: string
      - name: trip
        required: false
        in: query
        description: trip
        schema:
          type: string
      - name: vehicle_tracking_status
        required: false
        in: query
        description: vehicle_tracking_status
        schema:
          type: string
      tags:
      - transport-vehicle-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleTrackingList'
          description: ''
    post:
      operationId: transport_vehicle_tracking_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-vehicle-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
  /api/transport-vehicle-tracking/{id}/:
    get:
      operationId: transport_vehicle_tracking_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle tracking.
        required: true
      tags:
      - transport-vehicle-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
    put:
      operationId: transport_vehicle_tracking_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle tracking.
        required: true
      tags:
      - transport-vehicle-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
    patch:
      operationId: transport_vehicle_tracking_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle tracking.
        required: true
      tags:
      - transport-vehicle-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicleTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicleTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicleTracking'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
    delete:
      operationId: transport_vehicle_tracking_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle tracking.
        required: true
      tags:
      - transport-vehicle-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-vehicle-tracking/current_location/:
    get:
      operationId: transport_vehicle_tracking_current_location_retrieve
      description: Get the latest tracking information for a trip (live driver location)
      tags:
      - transport-vehicle-tracking
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
  /api/transport-vehicle-tracking/update_location/:
    post:
      operationId: transport_vehicle_tracking_update_location_create
      description: Update the current location of a vehicle on a trip
      tags:
      - transport-vehicle-tracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleTracking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTracking'
          description: ''
  /api/transport-vehicles/:
    get:
      operationId: transport_vehicles_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: address_proof
        required: false
        in: query
        description: address_proof
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__contained_by
        required: false
        in: query
        description: end_date__contained_by
        schema:
          type: string
      - name: end_date__contains
        required: false
        in: query
        description: end_date__contains
        schema:
          type: string
      - name: end_date__day
        required: false
        in: query
        description: end_date__day
        schema:
          type: string
      - name: end_date__day__contained_by
        required: false
        in: query
        description: end_date__day__contained_by
        schema:
          type: string
      - name: end_date__day__contains
        required: false
        in: query
        description: end_date__day__contains
        schema:
          type: string
      - name: end_date__day__endswith
        required: false
        in: query
        description: end_date__day__endswith
        schema:
          type: string
      - name: end_date__day__gt
        required: false
        in: query
        description: end_date__day__gt
        schema:
          type: string
      - name: end_date__day__gte
        required: false
        in: query
        description: end_date__day__gte
        schema:
          type: string
      - name: end_date__day__icontains
        required: false
        in: query
        description: end_date__day__icontains
        schema:
          type: string
      - name: end_date__day__iendswith
        required: false
        in: query
        description: end_date__day__iendswith
        schema:
          type: string
      - name: end_date__day__iexact
        required: false
        in: query
        description: end_date__day__iexact
        schema:
          type: string
      - name: end_date__day__in
        required: false
        in: query
        description: end_date__day__in
        schema:
          type: string
      - name: end_date__day__iregex
        required: false
        in: query
        description: end_date__day__iregex
        schema:
          type: string
      - name: end_date__day__isnull
        required: false
        in: query
        description: end_date__day__isnull
        schema:
          type: string
      - name: end_date__day__istartswith
        required: false
        in: query
        description: end_date__day__istartswith
        schema:
          type: string
      - name: end_date__day__lt
        required: false
        in: query
        description: end_date__day__lt
        schema:
          type: string
      - name: end_date__day__lte
        required: false
        in: query
        description: end_date__day__lte
        schema:
          type: string
      - name: end_date__day__range
        required: false
        in: query
        description: end_date__day__range
        schema:
          type: string
      - name: end_date__day__regex
        required: false
        in: query
        description: end_date__day__regex
        schema:
          type: string
      - name: end_date__day__startswith
        required: false
        in: query
        description: end_date__day__startswith
        schema:
          type: string
      - name: end_date__endswith
        required: false
        in: query
        description: end_date__endswith
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__gte
        required: false
        in: query
        description: end_date__gte
        schema:
          type: string
      - name: end_date__icontains
        required: false
        in: query
        description: end_date__icontains
        schema:
          type: string
      - name: end_date__iendswith
        required: false
        in: query
        description: end_date__iendswith
        schema:
          type: string
      - name: end_date__iexact
        required: false
        in: query
        description: end_date__iexact
        schema:
          type: string
      - name: end_date__in
        required: false
        in: query
        description: end_date__in
        schema:
          type: string
      - name: end_date__iregex
        required: false
        in: query
        description: end_date__iregex
        schema:
          type: string
      - name: end_date__isnull
        required: false
        in: query
        description: end_date__isnull
        schema:
          type: string
      - name: end_date__iso_week_day
        required: false
        in: query
        description: end_date__iso_week_day
        schema:
          type: string
      - name: end_date__iso_week_day__contained_by
        required: false
        in: query
        description: end_date__iso_week_day__contained_by
        schema:
          type: string
      - name: end_date__iso_week_day__contains
        required: false
        in: query
        description: end_date__iso_week_day__contains
        schema:
          type: string
      - name: end_date__iso_week_day__endswith
        required: false
        in: query
        description: end_date__iso_week_day__endswith
        schema:
          type: string
      - name: end_date__iso_week_day__gt
        required: false
        in: query
        description: end_date__iso_week_day__gt
        schema:
          type: string
      - name: end_date__iso_week_day__gte
        required: false
        in: query
        description: end_date__iso_week_day__gte
        schema:
          type: string
      - name: end_date__iso_week_day__icontains
        required: false
        in: query
        description: end_date__iso_week_day__icontains
        schema:
          type: string
      - name: end_date__iso_week_day__iendswith
        required: false
        in: query
        description: end_date__iso_week_day__iendswith
        schema:
          type: string
      - name: end_date__iso_week_day__iexact
        required: false
        in: query
        description: end_date__iso_week_day__iexact
        schema:
          type: string
      - name: end_date__iso_week_day__in
        required: false
        in: query
        description: end_date__iso_week_day__in
        schema:
          type: string
      - name: end_date__iso_week_day__iregex
        required: false
        in: query
        description: end_date__iso_week_day__iregex
        schema:
          type: string
      - name: end_date__iso_week_day__isnull
        required: false
        in: query
        description: end_date__iso_week_day__isnull
        schema:
          type: string
      - name: end_date__iso_week_day__istartswith
        required: false
        in: query
        description: end_date__iso_week_day__istartswith
        schema:
          type: string
      - name: end_date__iso_week_day__lt
        required: false
        in: query
        description: end_date__iso_week_day__lt
        schema:
          type: string
      - name: end_date__iso_week_day__lte
        required: false
        in: query
        description: end_date__iso_week_day__lte
        schema:
          type: string
      - name: end_date__iso_week_day__range
        required: false
        in: query
        description: end_date__iso_week_day__range
        schema:
          type: string
      - name: end_date__iso_week_day__regex
        required: false
        in: query
        description: end_date__iso_week_day__regex
        schema:
          type: string
      - name: end_date__iso_week_day__startswith
        required: false
        in: query
        description: end_date__iso_week_day__startswith
        schema:
          type: string
      - name: end_date__iso_year
        required: false
        in: query
        description: end_date__iso_year
        schema:
          type: string
      - name: end_date__iso_year__contained_by
        required: false
        in: query
        description: end_date__iso_year__contained_by
        schema:
          type: string
      - name: end_date__iso_year__contains
        required: false
        in: query
        description: end_date__iso_year__contains
        schema:
          type: string
      - name: end_date__iso_year__endswith
        required: false
        in: query
        description: end_date__iso_year__endswith
        schema:
          type: string
      - name: end_date__iso_year__gt
        required: false
        in: query
        description: end_date__iso_year__gt
        schema:
          type: string
      - name: end_date__iso_year__gte
        required: false
        in: query
        description: end_date__iso_year__gte
        schema:
          type: string
      - name: end_date__iso_year__icontains
        required: false
        in: query
        description: end_date__iso_year__icontains
        schema:
          type: string
      - name: end_date__iso_year__iendswith
        required: false
        in: query
        description: end_date__iso_year__iendswith
        schema:
          type: string
      - name: end_date__iso_year__iexact
        required: false
        in: query
        description: end_date__iso_year__iexact
        schema:
          type: string
      - name: end_date__iso_year__in
        required: false
        in: query
        description: end_date__iso_year__in
        schema:
          type: string
      - name: end_date__iso_year__iregex
        required: false
        in: query
        description: end_date__iso_year__iregex
        schema:
          type: string
      - name: end_date__iso_year__isnull
        required: false
        in: query
        description: end_date__iso_year__isnull
        schema:
          type: string
      - name: end_date__iso_year__istartswith
        required: false
        in: query
        description: end_date__iso_year__istartswith
        schema:
          type: string
      - name: end_date__iso_year__lt
        required: false
        in: query
        description: end_date__iso_year__lt
        schema:
          type: string
      - name: end_date__iso_year__lte
        required: false
        in: query
        description: end_date__iso_year__lte
        schema:
          type: string
      - name: end_date__iso_year__range
        required: false
        in: query
        description: end_date__iso_year__range
        schema:
          type: string
      - name: end_date__iso_year__regex
        required: false
        in: query
        description: end_date__iso_year__regex
        schema:
          type: string
      - name: end_date__iso_year__startswith
        required: false
        in: query
        description: end_date__iso_year__startswith
        schema:
          type: string
      - name: end_date__istartswith
        required: false
        in: query
        description: end_date__istartswith
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: end_date__lte
        required: false
        in: query
        description: end_date__lte
        schema:
          type: string
      - name: end_date__month
        required: false
        in: query
        description: end_date__month
        schema:
          type: string
      - name: end_date__month__contained_by
        required: false
        in: query
        description: end_date__month__contained_by
        schema:
          type: string
      - name: end_date__month__contains
        required: false
        in: query
        description: end_date__month__contains
        schema:
          type: string
      - name: end_date__month__endswith
        required: false
        in: query
        description: end_date__month__endswith
        schema:
          type: string
      - name: end_date__month__gt
        required: false
        in: query
        description: end_date__month__gt
        schema:
          type: string
      - name: end_date__month__gte
        required: false
        in: query
        description: end_date__month__gte
        schema:
          type: string
      - name: end_date__month__icontains
        required: false
        in: query
        description: end_date__month__icontains
        schema:
          type: string
      - name: end_date__month__iendswith
        required: false
        in: query
        description: end_date__month__iendswith
        schema:
          type: string
      - name: end_date__month__iexact
        required: false
        in: query
        description: end_date__month__iexact
        schema:
          type: string
      - name: end_date__month__in
        required: false
        in: query
        description: end_date__month__in
        schema:
          type: string
      - name: end_date__month__iregex
        required: false
        in: query
        description: end_date__month__iregex
        schema:
          type: string
      - name: end_date__month__isnull
        required: false
        in: query
        description: end_date__month__isnull
        schema:
          type: string
      - name: end_date__month__istartswith
        required: false
        in: query
        description: end_date__month__istartswith
        schema:
          type: string
      - name: end_date__month__lt
        required: false
        in: query
        description: end_date__month__lt
        schema:
          type: string
      - name: end_date__month__lte
        required: false
        in: query
        description: end_date__month__lte
        schema:
          type: string
      - name: end_date__month__range
        required: false
        in: query
        description: end_date__month__range
        schema:
          type: string
      - name: end_date__month__regex
        required: false
        in: query
        description: end_date__month__regex
        schema:
          type: string
      - name: end_date__month__startswith
        required: false
        in: query
        description: end_date__month__startswith
        schema:
          type: string
      - name: end_date__quarter
        required: false
        in: query
        description: end_date__quarter
        schema:
          type: string
      - name: end_date__quarter__contained_by
        required: false
        in: query
        description: end_date__quarter__contained_by
        schema:
          type: string
      - name: end_date__quarter__contains
        required: false
        in: query
        description: end_date__quarter__contains
        schema:
          type: string
      - name: end_date__quarter__endswith
        required: false
        in: query
        description: end_date__quarter__endswith
        schema:
          type: string
      - name: end_date__quarter__gt
        required: false
        in: query
        description: end_date__quarter__gt
        schema:
          type: string
      - name: end_date__quarter__gte
        required: false
        in: query
        description: end_date__quarter__gte
        schema:
          type: string
      - name: end_date__quarter__icontains
        required: false
        in: query
        description: end_date__quarter__icontains
        schema:
          type: string
      - name: end_date__quarter__iendswith
        required: false
        in: query
        description: end_date__quarter__iendswith
        schema:
          type: string
      - name: end_date__quarter__iexact
        required: false
        in: query
        description: end_date__quarter__iexact
        schema:
          type: string
      - name: end_date__quarter__in
        required: false
        in: query
        description: end_date__quarter__in
        schema:
          type: string
      - name: end_date__quarter__iregex
        required: false
        in: query
        description: end_date__quarter__iregex
        schema:
          type: string
      - name: end_date__quarter__isnull
        required: false
        in: query
        description: end_date__quarter__isnull
        schema:
          type: string
      - name: end_date__quarter__istartswith
        required: false
        in: query
        description: end_date__quarter__istartswith
        schema:
          type: string
      - name: end_date__quarter__lt
        required: false
        in: query
        description: end_date__quarter__lt
        schema:
          type: string
      - name: end_date__quarter__lte
        required: false
        in: query
        description: end_date__quarter__lte
        schema:
          type: string
      - name: end_date__quarter__range
        required: false
        in: query
        description: end_date__quarter__range
        schema:
          type: string
      - name: end_date__quarter__regex
        required: false
        in: query
        description: end_date__quarter__regex
        schema:
          type: string
      - name: end_date__quarter__startswith
        required: false
        in: query
        description: end_date__quarter__startswith
        schema:
          type: string
      - name: end_date__range
        required: false
        in: query
        description: end_date__range
        schema:
          type: string
      - name: end_date__regex
        required: false
        in: query
        description: end_date__regex
        schema:
          type: string
      - name: end_date__startswith
        required: false
        in: query
        description: end_date__startswith
        schema:
          type: string
      - name: end_date__week
        required: false
        in: query
        description: end_date__week
        schema:
          type: string
      - name: end_date__week__contained_by
        required: false
        in: query
        description: end_date__week__contained_by
        schema:
          type: string
      - name: end_date__week__contains
        required: false
        in: query
        description: end_date__week__contains
        schema:
          type: string
      - name: end_date__week__endswith
        required: false
        in: query
        description: end_date__week__endswith
        schema:
          type: string
      - name: end_date__week__gt
        required: false
        in: query
        description: end_date__week__gt
        schema:
          type: string
      - name: end_date__week__gte
        required: false
        in: query
        description: end_date__week__gte
        schema:
          type: string
      - name: end_date__week__icontains
        required: false
        in: query
        description: end_date__week__icontains
        schema:
          type: string
      - name: end_date__week__iendswith
        required: false
        in: query
        description: end_date__week__iendswith
        schema:
          type: string
      - name: end_date__week__iexact
        required: false
        in: query
        description: end_date__week__iexact
        schema:
          type: string
      - name: end_date__week__in
        required: false
        in: query
        description: end_date__week__in
        schema:
          type: string
      - name: end_date__week__iregex
        required: false
        in: query
        description: end_date__week__iregex
        schema:
          type: string
      - name: end_date__week__isnull
        required: false
        in: query
        description: end_date__week__isnull
        schema:
          type: string
      - name: end_date__week__istartswith
        required: false
        in: query
        description: end_date__week__istartswith
        schema:
          type: string
      - name: end_date__week__lt
        required: false
        in: query
        description: end_date__week__lt
        schema:
          type: string
      - name: end_date__week__lte
        required: false
        in: query
        description: end_date__week__lte
        schema:
          type: string
      - name: end_date__week__range
        required: false
        in: query
        description: end_date__week__range
        schema:
          type: string
      - name: end_date__week__regex
        required: false
        in: query
        description: end_date__week__regex
        schema:
          type: string
      - name: end_date__week__startswith
        required: false
        in: query
        description: end_date__week__startswith
        schema:
          type: string
      - name: end_date__week_day
        required: false
        in: query
        description: end_date__week_day
        schema:
          type: string
      - name: end_date__week_day__contained_by
        required: false
        in: query
        description: end_date__week_day__contained_by
        schema:
          type: string
      - name: end_date__week_day__contains
        required: false
        in: query
        description: end_date__week_day__contains
        schema:
          type: string
      - name: end_date__week_day__endswith
        required: false
        in: query
        description: end_date__week_day__endswith
        schema:
          type: string
      - name: end_date__week_day__gt
        required: false
        in: query
        description: end_date__week_day__gt
        schema:
          type: string
      - name: end_date__week_day__gte
        required: false
        in: query
        description: end_date__week_day__gte
        schema:
          type: string
      - name: end_date__week_day__icontains
        required: false
        in: query
        description: end_date__week_day__icontains
        schema:
          type: string
      - name: end_date__week_day__iendswith
        required: false
        in: query
        description: end_date__week_day__iendswith
        schema:
          type: string
      - name: end_date__week_day__iexact
        required: false
        in: query
        description: end_date__week_day__iexact
        schema:
          type: string
      - name: end_date__week_day__in
        required: false
        in: query
        description: end_date__week_day__in
        schema:
          type: string
      - name: end_date__week_day__iregex
        required: false
        in: query
        description: end_date__week_day__iregex
        schema:
          type: string
      - name: end_date__week_day__isnull
        required: false
        in: query
        description: end_date__week_day__isnull
        schema:
          type: string
      - name: end_date__week_day__istartswith
        required: false
        in: query
        description: end_date__week_day__istartswith
        schema:
          type: string
      - name: end_date__week_day__lt
        required: false
        in: query
        description: end_date__week_day__lt
        schema:
          type: string
      - name: end_date__week_day__lte
        required: false
        in: query
        description: end_date__week_day__lte
        schema:
          type: string
      - name: end_date__week_day__range
        required: false
        in: query
        description: end_date__week_day__range
        schema:
          type: string
      - name: end_date__week_day__regex
        required: false
        in: query
        description: end_date__week_day__regex
        schema:
          type: string
      - name: end_date__week_day__startswith
        required: false
        in: query
        description: end_date__week_day__startswith
        schema:
          type: string
      - name: end_date__year
        required: false
        in: query
        description: end_date__year
        schema:
          type: string
      - name: end_date__year__contained_by
        required: false
        in: query
        description: end_date__year__contained_by
        schema:
          type: string
      - name: end_date__year__contains
        required: false
        in: query
        description: end_date__year__contains
        schema:
          type: string
      - name: end_date__year__endswith
        required: false
        in: query
        description: end_date__year__endswith
        schema:
          type: string
      - name: end_date__year__gt
        required: false
        in: query
        description: end_date__year__gt
        schema:
          type: string
      - name: end_date__year__gte
        required: false
        in: query
        description: end_date__year__gte
        schema:
          type: string
      - name: end_date__year__icontains
        required: false
        in: query
        description: end_date__year__icontains
        schema:
          type: string
      - name: end_date__year__iendswith
        required: false
        in: query
        description: end_date__year__iendswith
        schema:
          type: string
      - name: end_date__year__iexact
        required: false
        in: query
        description: end_date__year__iexact
        schema:
          type: string
      - name: end_date__year__in
        required: false
        in: query
        description: end_date__year__in
        schema:
          type: string
      - name: end_date__year__iregex
        required: false
        in: query
        description: end_date__year__iregex
        schema:
          type: string
      - name: end_date__year__isnull
        required: false
        in: query
        description: end_date__year__isnull
        schema:
          type: string
      - name: end_date__year__istartswith
        required: false
        in: query
        description: end_date__year__istartswith
        schema:
          type: string
      - name: end_date__year__lt
        required: false
        in: query
        description: end_date__year__lt
        schema:
          type: string
      - name: end_date__year__lte
        required: false
        in: query
        description: end_date__year__lte
        schema:
          type: string
      - name: end_date__year__range
        required: false
        in: query
        description: end_date__year__range
        schema:
          type: string
      - name: end_date__year__regex
        required: false
        in: query
        description: end_date__year__regex
        schema:
          type: string
      - name: end_date__year__startswith
        required: false
        in: query
        description: end_date__year__startswith
        schema:
          type: string
      - name: fitness_certificate
        required: false
        in: query
        description: fitness_certificate
        schema:
          type: string
      - name: fitness_expiry_date
        required: false
        in: query
        description: fitness_expiry_date
        schema:
          type: string
      - name: fuel_capacity
        required: false
        in: query
        description: fuel_capacity
        schema:
          type: string
      - name: fuel_type
        required: false
        in: query
        description: fuel_type
        schema:
          type: string
      - name: insurance
        required: false
        in: query
        description: insurance
        schema:
          type: string
      - name: insurance_expiry_date
        required: false
        in: query
        description: insurance_expiry_date
        schema:
          type: string
      - name: joining_date
        required: false
        in: query
        description: joining_date
        schema:
          type: string
      - name: joining_date__contained_by
        required: false
        in: query
        description: joining_date__contained_by
        schema:
          type: string
      - name: joining_date__contains
        required: false
        in: query
        description: joining_date__contains
        schema:
          type: string
      - name: joining_date__day
        required: false
        in: query
        description: joining_date__day
        schema:
          type: string
      - name: joining_date__day__contained_by
        required: false
        in: query
        description: joining_date__day__contained_by
        schema:
          type: string
      - name: joining_date__day__contains
        required: false
        in: query
        description: joining_date__day__contains
        schema:
          type: string
      - name: joining_date__day__endswith
        required: false
        in: query
        description: joining_date__day__endswith
        schema:
          type: string
      - name: joining_date__day__gt
        required: false
        in: query
        description: joining_date__day__gt
        schema:
          type: string
      - name: joining_date__day__gte
        required: false
        in: query
        description: joining_date__day__gte
        schema:
          type: string
      - name: joining_date__day__icontains
        required: false
        in: query
        description: joining_date__day__icontains
        schema:
          type: string
      - name: joining_date__day__iendswith
        required: false
        in: query
        description: joining_date__day__iendswith
        schema:
          type: string
      - name: joining_date__day__iexact
        required: false
        in: query
        description: joining_date__day__iexact
        schema:
          type: string
      - name: joining_date__day__in
        required: false
        in: query
        description: joining_date__day__in
        schema:
          type: string
      - name: joining_date__day__iregex
        required: false
        in: query
        description: joining_date__day__iregex
        schema:
          type: string
      - name: joining_date__day__isnull
        required: false
        in: query
        description: joining_date__day__isnull
        schema:
          type: string
      - name: joining_date__day__istartswith
        required: false
        in: query
        description: joining_date__day__istartswith
        schema:
          type: string
      - name: joining_date__day__lt
        required: false
        in: query
        description: joining_date__day__lt
        schema:
          type: string
      - name: joining_date__day__lte
        required: false
        in: query
        description: joining_date__day__lte
        schema:
          type: string
      - name: joining_date__day__range
        required: false
        in: query
        description: joining_date__day__range
        schema:
          type: string
      - name: joining_date__day__regex
        required: false
        in: query
        description: joining_date__day__regex
        schema:
          type: string
      - name: joining_date__day__startswith
        required: false
        in: query
        description: joining_date__day__startswith
        schema:
          type: string
      - name: joining_date__endswith
        required: false
        in: query
        description: joining_date__endswith
        schema:
          type: string
      - name: joining_date__gt
        required: false
        in: query
        description: joining_date__gt
        schema:
          type: string
      - name: joining_date__gte
        required: false
        in: query
        description: joining_date__gte
        schema:
          type: string
      - name: joining_date__icontains
        required: false
        in: query
        description: joining_date__icontains
        schema:
          type: string
      - name: joining_date__iendswith
        required: false
        in: query
        description: joining_date__iendswith
        schema:
          type: string
      - name: joining_date__iexact
        required: false
        in: query
        description: joining_date__iexact
        schema:
          type: string
      - name: joining_date__in
        required: false
        in: query
        description: joining_date__in
        schema:
          type: string
      - name: joining_date__iregex
        required: false
        in: query
        description: joining_date__iregex
        schema:
          type: string
      - name: joining_date__isnull
        required: false
        in: query
        description: joining_date__isnull
        schema:
          type: string
      - name: joining_date__iso_week_day
        required: false
        in: query
        description: joining_date__iso_week_day
        schema:
          type: string
      - name: joining_date__iso_week_day__contained_by
        required: false
        in: query
        description: joining_date__iso_week_day__contained_by
        schema:
          type: string
      - name: joining_date__iso_week_day__contains
        required: false
        in: query
        description: joining_date__iso_week_day__contains
        schema:
          type: string
      - name: joining_date__iso_week_day__endswith
        required: false
        in: query
        description: joining_date__iso_week_day__endswith
        schema:
          type: string
      - name: joining_date__iso_week_day__gt
        required: false
        in: query
        description: joining_date__iso_week_day__gt
        schema:
          type: string
      - name: joining_date__iso_week_day__gte
        required: false
        in: query
        description: joining_date__iso_week_day__gte
        schema:
          type: string
      - name: joining_date__iso_week_day__icontains
        required: false
        in: query
        description: joining_date__iso_week_day__icontains
        schema:
          type: string
      - name: joining_date__iso_week_day__iendswith
        required: false
        in: query
        description: joining_date__iso_week_day__iendswith
        schema:
          type: string
      - name: joining_date__iso_week_day__iexact
        required: false
        in: query
        description: joining_date__iso_week_day__iexact
        schema:
          type: string
      - name: joining_date__iso_week_day__in
        required: false
        in: query
        description: joining_date__iso_week_day__in
        schema:
          type: string
      - name: joining_date__iso_week_day__iregex
        required: false
        in: query
        description: joining_date__iso_week_day__iregex
        schema:
          type: string
      - name: joining_date__iso_week_day__isnull
        required: false
        in: query
        description: joining_date__iso_week_day__isnull
        schema:
          type: string
      - name: joining_date__iso_week_day__istartswith
        required: false
        in: query
        description: joining_date__iso_week_day__istartswith
        schema:
          type: string
      - name: joining_date__iso_week_day__lt
        required: false
        in: query
        description: joining_date__iso_week_day__lt
        schema:
          type: string
      - name: joining_date__iso_week_day__lte
        required: false
        in: query
        description: joining_date__iso_week_day__lte
        schema:
          type: string
      - name: joining_date__iso_week_day__range
        required: false
        in: query
        description: joining_date__iso_week_day__range
        schema:
          type: string
      - name: joining_date__iso_week_day__regex
        required: false
        in: query
        description: joining_date__iso_week_day__regex
        schema:
          type: string
      - name: joining_date__iso_week_day__startswith
        required: false
        in: query
        description: joining_date__iso_week_day__startswith
        schema:
          type: string
      - name: joining_date__iso_year
        required: false
        in: query
        description: joining_date__iso_year
        schema:
          type: string
      - name: joining_date__iso_year__contained_by
        required: false
        in: query
        description: joining_date__iso_year__contained_by
        schema:
          type: string
      - name: joining_date__iso_year__contains
        required: false
        in: query
        description: joining_date__iso_year__contains
        schema:
          type: string
      - name: joining_date__iso_year__endswith
        required: false
        in: query
        description: joining_date__iso_year__endswith
        schema:
          type: string
      - name: joining_date__iso_year__gt
        required: false
        in: query
        description: joining_date__iso_year__gt
        schema:
          type: string
      - name: joining_date__iso_year__gte
        required: false
        in: query
        description: joining_date__iso_year__gte
        schema:
          type: string
      - name: joining_date__iso_year__icontains
        required: false
        in: query
        description: joining_date__iso_year__icontains
        schema:
          type: string
      - name: joining_date__iso_year__iendswith
        required: false
        in: query
        description: joining_date__iso_year__iendswith
        schema:
          type: string
      - name: joining_date__iso_year__iexact
        required: false
        in: query
        description: joining_date__iso_year__iexact
        schema:
          type: string
      - name: joining_date__iso_year__in
        required: false
        in: query
        description: joining_date__iso_year__in
        schema:
          type: string
      - name: joining_date__iso_year__iregex
        required: false
        in: query
        description: joining_date__iso_year__iregex
        schema:
          type: string
      - name: joining_date__iso_year__isnull
        required: false
        in: query
        description: joining_date__iso_year__isnull
        schema:
          type: string
      - name: joining_date__iso_year__istartswith
        required: false
        in: query
        description: joining_date__iso_year__istartswith
        schema:
          type: string
      - name: joining_date__iso_year__lt
        required: false
        in: query
        description: joining_date__iso_year__lt
        schema:
          type: string
      - name: joining_date__iso_year__lte
        required: false
        in: query
        description: joining_date__iso_year__lte
        schema:
          type: string
      - name: joining_date__iso_year__range
        required: false
        in: query
        description: joining_date__iso_year__range
        schema:
          type: string
      - name: joining_date__iso_year__regex
        required: false
        in: query
        description: joining_date__iso_year__regex
        schema:
          type: string
      - name: joining_date__iso_year__startswith
        required: false
        in: query
        description: joining_date__iso_year__startswith
        schema:
          type: string
      - name: joining_date__istartswith
        required: false
        in: query
        description: joining_date__istartswith
        schema:
          type: string
      - name: joining_date__lt
        required: false
        in: query
        description: joining_date__lt
        schema:
          type: string
      - name: joining_date__lte
        required: false
        in: query
        description: joining_date__lte
        schema:
          type: string
      - name: joining_date__month
        required: false
        in: query
        description: joining_date__month
        schema:
          type: string
      - name: joining_date__month__contained_by
        required: false
        in: query
        description: joining_date__month__contained_by
        schema:
          type: string
      - name: joining_date__month__contains
        required: false
        in: query
        description: joining_date__month__contains
        schema:
          type: string
      - name: joining_date__month__endswith
        required: false
        in: query
        description: joining_date__month__endswith
        schema:
          type: string
      - name: joining_date__month__gt
        required: false
        in: query
        description: joining_date__month__gt
        schema:
          type: string
      - name: joining_date__month__gte
        required: false
        in: query
        description: joining_date__month__gte
        schema:
          type: string
      - name: joining_date__month__icontains
        required: false
        in: query
        description: joining_date__month__icontains
        schema:
          type: string
      - name: joining_date__month__iendswith
        required: false
        in: query
        description: joining_date__month__iendswith
        schema:
          type: string
      - name: joining_date__month__iexact
        required: false
        in: query
        description: joining_date__month__iexact
        schema:
          type: string
      - name: joining_date__month__in
        required: false
        in: query
        description: joining_date__month__in
        schema:
          type: string
      - name: joining_date__month__iregex
        required: false
        in: query
        description: joining_date__month__iregex
        schema:
          type: string
      - name: joining_date__month__isnull
        required: false
        in: query
        description: joining_date__month__isnull
        schema:
          type: string
      - name: joining_date__month__istartswith
        required: false
        in: query
        description: joining_date__month__istartswith
        schema:
          type: string
      - name: joining_date__month__lt
        required: false
        in: query
        description: joining_date__month__lt
        schema:
          type: string
      - name: joining_date__month__lte
        required: false
        in: query
        description: joining_date__month__lte
        schema:
          type: string
      - name: joining_date__month__range
        required: false
        in: query
        description: joining_date__month__range
        schema:
          type: string
      - name: joining_date__month__regex
        required: false
        in: query
        description: joining_date__month__regex
        schema:
          type: string
      - name: joining_date__month__startswith
        required: false
        in: query
        description: joining_date__month__startswith
        schema:
          type: string
      - name: joining_date__quarter
        required: false
        in: query
        description: joining_date__quarter
        schema:
          type: string
      - name: joining_date__quarter__contained_by
        required: false
        in: query
        description: joining_date__quarter__contained_by
        schema:
          type: string
      - name: joining_date__quarter__contains
        required: false
        in: query
        description: joining_date__quarter__contains
        schema:
          type: string
      - name: joining_date__quarter__endswith
        required: false
        in: query
        description: joining_date__quarter__endswith
        schema:
          type: string
      - name: joining_date__quarter__gt
        required: false
        in: query
        description: joining_date__quarter__gt
        schema:
          type: string
      - name: joining_date__quarter__gte
        required: false
        in: query
        description: joining_date__quarter__gte
        schema:
          type: string
      - name: joining_date__quarter__icontains
        required: false
        in: query
        description: joining_date__quarter__icontains
        schema:
          type: string
      - name: joining_date__quarter__iendswith
        required: false
        in: query
        description: joining_date__quarter__iendswith
        schema:
          type: string
      - name: joining_date__quarter__iexact
        required: false
        in: query
        description: joining_date__quarter__iexact
        schema:
          type: string
      - name: joining_date__quarter__in
        required: false
        in: query
        description: joining_date__quarter__in
        schema:
          type: string
      - name: joining_date__quarter__iregex
        required: false
        in: query
        description: joining_date__quarter__iregex
        schema:
          type: string
      - name: joining_date__quarter__isnull
        required: false
        in: query
        description: joining_date__quarter__isnull
        schema:
          type: string
      - name: joining_date__quarter__istartswith
        required: false
        in: query
        description: joining_date__quarter__istartswith
        schema:
          type: string
      - name: joining_date__quarter__lt
        required: false
        in: query
        description: joining_date__quarter__lt
        schema:
          type: string
      - name: joining_date__quarter__lte
        required: false
        in: query
        description: joining_date__quarter__lte
        schema:
          type: string
      - name: joining_date__quarter__range
        required: false
        in: query
        description: joining_date__quarter__range
        schema:
          type: string
      - name: joining_date__quarter__regex
        required: false
        in: query
        description: joining_date__quarter__regex
        schema:
          type: string
      - name: joining_date__quarter__startswith
        required: false
        in: query
        description: joining_date__quarter__startswith
        schema:
          type: string
      - name: joining_date__range
        required: false
        in: query
        description: joining_date__range
        schema:
          type: string
      - name: joining_date__regex
        required: false
        in: query
        description: joining_date__regex
        schema:
          type: string
      - name: joining_date__startswith
        required: false
        in: query
        description: joining_date__startswith
        schema:
          type: string
      - name: joining_date__week
        required: false
        in: query
        description: joining_date__week
        schema:
          type: string
      - name: joining_date__week__contained_by
        required: false
        in: query
        description: joining_date__week__contained_by
        schema:
          type: string
      - name: joining_date__week__contains
        required: false
        in: query
        description: joining_date__week__contains
        schema:
          type: string
      - name: joining_date__week__endswith
        required: false
        in: query
        description: joining_date__week__endswith
        schema:
          type: string
      - name: joining_date__week__gt
        required: false
        in: query
        description: joining_date__week__gt
        schema:
          type: string
      - name: joining_date__week__gte
        required: false
        in: query
        description: joining_date__week__gte
        schema:
          type: string
      - name: joining_date__week__icontains
        required: false
        in: query
        description: joining_date__week__icontains
        schema:
          type: string
      - name: joining_date__week__iendswith
        required: false
        in: query
        description: joining_date__week__iendswith
        schema:
          type: string
      - name: joining_date__week__iexact
        required: false
        in: query
        description: joining_date__week__iexact
        schema:
          type: string
      - name: joining_date__week__in
        required: false
        in: query
        description: joining_date__week__in
        schema:
          type: string
      - name: joining_date__week__iregex
        required: false
        in: query
        description: joining_date__week__iregex
        schema:
          type: string
      - name: joining_date__week__isnull
        required: false
        in: query
        description: joining_date__week__isnull
        schema:
          type: string
      - name: joining_date__week__istartswith
        required: false
        in: query
        description: joining_date__week__istartswith
        schema:
          type: string
      - name: joining_date__week__lt
        required: false
        in: query
        description: joining_date__week__lt
        schema:
          type: string
      - name: joining_date__week__lte
        required: false
        in: query
        description: joining_date__week__lte
        schema:
          type: string
      - name: joining_date__week__range
        required: false
        in: query
        description: joining_date__week__range
        schema:
          type: string
      - name: joining_date__week__regex
        required: false
        in: query
        description: joining_date__week__regex
        schema:
          type: string
      - name: joining_date__week__startswith
        required: false
        in: query
        description: joining_date__week__startswith
        schema:
          type: string
      - name: joining_date__week_day
        required: false
        in: query
        description: joining_date__week_day
        schema:
          type: string
      - name: joining_date__week_day__contained_by
        required: false
        in: query
        description: joining_date__week_day__contained_by
        schema:
          type: string
      - name: joining_date__week_day__contains
        required: false
        in: query
        description: joining_date__week_day__contains
        schema:
          type: string
      - name: joining_date__week_day__endswith
        required: false
        in: query
        description: joining_date__week_day__endswith
        schema:
          type: string
      - name: joining_date__week_day__gt
        required: false
        in: query
        description: joining_date__week_day__gt
        schema:
          type: string
      - name: joining_date__week_day__gte
        required: false
        in: query
        description: joining_date__week_day__gte
        schema:
          type: string
      - name: joining_date__week_day__icontains
        required: false
        in: query
        description: joining_date__week_day__icontains
        schema:
          type: string
      - name: joining_date__week_day__iendswith
        required: false
        in: query
        description: joining_date__week_day__iendswith
        schema:
          type: string
      - name: joining_date__week_day__iexact
        required: false
        in: query
        description: joining_date__week_day__iexact
        schema:
          type: string
      - name: joining_date__week_day__in
        required: false
        in: query
        description: joining_date__week_day__in
        schema:
          type: string
      - name: joining_date__week_day__iregex
        required: false
        in: query
        description: joining_date__week_day__iregex
        schema:
          type: string
      - name: joining_date__week_day__isnull
        required: false
        in: query
        description: joining_date__week_day__isnull
        schema:
          type: string
      - name: joining_date__week_day__istartswith
        required: false
        in: query
        description: joining_date__week_day__istartswith
        schema:
          type: string
      - name: joining_date__week_day__lt
        required: false
        in: query
        description: joining_date__week_day__lt
        schema:
          type: string
      - name: joining_date__week_day__lte
        required: false
        in: query
        description: joining_date__week_day__lte
        schema:
          type: string
      - name: joining_date__week_day__range
        required: false
        in: query
        description: joining_date__week_day__range
        schema:
          type: string
      - name: joining_date__week_day__regex
        required: false
        in: query
        description: joining_date__week_day__regex
        schema:
          type: string
      - name: joining_date__week_day__startswith
        required: false
        in: query
        description: joining_date__week_day__startswith
        schema:
          type: string
      - name: joining_date__year
        required: false
        in: query
        description: joining_date__year
        schema:
          type: string
      - name: joining_date__year__contained_by
        required: false
        in: query
        description: joining_date__year__contained_by
        schema:
          type: string
      - name: joining_date__year__contains
        required: false
        in: query
        description: joining_date__year__contains
        schema:
          type: string
      - name: joining_date__year__endswith
        required: false
        in: query
        description: joining_date__year__endswith
        schema:
          type: string
      - name: joining_date__year__gt
        required: false
        in: query
        description: joining_date__year__gt
        schema:
          type: string
      - name: joining_date__year__gte
        required: false
        in: query
        description: joining_date__year__gte
        schema:
          type: string
      - name: joining_date__year__icontains
        required: false
        in: query
        description: joining_date__year__icontains
        schema:
          type: string
      - name: joining_date__year__iendswith
        required: false
        in: query
        description: joining_date__year__iendswith
        schema:
          type: string
      - name: joining_date__year__iexact
        required: false
        in: query
        description: joining_date__year__iexact
        schema:
          type: string
      - name: joining_date__year__in
        required: false
        in: query
        description: joining_date__year__in
        schema:
          type: string
      - name: joining_date__year__iregex
        required: false
        in: query
        description: joining_date__year__iregex
        schema:
          type: string
      - name: joining_date__year__isnull
        required: false
        in: query
        description: joining_date__year__isnull
        schema:
          type: string
      - name: joining_date__year__istartswith
        required: false
        in: query
        description: joining_date__year__istartswith
        schema:
          type: string
      - name: joining_date__year__lt
        required: false
        in: query
        description: joining_date__year__lt
        schema:
          type: string
      - name: joining_date__year__lte
        required: false
        in: query
        description: joining_date__year__lte
        schema:
          type: string
      - name: joining_date__year__range
        required: false
        in: query
        description: joining_date__year__range
        schema:
          type: string
      - name: joining_date__year__regex
        required: false
        in: query
        description: joining_date__year__regex
        schema:
          type: string
      - name: joining_date__year__startswith
        required: false
        in: query
        description: joining_date__year__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: manufacturer_date
        required: false
        in: query
        description: manufacturer_date
        schema:
          type: string
      - name: mileage
        required: false
        in: query
        description: mileage
        schema:
          type: string
      - name: model_name
        required: false
        in: query
        description: model_name
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: number_plate
        required: false
        in: query
        description: number_plate
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: owner_aadhar
        required: false
        in: query
        description: owner_aadhar
        schema:
          type: string
      - name: owner_name
        required: false
        in: query
        description: owner_name
        schema:
          type: string
      - name: pollution_certificate
        required: false
        in: query
        description: pollution_certificate
        schema:
          type: string
      - name: pollution_expiry_date
        required: false
        in: query
        description: pollution_expiry_date
        schema:
          type: string
      - name: registration_certificate
        required: false
        in: query
        description: registration_certificate
        schema:
          type: string
      - name: registration_expiry_date
        required: false
        in: query
        description: registration_expiry_date
        schema:
          type: string
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: registration_place
        required: false
        in: query
        description: registration_place
        schema:
          type: string
      - name: school_side_number
        required: false
        in: query
        description: school_side_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__contained_by
        required: false
        in: query
        description: start_date__contained_by
        schema:
          type: string
      - name: start_date__contains
        required: false
        in: query
        description: start_date__contains
        schema:
          type: string
      - name: start_date__day
        required: false
        in: query
        description: start_date__day
        schema:
          type: string
      - name: start_date__day__contained_by
        required: false
        in: query
        description: start_date__day__contained_by
        schema:
          type: string
      - name: start_date__day__contains
        required: false
        in: query
        description: start_date__day__contains
        schema:
          type: string
      - name: start_date__day__endswith
        required: false
        in: query
        description: start_date__day__endswith
        schema:
          type: string
      - name: start_date__day__gt
        required: false
        in: query
        description: start_date__day__gt
        schema:
          type: string
      - name: start_date__day__gte
        required: false
        in: query
        description: start_date__day__gte
        schema:
          type: string
      - name: start_date__day__icontains
        required: false
        in: query
        description: start_date__day__icontains
        schema:
          type: string
      - name: start_date__day__iendswith
        required: false
        in: query
        description: start_date__day__iendswith
        schema:
          type: string
      - name: start_date__day__iexact
        required: false
        in: query
        description: start_date__day__iexact
        schema:
          type: string
      - name: start_date__day__in
        required: false
        in: query
        description: start_date__day__in
        schema:
          type: string
      - name: start_date__day__iregex
        required: false
        in: query
        description: start_date__day__iregex
        schema:
          type: string
      - name: start_date__day__isnull
        required: false
        in: query
        description: start_date__day__isnull
        schema:
          type: string
      - name: start_date__day__istartswith
        required: false
        in: query
        description: start_date__day__istartswith
        schema:
          type: string
      - name: start_date__day__lt
        required: false
        in: query
        description: start_date__day__lt
        schema:
          type: string
      - name: start_date__day__lte
        required: false
        in: query
        description: start_date__day__lte
        schema:
          type: string
      - name: start_date__day__range
        required: false
        in: query
        description: start_date__day__range
        schema:
          type: string
      - name: start_date__day__regex
        required: false
        in: query
        description: start_date__day__regex
        schema:
          type: string
      - name: start_date__day__startswith
        required: false
        in: query
        description: start_date__day__startswith
        schema:
          type: string
      - name: start_date__endswith
        required: false
        in: query
        description: start_date__endswith
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__gte
        required: false
        in: query
        description: start_date__gte
        schema:
          type: string
      - name: start_date__icontains
        required: false
        in: query
        description: start_date__icontains
        schema:
          type: string
      - name: start_date__iendswith
        required: false
        in: query
        description: start_date__iendswith
        schema:
          type: string
      - name: start_date__iexact
        required: false
        in: query
        description: start_date__iexact
        schema:
          type: string
      - name: start_date__in
        required: false
        in: query
        description: start_date__in
        schema:
          type: string
      - name: start_date__iregex
        required: false
        in: query
        description: start_date__iregex
        schema:
          type: string
      - name: start_date__isnull
        required: false
        in: query
        description: start_date__isnull
        schema:
          type: string
      - name: start_date__iso_week_day
        required: false
        in: query
        description: start_date__iso_week_day
        schema:
          type: string
      - name: start_date__iso_week_day__contained_by
        required: false
        in: query
        description: start_date__iso_week_day__contained_by
        schema:
          type: string
      - name: start_date__iso_week_day__contains
        required: false
        in: query
        description: start_date__iso_week_day__contains
        schema:
          type: string
      - name: start_date__iso_week_day__endswith
        required: false
        in: query
        description: start_date__iso_week_day__endswith
        schema:
          type: string
      - name: start_date__iso_week_day__gt
        required: false
        in: query
        description: start_date__iso_week_day__gt
        schema:
          type: string
      - name: start_date__iso_week_day__gte
        required: false
        in: query
        description: start_date__iso_week_day__gte
        schema:
          type: string
      - name: start_date__iso_week_day__icontains
        required: false
        in: query
        description: start_date__iso_week_day__icontains
        schema:
          type: string
      - name: start_date__iso_week_day__iendswith
        required: false
        in: query
        description: start_date__iso_week_day__iendswith
        schema:
          type: string
      - name: start_date__iso_week_day__iexact
        required: false
        in: query
        description: start_date__iso_week_day__iexact
        schema:
          type: string
      - name: start_date__iso_week_day__in
        required: false
        in: query
        description: start_date__iso_week_day__in
        schema:
          type: string
      - name: start_date__iso_week_day__iregex
        required: false
        in: query
        description: start_date__iso_week_day__iregex
        schema:
          type: string
      - name: start_date__iso_week_day__isnull
        required: false
        in: query
        description: start_date__iso_week_day__isnull
        schema:
          type: string
      - name: start_date__iso_week_day__istartswith
        required: false
        in: query
        description: start_date__iso_week_day__istartswith
        schema:
          type: string
      - name: start_date__iso_week_day__lt
        required: false
        in: query
        description: start_date__iso_week_day__lt
        schema:
          type: string
      - name: start_date__iso_week_day__lte
        required: false
        in: query
        description: start_date__iso_week_day__lte
        schema:
          type: string
      - name: start_date__iso_week_day__range
        required: false
        in: query
        description: start_date__iso_week_day__range
        schema:
          type: string
      - name: start_date__iso_week_day__regex
        required: false
        in: query
        description: start_date__iso_week_day__regex
        schema:
          type: string
      - name: start_date__iso_week_day__startswith
        required: false
        in: query
        description: start_date__iso_week_day__startswith
        schema:
          type: string
      - name: start_date__iso_year
        required: false
        in: query
        description: start_date__iso_year
        schema:
          type: string
      - name: start_date__iso_year__contained_by
        required: false
        in: query
        description: start_date__iso_year__contained_by
        schema:
          type: string
      - name: start_date__iso_year__contains
        required: false
        in: query
        description: start_date__iso_year__contains
        schema:
          type: string
      - name: start_date__iso_year__endswith
        required: false
        in: query
        description: start_date__iso_year__endswith
        schema:
          type: string
      - name: start_date__iso_year__gt
        required: false
        in: query
        description: start_date__iso_year__gt
        schema:
          type: string
      - name: start_date__iso_year__gte
        required: false
        in: query
        description: start_date__iso_year__gte
        schema:
          type: string
      - name: start_date__iso_year__icontains
        required: false
        in: query
        description: start_date__iso_year__icontains
        schema:
          type: string
      - name: start_date__iso_year__iendswith
        required: false
        in: query
        description: start_date__iso_year__iendswith
        schema:
          type: string
      - name: start_date__iso_year__iexact
        required: false
        in: query
        description: start_date__iso_year__iexact
        schema:
          type: string
      - name: start_date__iso_year__in
        required: false
        in: query
        description: start_date__iso_year__in
        schema:
          type: string
      - name: start_date__iso_year__iregex
        required: false
        in: query
        description: start_date__iso_year__iregex
        schema:
          type: string
      - name: start_date__iso_year__isnull
        required: false
        in: query
        description: start_date__iso_year__isnull
        schema:
          type: string
      - name: start_date__iso_year__istartswith
        required: false
        in: query
        description: start_date__iso_year__istartswith
        schema:
          type: string
      - name: start_date__iso_year__lt
        required: false
        in: query
        description: start_date__iso_year__lt
        schema:
          type: string
      - name: start_date__iso_year__lte
        required: false
        in: query
        description: start_date__iso_year__lte
        schema:
          type: string
      - name: start_date__iso_year__range
        required: false
        in: query
        description: start_date__iso_year__range
        schema:
          type: string
      - name: start_date__iso_year__regex
        required: false
        in: query
        description: start_date__iso_year__regex
        schema:
          type: string
      - name: start_date__iso_year__startswith
        required: false
        in: query
        description: start_date__iso_year__startswith
        schema:
          type: string
      - name: start_date__istartswith
        required: false
        in: query
        description: start_date__istartswith
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: start_date__lte
        required: false
        in: query
        description: start_date__lte
        schema:
          type: string
      - name: start_date__month
        required: false
        in: query
        description: start_date__month
        schema:
          type: string
      - name: start_date__month__contained_by
        required: false
        in: query
        description: start_date__month__contained_by
        schema:
          type: string
      - name: start_date__month__contains
        required: false
        in: query
        description: start_date__month__contains
        schema:
          type: string
      - name: start_date__month__endswith
        required: false
        in: query
        description: start_date__month__endswith
        schema:
          type: string
      - name: start_date__month__gt
        required: false
        in: query
        description: start_date__month__gt
        schema:
          type: string
      - name: start_date__month__gte
        required: false
        in: query
        description: start_date__month__gte
        schema:
          type: string
      - name: start_date__month__icontains
        required: false
        in: query
        description: start_date__month__icontains
        schema:
          type: string
      - name: start_date__month__iendswith
        required: false
        in: query
        description: start_date__month__iendswith
        schema:
          type: string
      - name: start_date__month__iexact
        required: false
        in: query
        description: start_date__month__iexact
        schema:
          type: string
      - name: start_date__month__in
        required: false
        in: query
        description: start_date__month__in
        schema:
          type: string
      - name: start_date__month__iregex
        required: false
        in: query
        description: start_date__month__iregex
        schema:
          type: string
      - name: start_date__month__isnull
        required: false
        in: query
        description: start_date__month__isnull
        schema:
          type: string
      - name: start_date__month__istartswith
        required: false
        in: query
        description: start_date__month__istartswith
        schema:
          type: string
      - name: start_date__month__lt
        required: false
        in: query
        description: start_date__month__lt
        schema:
          type: string
      - name: start_date__month__lte
        required: false
        in: query
        description: start_date__month__lte
        schema:
          type: string
      - name: start_date__month__range
        required: false
        in: query
        description: start_date__month__range
        schema:
          type: string
      - name: start_date__month__regex
        required: false
        in: query
        description: start_date__month__regex
        schema:
          type: string
      - name: start_date__month__startswith
        required: false
        in: query
        description: start_date__month__startswith
        schema:
          type: string
      - name: start_date__quarter
        required: false
        in: query
        description: start_date__quarter
        schema:
          type: string
      - name: start_date__quarter__contained_by
        required: false
        in: query
        description: start_date__quarter__contained_by
        schema:
          type: string
      - name: start_date__quarter__contains
        required: false
        in: query
        description: start_date__quarter__contains
        schema:
          type: string
      - name: start_date__quarter__endswith
        required: false
        in: query
        description: start_date__quarter__endswith
        schema:
          type: string
      - name: start_date__quarter__gt
        required: false
        in: query
        description: start_date__quarter__gt
        schema:
          type: string
      - name: start_date__quarter__gte
        required: false
        in: query
        description: start_date__quarter__gte
        schema:
          type: string
      - name: start_date__quarter__icontains
        required: false
        in: query
        description: start_date__quarter__icontains
        schema:
          type: string
      - name: start_date__quarter__iendswith
        required: false
        in: query
        description: start_date__quarter__iendswith
        schema:
          type: string
      - name: start_date__quarter__iexact
        required: false
        in: query
        description: start_date__quarter__iexact
        schema:
          type: string
      - name: start_date__quarter__in
        required: false
        in: query
        description: start_date__quarter__in
        schema:
          type: string
      - name: start_date__quarter__iregex
        required: false
        in: query
        description: start_date__quarter__iregex
        schema:
          type: string
      - name: start_date__quarter__isnull
        required: false
        in: query
        description: start_date__quarter__isnull
        schema:
          type: string
      - name: start_date__quarter__istartswith
        required: false
        in: query
        description: start_date__quarter__istartswith
        schema:
          type: string
      - name: start_date__quarter__lt
        required: false
        in: query
        description: start_date__quarter__lt
        schema:
          type: string
      - name: start_date__quarter__lte
        required: false
        in: query
        description: start_date__quarter__lte
        schema:
          type: string
      - name: start_date__quarter__range
        required: false
        in: query
        description: start_date__quarter__range
        schema:
          type: string
      - name: start_date__quarter__regex
        required: false
        in: query
        description: start_date__quarter__regex
        schema:
          type: string
      - name: start_date__quarter__startswith
        required: false
        in: query
        description: start_date__quarter__startswith
        schema:
          type: string
      - name: start_date__range
        required: false
        in: query
        description: start_date__range
        schema:
          type: string
      - name: start_date__regex
        required: false
        in: query
        description: start_date__regex
        schema:
          type: string
      - name: start_date__startswith
        required: false
        in: query
        description: start_date__startswith
        schema:
          type: string
      - name: start_date__week
        required: false
        in: query
        description: start_date__week
        schema:
          type: string
      - name: start_date__week__contained_by
        required: false
        in: query
        description: start_date__week__contained_by
        schema:
          type: string
      - name: start_date__week__contains
        required: false
        in: query
        description: start_date__week__contains
        schema:
          type: string
      - name: start_date__week__endswith
        required: false
        in: query
        description: start_date__week__endswith
        schema:
          type: string
      - name: start_date__week__gt
        required: false
        in: query
        description: start_date__week__gt
        schema:
          type: string
      - name: start_date__week__gte
        required: false
        in: query
        description: start_date__week__gte
        schema:
          type: string
      - name: start_date__week__icontains
        required: false
        in: query
        description: start_date__week__icontains
        schema:
          type: string
      - name: start_date__week__iendswith
        required: false
        in: query
        description: start_date__week__iendswith
        schema:
          type: string
      - name: start_date__week__iexact
        required: false
        in: query
        description: start_date__week__iexact
        schema:
          type: string
      - name: start_date__week__in
        required: false
        in: query
        description: start_date__week__in
        schema:
          type: string
      - name: start_date__week__iregex
        required: false
        in: query
        description: start_date__week__iregex
        schema:
          type: string
      - name: start_date__week__isnull
        required: false
        in: query
        description: start_date__week__isnull
        schema:
          type: string
      - name: start_date__week__istartswith
        required: false
        in: query
        description: start_date__week__istartswith
        schema:
          type: string
      - name: start_date__week__lt
        required: false
        in: query
        description: start_date__week__lt
        schema:
          type: string
      - name: start_date__week__lte
        required: false
        in: query
        description: start_date__week__lte
        schema:
          type: string
      - name: start_date__week__range
        required: false
        in: query
        description: start_date__week__range
        schema:
          type: string
      - name: start_date__week__regex
        required: false
        in: query
        description: start_date__week__regex
        schema:
          type: string
      - name: start_date__week__startswith
        required: false
        in: query
        description: start_date__week__startswith
        schema:
          type: string
      - name: start_date__week_day
        required: false
        in: query
        description: start_date__week_day
        schema:
          type: string
      - name: start_date__week_day__contained_by
        required: false
        in: query
        description: start_date__week_day__contained_by
        schema:
          type: string
      - name: start_date__week_day__contains
        required: false
        in: query
        description: start_date__week_day__contains
        schema:
          type: string
      - name: start_date__week_day__endswith
        required: false
        in: query
        description: start_date__week_day__endswith
        schema:
          type: string
      - name: start_date__week_day__gt
        required: false
        in: query
        description: start_date__week_day__gt
        schema:
          type: string
      - name: start_date__week_day__gte
        required: false
        in: query
        description: start_date__week_day__gte
        schema:
          type: string
      - name: start_date__week_day__icontains
        required: false
        in: query
        description: start_date__week_day__icontains
        schema:
          type: string
      - name: start_date__week_day__iendswith
        required: false
        in: query
        description: start_date__week_day__iendswith
        schema:
          type: string
      - name: start_date__week_day__iexact
        required: false
        in: query
        description: start_date__week_day__iexact
        schema:
          type: string
      - name: start_date__week_day__in
        required: false
        in: query
        description: start_date__week_day__in
        schema:
          type: string
      - name: start_date__week_day__iregex
        required: false
        in: query
        description: start_date__week_day__iregex
        schema:
          type: string
      - name: start_date__week_day__isnull
        required: false
        in: query
        description: start_date__week_day__isnull
        schema:
          type: string
      - name: start_date__week_day__istartswith
        required: false
        in: query
        description: start_date__week_day__istartswith
        schema:
          type: string
      - name: start_date__week_day__lt
        required: false
        in: query
        description: start_date__week_day__lt
        schema:
          type: string
      - name: start_date__week_day__lte
        required: false
        in: query
        description: start_date__week_day__lte
        schema:
          type: string
      - name: start_date__week_day__range
        required: false
        in: query
        description: start_date__week_day__range
        schema:
          type: string
      - name: start_date__week_day__regex
        required: false
        in: query
        description: start_date__week_day__regex
        schema:
          type: string
      - name: start_date__week_day__startswith
        required: false
        in: query
        description: start_date__week_day__startswith
        schema:
          type: string
      - name: start_date__year
        required: false
        in: query
        description: start_date__year
        schema:
          type: string
      - name: start_date__year__contained_by
        required: false
        in: query
        description: start_date__year__contained_by
        schema:
          type: string
      - name: start_date__year__contains
        required: false
        in: query
        description: start_date__year__contains
        schema:
          type: string
      - name: start_date__year__endswith
        required: false
        in: query
        description: start_date__year__endswith
        schema:
          type: string
      - name: start_date__year__gt
        required: false
        in: query
        description: start_date__year__gt
        schema:
          type: string
      - name: start_date__year__gte
        required: false
        in: query
        description: start_date__year__gte
        schema:
          type: string
      - name: start_date__year__icontains
        required: false
        in: query
        description: start_date__year__icontains
        schema:
          type: string
      - name: start_date__year__iendswith
        required: false
        in: query
        description: start_date__year__iendswith
        schema:
          type: string
      - name: start_date__year__iexact
        required: false
        in: query
        description: start_date__year__iexact
        schema:
          type: string
      - name: start_date__year__in
        required: false
        in: query
        description: start_date__year__in
        schema:
          type: string
      - name: start_date__year__iregex
        required: false
        in: query
        description: start_date__year__iregex
        schema:
          type: string
      - name: start_date__year__isnull
        required: false
        in: query
        description: start_date__year__isnull
        schema:
          type: string
      - name: start_date__year__istartswith
        required: false
        in: query
        description: start_date__year__istartswith
        schema:
          type: string
      - name: start_date__year__lt
        required: false
        in: query
        description: start_date__year__lt
        schema:
          type: string
      - name: start_date__year__lte
        required: false
        in: query
        description: start_date__year__lte
        schema:
          type: string
      - name: start_date__year__range
        required: false
        in: query
        description: start_date__year__range
        schema:
          type: string
      - name: start_date__year__regex
        required: false
        in: query
        description: start_date__year__regex
        schema:
          type: string
      - name: start_date__year__startswith
        required: false
        in: query
        description: start_date__year__startswith
        schema:
          type: string
      - name: total_seats
        required: false
        in: query
        description: total_seats
        schema:
          type: string
      - name: vehicle_id
        required: false
        in: query
        description: vehicle_id
        schema:
          type: string
      - name: vehicle_type
        required: false
        in: query
        description: vehicle_type
        schema:
          type: string
          enum:
          - bus
          - van
          - auto
      - name: vehicle_type__contains
        required: false
        in: query
        description: vehicle_type__contains
        schema:
          type: string
      - name: vehicle_type__endswith
        required: false
        in: query
        description: vehicle_type__endswith
        schema:
          type: string
      - name: vehicle_type__gt
        required: false
        in: query
        description: vehicle_type__gt
        schema:
          type: string
      - name: vehicle_type__gte
        required: false
        in: query
        description: vehicle_type__gte
        schema:
          type: string
      - name: vehicle_type__icontains
        required: false
        in: query
        description: vehicle_type__icontains
        schema:
          type: string
      - name: vehicle_type__iendswith
        required: false
        in: query
        description: vehicle_type__iendswith
        schema:
          type: string
      - name: vehicle_type__iexact
        required: false
        in: query
        description: vehicle_type__iexact
        schema:
          type: string
      - name: vehicle_type__in
        required: false
        in: query
        description: vehicle_type__in
        schema:
          type: string
      - name: vehicle_type__iregex
        required: false
        in: query
        description: vehicle_type__iregex
        schema:
          type: string
      - name: vehicle_type__isnull
        required: false
        in: query
        description: vehicle_type__isnull
        schema:
          type: string
      - name: vehicle_type__istartswith
        required: false
        in: query
        description: vehicle_type__istartswith
        schema:
          type: string
      - name: vehicle_type__lt
        required: false
        in: query
        description: vehicle_type__lt
        schema:
          type: string
      - name: vehicle_type__lte
        required: false
        in: query
        description: vehicle_type__lte
        schema:
          type: string
      - name: vehicle_type__range
        required: false
        in: query
        description: vehicle_type__range
        schema:
          type: string
      - name: vehicle_type__regex
        required: false
        in: query
        description: vehicle_type__regex
        schema:
          type: string
      - name: vehicle_type__startswith
        required: false
        in: query
        description: vehicle_type__startswith
        schema:
          type: string
      - name: vendor_email
        required: false
        in: query
        description: vendor_email
        schema:
          type: string
      - name: vendor_phone
        required: false
        in: query
        description: vendor_phone
        schema:
          type: string
      tags:
      - transport-vehicles
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleList'
          description: ''
    post:
      operationId: transport_vehicles_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - transport-vehicles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /api/transport-vehicles/{id}/:
    get:
      operationId: transport_vehicles_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - transport-vehicles
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    put:
      operationId: transport_vehicles_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - transport-vehicles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    patch:
      operationId: transport_vehicles_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - transport-vehicles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    delete:
      operationId: transport_vehicles_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - transport-vehicles
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/transport-vehicles/expiring_documents/:
    get:
      operationId: transport_vehicles_expiring_documents_retrieve
      description: Get vehicles with documents expiring in the next 30 days
      tags:
      - transport-vehicles
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /api/transport-vehicles/vehicle_stats/:
    get:
      operationId: transport_vehicles_vehicle_stats_retrieve
      description: Get statistics about vehicles
      tags:
      - transport-vehicles
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /api/unassigned-devices/check-device/:
    get:
      operationId: unassigned_devices_check_device_retrieve
      tags:
      - unassigned-devices
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/user-analytics/user_group_counts/:
    get:
      operationId: user_analytics_user_group_counts_retrieve
      tags:
      - user-analytics
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/user-detail-types/:
    get:
      operationId: user_detail_types_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: academic_year
        required: false
        in: query
        description: academic_year
        schema:
          type: string
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: document_required
        required: false
        in: query
        description: document_required
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_required
        required: false
        in: query
        description: is_required
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user-detail-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDetailTypeList'
          description: ''
    post:
      operationId: user_detail_types_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - user-detail-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailType'
          description: ''
  /api/user-detail-types/{id}/:
    get:
      operationId: user_detail_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user detail type.
        required: true
      tags:
      - user-detail-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailType'
          description: ''
    put:
      operationId: user_detail_types_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user detail type.
        required: true
      tags:
      - user-detail-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailType'
          description: ''
    patch:
      operationId: user_detail_types_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user detail type.
        required: true
      tags:
      - user-detail-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailType'
          description: ''
    delete:
      operationId: user_detail_types_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user detail type.
        required: true
      tags:
      - user-detail-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user-details/:
    get:
      operationId: user_details_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: detail_type
        required: false
        in: query
        description: detail_type
        schema:
          type: string
      - name: document
        required: false
        in: query
        description: document
        schema:
          type: string
      - name: document__contains
        required: false
        in: query
        description: document__contains
        schema:
          type: string
      - name: document__endswith
        required: false
        in: query
        description: document__endswith
        schema:
          type: string
      - name: document__gt
        required: false
        in: query
        description: document__gt
        schema:
          type: string
      - name: document__gte
        required: false
        in: query
        description: document__gte
        schema:
          type: string
      - name: document__icontains
        required: false
        in: query
        description: document__icontains
        schema:
          type: string
      - name: document__iendswith
        required: false
        in: query
        description: document__iendswith
        schema:
          type: string
      - name: document__iexact
        required: false
        in: query
        description: document__iexact
        schema:
          type: string
      - name: document__in
        required: false
        in: query
        description: document__in
        schema:
          type: string
      - name: document__iregex
        required: false
        in: query
        description: document__iregex
        schema:
          type: string
      - name: document__isnull
        required: false
        in: query
        description: document__isnull
        schema:
          type: string
      - name: document__istartswith
        required: false
        in: query
        description: document__istartswith
        schema:
          type: string
      - name: document__lt
        required: false
        in: query
        description: document__lt
        schema:
          type: string
      - name: document__lte
        required: false
        in: query
        description: document__lte
        schema:
          type: string
      - name: document__range
        required: false
        in: query
        description: document__range
        schema:
          type: string
      - name: document__regex
        required: false
        in: query
        description: document__regex
        schema:
          type: string
      - name: document__startswith
        required: false
        in: query
        description: document__startswith
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: value
        required: false
        in: query
        description: value
        schema:
          type: string
      tags:
      - user-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDetailsList'
          description: ''
    post:
      operationId: user_details_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - user-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/user-details/{id}/:
    get:
      operationId: user_details_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user details.
        required: true
      tags:
      - user-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: user_details_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user details.
        required: true
      tags:
      - user-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: user_details_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user details.
        required: true
      tags:
      - user-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    delete:
      operationId: user_details_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user details.
        required: true
      tags:
      - user-details
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user-notifications/:
    get:
      operationId: user_notifications_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: is_read
        required: false
        in: query
        description: is_read
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: notification
        required: false
        in: query
        description: notification
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - user-notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationUserList'
          description: ''
    post:
      operationId: user_notifications_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - user-notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/user-notifications/{id}/:
    get:
      operationId: user_notifications_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
    put:
      operationId: user_notifications_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
    patch:
      operationId: user_notifications_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
    delete:
      operationId: user_notifications_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: aapar_number
        required: false
        in: query
        description: aapar_number
        schema:
          type: string
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: admission_number
        required: false
        in: query
        description: admission_number
        schema:
          type: string
      - name: alternate_phone
        required: false
        in: query
        description: alternate_phone
        schema:
          type: string
      - name: assigned_standards
        required: false
        in: query
        description: assigned_standards
        schema:
          type: string
      - name: blood_group
        required: false
        in: query
        description: blood_group
        schema:
          type: string
          enum:
          - A+
          - A-
          - B+
          - B-
          - AB+
          - AB-
          - O+
          - O-
      - name: branch
        required: false
        in: query
        description: branch
        schema:
          type: string
      - name: city
        required: false
        in: query
        description: city
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: date_joined
        required: false
        in: query
        description: date_joined
        schema:
          type: string
      - name: date_of_joining
        required: false
        in: query
        description: date_of_joining
        schema:
          type: string
      - name: date_of_releaving
        required: false
        in: query
        description: date_of_releaving
        schema:
          type: string
      - name: department
        required: false
        in: query
        description: department
        schema:
          type: string
      - name: designation
        required: false
        in: query
        description: designation
        schema:
          type: string
      - name: dob
        required: false
        in: query
        description: dob
        schema:
          type: string
      - name: education_details
        required: false
        in: query
        description: education_details
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: email__contains
        required: false
        in: query
        description: email__contains
        schema:
          type: string
      - name: email__endswith
        required: false
        in: query
        description: email__endswith
        schema:
          type: string
      - name: email__gt
        required: false
        in: query
        description: email__gt
        schema:
          type: string
      - name: email__gte
        required: false
        in: query
        description: email__gte
        schema:
          type: string
      - name: email__icontains
        required: false
        in: query
        description: email__icontains
        schema:
          type: string
      - name: email__iendswith
        required: false
        in: query
        description: email__iendswith
        schema:
          type: string
      - name: email__iexact
        required: false
        in: query
        description: email__iexact
        schema:
          type: string
      - name: email__in
        required: false
        in: query
        description: email__in
        schema:
          type: string
      - name: email__iregex
        required: false
        in: query
        description: email__iregex
        schema:
          type: string
      - name: email__isnull
        required: false
        in: query
        description: email__isnull
        schema:
          type: string
      - name: email__istartswith
        required: false
        in: query
        description: email__istartswith
        schema:
          type: string
      - name: email__lt
        required: false
        in: query
        description: email__lt
        schema:
          type: string
      - name: email__lte
        required: false
        in: query
        description: email__lte
        schema:
          type: string
      - name: email__range
        required: false
        in: query
        description: email__range
        schema:
          type: string
      - name: email__regex
        required: false
        in: query
        description: email__regex
        schema:
          type: string
      - name: email__startswith
        required: false
        in: query
        description: email__startswith
        schema:
          type: string
      - name: employee_id
        required: false
        in: query
        description: employee_id
        schema:
          type: string
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - Male
          - Female
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__name
        required: false
        in: query
        description: group__name
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: pen_number
        required: false
        in: query
        description: pen_number
        schema:
          type: string
      - name: phone
        required: false
        in: query
        description: phone
        schema:
          type: string
      - name: pincode
        required: false
        in: query
        description: pincode
        schema:
          type: string
      - name: profile_image
        required: false
        in: query
        description: profile_image
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: section
        required: false
        in: query
        description: section
        schema:
          type: string
      - name: section_assigned
        required: false
        in: query
        description: section_assigned
        schema:
          type: string
      - name: section_ids
        required: false
        in: query
        description: section_ids
        schema:
          type: string
      - name: staff_type
        required: false
        in: query
        description: staff_type
        schema:
          type: string
      - name: standard
        required: false
        in: query
        description: standard
        schema:
          type: string
      - name: standard_ids
        required: false
        in: query
        description: standard_ids
        schema:
          type: string
      - name: state
        required: false
        in: query
        description: state
        schema:
          type: string
      - name: student_type
        required: false
        in: query
        description: student_type
        schema:
          type: string
      - name: timezone
        required: false
        in: query
        description: timezone
        schema:
          type: string
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Asmera
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Timbuktu
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/ComodRivadavia
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Atka
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Buenos_Aires
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Catamarca
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Ciudad_Juarez
          - America/Coral_Harbour
          - America/Cordoba
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Ensenada
          - America/Fort_Nelson
          - America/Fort_Wayne
          - America/Fortaleza
          - America/Glace_Bay
          - America/Godthab
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indianapolis
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Jujuy
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Knox_IN
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Louisville
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Mendoza
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montreal
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Acre
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Rosario
          - America/Santa_Isabel
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Shiprock
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Virgin
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/South_Pole
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Ashkhabad
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Calcutta
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Chongqing
          - Asia/Chungking
          - Asia/Colombo
          - Asia/Dacca
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Harbin
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Istanbul
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kashgar
          - Asia/Kathmandu
          - Asia/Katmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macao
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Rangoon
          - Asia/Riyadh
          - Asia/Saigon
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Tel_Aviv
          - Asia/Thimbu
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ujung_Pandang
          - Asia/Ulaanbaatar
          - Asia/Ulan_Bator
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faeroe
          - Atlantic/Faroe
          - Atlantic/Jan_Mayen
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/ACT
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Canberra
          - Australia/Currie
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/LHI
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/NSW
          - Australia/North
          - Australia/Perth
          - Australia/Queensland
          - Australia/South
          - Australia/Sydney
          - Australia/Tasmania
          - Australia/Victoria
          - Australia/West
          - Australia/Yancowinna
          - Brazil/Acre
          - Brazil/DeNoronha
          - Brazil/East
          - Brazil/West
          - CET
          - CST6CDT
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Canada/Saskatchewan
          - Canada/Yukon
          - Chile/Continental
          - Chile/EasterIsland
          - Cuba
          - EET
          - EST
          - EST5EDT
          - Egypt
          - Eire
          - Etc/GMT
          - Etc/GMT+0
          - Etc/GMT+1
          - Etc/GMT+10
          - Etc/GMT+11
          - Etc/GMT+12
          - Etc/GMT+2
          - Etc/GMT+3
          - Etc/GMT+4
          - Etc/GMT+5
          - Etc/GMT+6
          - Etc/GMT+7
          - Etc/GMT+8
          - Etc/GMT+9
          - Etc/GMT-0
          - Etc/GMT-1
          - Etc/GMT-10
          - Etc/GMT-11
          - Etc/GMT-12
          - Etc/GMT-13
          - Etc/GMT-14
          - Etc/GMT-2
          - Etc/GMT-3
          - Etc/GMT-4
          - Etc/GMT-5
          - Etc/GMT-6
          - Etc/GMT-7
          - Etc/GMT-8
          - Etc/GMT-9
          - Etc/GMT0
          - Etc/Greenwich
          - Etc/UCT
          - Etc/UTC
          - Etc/Universal
          - Etc/Zulu
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belfast
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Nicosia
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Tiraspol
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GB
          - GB-Eire
          - GMT
          - GMT+0
          - GMT-0
          - GMT0
          - Greenwich
          - HST
          - Hongkong
          - Iceland
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Iran
          - Israel
          - Jamaica
          - Japan
          - Kwajalein
          - Libya
          - MET
          - MST
          - MST7MDT
          - Mexico/BajaNorte
          - Mexico/BajaSur
          - Mexico/General
          - NZ
          - NZ-CHAT
          - Navajo
          - PRC
          - PST8PDT
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Johnston
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Ponape
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Samoa
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Truk
          - Pacific/Wake
          - Pacific/Wallis
          - Pacific/Yap
          - Poland
          - Portugal
          - ROC
          - ROK
          - Singapore
          - Turkey
          - UCT
          - US/Alaska
          - US/Aleutian
          - US/Arizona
          - US/Central
          - US/East-Indiana
          - US/Eastern
          - US/Hawaii
          - US/Indiana-Starke
          - US/Michigan
          - US/Mountain
          - US/Pacific
          - US/Samoa
          - UTC
          - Universal
          - W-SU
          - WET
          - Zulu
      - name: user_permissions
        required: false
        in: query
        description: user_permissions
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/change-password/:
    post:
      operationId: users_change_password_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /api/users/{id}/my-schedule/:
    get:
      operationId: users_my_schedule_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/users/{id}/send-reset-password-email/:
    post:
      operationId: users_send_reset_password_email_create
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/current-user/:
    get:
      operationId: users_current_user_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/forgot-password/:
    post:
      operationId: users_forgot_password_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPassword'
          description: ''
  /api/users/get-all-users/:
    get:
      operationId: users_get_all_users_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/get-all-users-expect-students/:
    get:
      operationId: users_get_all_users_expect_students_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/get-student-types/:
    get:
      operationId: users_get_student_types_retrieve
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/login/:
    post:
      operationId: users_login_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/logout/:
    post:
      operationId: users_logout_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/reset-password/:
    post:
      operationId: users_reset_password_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/users/subscribe-to-notifications/:
    post:
      operationId: users_subscribe_to_notifications_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscription'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
  /api/users/testendpoint/:
    post:
      operationId: users_testendpoint_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/vendors/:
    get:
      operationId: vendors_list
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: created
        required: false
        in: query
        description: created
        schema:
          type: string
      - name: created_by
        required: false
        in: query
        description: created_by
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: gstin
        required: false
        in: query
        description: gstin
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: modified
        required: false
        in: query
        description: modified
        schema:
          type: string
      - name: modified_by
        required: false
        in: query
        description: modified_by
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: phone_number
        required: false
        in: query
        description: phone_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: website
        required: false
        in: query
        description: website
        schema:
          type: string
      tags:
      - vendors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorList'
          description: ''
    post:
      operationId: vendors_create
      description: A mixin class that provides common functionality for viewsets.
      tags:
      - vendors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
  /api/vendors/{id}/:
    get:
      operationId: vendors_retrieve
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vendor.
        required: true
      tags:
      - vendors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    put:
      operationId: vendors_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vendor.
        required: true
      tags:
      - vendors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    patch:
      operationId: vendors_partial_update
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vendor.
        required: true
      tags:
      - vendors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVendor'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    delete:
      operationId: vendors_destroy
      description: A mixin class that provides common functionality for viewsets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vendor.
        required: true
      tags:
      - vendors
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AcademicYear:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - end_date
      - id
      - modified
      - modified_by
      - name
      - start_date
    ActionEnum:
      enum:
      - 'ON'
      - 'OFF'
      type: string
      description: |-
        * `ON` - ON
        * `OFF` - OFF
    ActivityEnum:
      enum:
      - Motion
      - No-Motion
      type: string
      description: |-
        * `Motion` - Motion
        * `No-Motion` - No-Motion
    AddStudentToSection:
      type: object
      properties:
        students:
          type: array
          items:
            type: integer
          writeOnly: true
        academic_year:
          type: integer
          writeOnly: true
        class_representative:
          type: integer
          nullable: true
      required:
      - academic_year
      - students
    AllDeviceReadings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
          maxLength: 100
        device_type:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        timestamp:
          type: string
          format: date-time
        voltage:
          type: number
          format: double
          nullable: true
        current:
          type: number
          format: double
          nullable: true
        kw:
          type: number
          format: double
          nullable: true
        activity:
          type: boolean
          nullable: true
        other_status:
          type: boolean
          nullable: true
        relay_statuses:
          nullable: true
        voltage1:
          type: number
          format: double
          nullable: true
        voltage2:
          type: number
          format: double
          nullable: true
        voltage3:
          type: number
          format: double
          nullable: true
        voltage4:
          type: number
          format: double
          nullable: true
        voltage5:
          type: number
          format: double
          nullable: true
        voltage6:
          type: number
          format: double
          nullable: true
        current1:
          type: number
          format: double
          nullable: true
        current2:
          type: number
          format: double
          nullable: true
        current3:
          type: number
          format: double
          nullable: true
        current4:
          type: number
          format: double
          nullable: true
        current5:
          type: number
          format: double
          nullable: true
        current6:
          type: number
          format: double
          nullable: true
        power1:
          type: number
          format: double
          nullable: true
        power2:
          type: number
          format: double
          nullable: true
        power3:
          type: number
          format: double
          nullable: true
        power4:
          type: number
          format: double
          nullable: true
        power5:
          type: number
          format: double
          nullable: true
        power6:
          type: number
          format: double
          nullable: true
        load_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - device_name
      - id
    Amenities:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        amenities_type:
          type: integer
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        count:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - amenities_type
      - branch
      - branch_id
      - count
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    AmenitiesType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    Announcement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
          nullable: true
        end_time:
          type: string
          format: time
          nullable: true
        venue:
          type: string
          nullable: true
          maxLength: 255
        pdf_attachment:
          type: string
          format: uri
          nullable: true
        external_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        modified_by:
          type: integer
          readOnly: true
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - branch
      - created
      - created_by
      - description
      - end_date
      - id
      - modified
      - modified_by
      - start_date
      - title
    AnnualLeaveQuota:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        total_leaves:
          type: number
          format: double
        used_leaves:
          type: number
          format: double
        remaining_leaves:
          type: string
          readOnly: true
        affects_salary:
          type: boolean
      required:
      - academic_year
      - branch
      - id
      - leave_type
      - remaining_leaves
      - total_leaves
      - user
    Answer:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        exam_answer_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        option_id:
          type: integer
          writeOnly: true
        option:
          allOf:
          - $ref: '#/components/schemas/QuestionOption'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        exam_answer:
          type: integer
        question:
          allOf:
          - $ref: '#/components/schemas/Question'
          readOnly: true
        question_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - exam_answer
      - exam_answer_id
      - id
      - modified
      - modified_by
      - option
      - option_id
      - question
      - question_id
    Attendance:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        attendance_date:
          type: string
          format: date
        period_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          readOnly: true
        attendance: {}
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - attendance_date
      - created
      - created_by
      - id
      - modified
      - modified_by
      - period
      - period_id
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    AvailabilityEnum:
      enum:
      - In Stock
      - Out of Stock
      - Not in Use
      type: string
      description: |-
        * `In Stock` - In Stock
        * `Out of Stock` - Out of Stock
        * `Not in Use` - Not in Use
    BasicUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        department:
          type: string
          readOnly: true
        date_of_joining:
          type: string
          format: date
          nullable: true
        date_of_releaving:
          type: string
          format: date
          nullable: true
      required:
      - department
      - full_name
      - id
    Bed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_occupied:
          type: boolean
        room:
          type: integer
      required:
      - id
      - name
      - room
      - room_name
    BlankEnum:
      enum:
      - ''
    BloodGroupEnum:
      enum:
      - A+
      - A-
      - B+
      - B-
      - AB+
      - AB-
      - O+
      - O-
      type: string
      description: |-
        * `A+` - A+
        * `A-` - A-
        * `B+` - B+
        * `B-` - B-
        * `AB+` - AB+
        * `AB-` - AB-
        * `O+` - O+
        * `O-` - O-
    Branch:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        geo_location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        is_main_branch:
          type: boolean
        address:
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        center_point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
          nullable: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - center_point
      - created
      - created_by
      - geo_location
      - id
      - modified
      - modified_by
      - name
    BulkAttendance:
      type: object
      properties:
        date:
          type: string
          format: date
        section_id:
          type: integer
        bulk_attendance:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
      required:
      - bulk_attendance
      - date
      - section_id
    CategoryEnum:
      enum:
      - salary
      - electricity
      - stationery
      - purchase
      - transport
      - utilities
      - events
      - maintance
      - others
      type: string
      description: |-
        * `salary` - Salary
        * `electricity` - Electricity
        * `stationery` - Stationery
        * `purchase` - Purchase
        * `transport` - Transport
        * `utilities` - Utilities
        * `events` - Events
        * `maintance` - Maintance
        * `others` - Others
    ChangePassword:
      type: object
      properties:
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
          readOnly: true
        sender:
          type: integer
          readOnly: true
        receiver:
          type: integer
      required:
      - id
      - is_read
      - message
      - receiver
      - sender
      - timestamp
    DayEnum:
      enum:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
      type: string
      description: |-
        * `Monday` - Monday
        * `Tuesday` - Tuesday
        * `Wednesday` - Wednesday
        * `Thursday` - Thursday
        * `Friday` - Friday
        * `Saturday` - Saturday
        * `Sunday` - Sunday
    DefaultUser:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        id:
          type: integer
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        group:
          type: integer
          nullable: true
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        date_joined:
          type: string
          format: date-time
        created_by:
          type: integer
          readOnly: true
          nullable: true
        modified:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_login:
          type: string
          format: date-time
          nullable: true
      required:
      - created
      - created_by
      - email
      - id
      - modified
      - modified_by
    Department:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        head_of_the_department:
          type: string
          readOnly: true
        access_to_all_users:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        staff_count:
          type: string
          readOnly: true
        department_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        head_of_department_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        access_to_all_user_ids:
          type: string
          readOnly: true
      required:
      - access_to_all_user_ids
      - access_to_all_users
      - branch
      - branch_id
      - created
      - created_by
      - head_of_the_department
      - id
      - modified
      - modified_by
      - name
      - staff_count
    DepartmentTypeEnum:
      enum:
      - Teaching
      - Non-Teaching
      type: string
      description: |-
        * `Teaching` - Teaching
        * `Non-Teaching` - Non-Teaching
    Designation:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    Device:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        device_type:
          $ref: '#/components/schemas/DeviceTypeD2eEnum'
        readings:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
        device_name:
          type: string
          nullable: true
          maxLength: 100
      required:
      - device_type
      - id
      - name
      - readings
      - room
      - room_id
    DeviceReading:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
          maxLength: 100
        device_type:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        timestamp:
          type: string
          format: date-time
        voltage:
          type: number
          format: double
          nullable: true
        current:
          type: number
          format: double
          nullable: true
        kw:
          type: number
          format: double
          nullable: true
        activity:
          type: boolean
          nullable: true
        other_status:
          type: boolean
          nullable: true
        relay_statuses:
          nullable: true
        voltage1:
          type: number
          format: double
          nullable: true
        voltage2:
          type: number
          format: double
          nullable: true
        voltage3:
          type: number
          format: double
          nullable: true
        voltage4:
          type: number
          format: double
          nullable: true
        voltage5:
          type: number
          format: double
          nullable: true
        voltage6:
          type: number
          format: double
          nullable: true
        current1:
          type: number
          format: double
          nullable: true
        current2:
          type: number
          format: double
          nullable: true
        current3:
          type: number
          format: double
          nullable: true
        current4:
          type: number
          format: double
          nullable: true
        current5:
          type: number
          format: double
          nullable: true
        current6:
          type: number
          format: double
          nullable: true
        power1:
          type: number
          format: double
          nullable: true
        power2:
          type: number
          format: double
          nullable: true
        power3:
          type: number
          format: double
          nullable: true
        power4:
          type: number
          format: double
          nullable: true
        power5:
          type: number
          format: double
          nullable: true
        power6:
          type: number
          format: double
          nullable: true
        load_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - device_name
      - id
    DeviceRegistry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
          maxLength: 100
        device_type:
          $ref: '#/components/schemas/DeviceRegistryDeviceTypeEnum'
        organisation:
          type: integer
        organisation_slug:
          type: string
          readOnly: true
      required:
      - device_name
      - id
      - organisation
      - organisation_slug
    DeviceRegistryDeviceTypeEnum:
      enum:
      - SINGLECHANNEL
      - BTB4CHANNEL
      - BTB8CHANNEL
      - BTB12CHANNEL
      - THREEPHASE
      - ATTENDANCEDEVICE
      type: string
      description: |-
        * `SINGLECHANNEL` - Single Channel Plug
        * `BTB4CHANNEL` - BTB 4 Channel
        * `BTB8CHANNEL` - BTB 8 Channel
        * `BTB12CHANNEL` - BTB 12 Channel
        * `THREEPHASE` - Three Phase
        * `ATTENDANCEDEVICE` - Attendance Device
    DeviceThreshold:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device:
          type: integer
        max_kw:
          type: number
          format: double
          description: Max kW before alert is triggered
        notify_mobile:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - device
      - id
      - max_kw
      - updated_at
    DeviceTypeD2eEnum:
      enum:
      - single_phase
      - three_phase
      - BTB4Channel
      - BTB8Channel
      - BTB12Channel
      type: string
      description: |-
        * `single_phase` - Single Phase
        * `three_phase` - Three Phase
        * `BTB4Channel` - BTB 4-Channel
        * `BTB8Channel` - BTB 8-Channel
        * `BTB12Channel` - BTB 12-Channel
    DeviceWithReadings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
        device_type:
          $ref: '#/components/schemas/DeviceTypeD2eEnum'
        is_active:
          type: boolean
        status:
          type: string
          readOnly: true
        offline_since:
          type: string
          readOnly: true
        last_two_readings:
          type: string
          readOnly: true
        switches:
          type: array
          items:
            $ref: '#/components/schemas/Switch'
          readOnly: true
      required:
      - device_name
      - id
      - last_two_readings
      - offline_since
      - status
      - switches
    Document:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        document_name:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        document:
          type: string
          format: uri
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - document
      - document_name
      - id
      - modified
      - modified_by
    Domain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Driver:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        license_number:
          type: string
          nullable: true
          maxLength: 50
        license_expiry_date:
          type: string
          format: date
          nullable: true
        experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        user:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - academic_year_name
      - branch
      - branch_name
      - full_name
      - id
      - user
    EMIPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_emi_months:
          type: integer
          maximum: 2147483647
          minimum: 0
        emi_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        interest_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        next_due_date:
          type: string
          format: date
          nullable: true
        remarks:
          type: string
          nullable: true
        amount_given_by:
          type: integer
          nullable: true
        amount_collected_by:
          type: integer
          nullable: true
      required:
      - emi_amount
      - id
      - total_emi_months
    Event:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
          readOnly: true
        end_date:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
          readOnly: true
        applies_to: {}
        staff_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        branches_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        sections_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        students_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        departments_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        image:
          type: string
          format: uri
          nullable: true
        standards_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        name:
          type: string
          maxLength: 100
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standards:
          type: array
          items:
            $ref: '#/components/schemas/Standard'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
          readOnly: true
        teachers_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - academic_year
      - academic_year_id
      - branches
      - created
      - created_by
      - departments
      - end_date
      - id
      - modified
      - modified_by
      - name
      - sections
      - standards
      - start_date
      - users
    Exam:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        end_date:
          type: string
          format: date
        modified:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        start_date:
          type: string
          format: date
        exam_schedules:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_online:
          type: boolean
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        exam_types:
          type: integer
          nullable: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
          writeOnly: true
      required:
      - academic_year
      - academic_year_id
      - created
      - created_by
      - end_date
      - exam_schedules
      - id
      - modified
      - modified_by
      - section
      - standard
      - start_date
    ExamAnswer:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/ExamAnswerStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - answers
      - created
      - created_by
      - exam
      - exam_id
      - id
      - modified
      - modified_by
      - user
      - user_id
    ExamAnswerStatusEnum:
      enum:
      - Pending
      - Submitted
      type: string
      description: |-
        * `Pending` - Pending
        * `Submitted` - Submitted
    ExamSchedule:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        department_id:
          type: integer
          writeOnly: true
        end_time:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        start_time:
          type: string
          format: date-time
      required:
      - created
      - created_by
      - department
      - department_id
      - end_time
      - id
      - modified
      - modified_by
      - start_time
    ExamTypes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Expenditure:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        expence_title:
          type: string
          maxLength: 150
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        paid_to:
          type: string
          maxLength: 100
        payment_mode:
          $ref: '#/components/schemas/PaymentModeEnum'
        status:
          $ref: '#/components/schemas/ExpenditureStatusEnum'
        bill_image:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - amount
      - branch
      - category
      - created_at
      - date
      - expence_title
      - id
      - paid_to
      - payment_mode
      - status
    ExpenditureStatusEnum:
      enum:
      - pending
      - paid
      type: string
      description: |-
        * `pending` - Pending
        * `paid` - Paid
    Features:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Fee:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        min_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        fee_type_id:
          type: integer
          writeOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        due_date:
          type: string
          format: date
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeType'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - amount
      - created
      - created_by
      - due_date
      - fee_type
      - fee_type_id
      - id
      - modified
      - modified_by
      - standard
      - standard_id
    FeeConcession:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_active:
          type: boolean
        fee:
          allOf:
          - $ref: '#/components/schemas/Fee'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        fee_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - fee
      - fee_id
      - id
      - modified
      - modified_by
      - user
      - user_id
    FeePayment:
      type: object
      properties:
        user_id:
          type: integer
        students_name:
          type: string
          readOnly: true
        identifier:
          type: string
          readOnly: true
        standard:
          type: string
          readOnly: true
        feetype:
          type: string
          readOnly: true
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        payment_reference:
          type: string
          nullable: true
          default: 'null'
        date:
          type: string
          format: date-time
          readOnly: true
        fee_id:
          type: integer
          readOnly: true
        fee:
          type: integer
      required:
      - amount
      - date
      - fee
      - fee_id
      - feetype
      - identifier
      - payment_type
      - standard
      - students_name
      - user_id
    FeeSummary:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        total_paid:
          type: integer
          maximum: 2147483647
          minimum: 0
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        fee:
          allOf:
          - $ref: '#/components/schemas/Fee'
          readOnly: true
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeType'
          readOnly: true
        total_fee_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        concession_id:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        total_concession:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_amount_to_pay:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - academic_year
      - created_by
      - fee
      - fee_type
      - id
      - modified_by
      - user
    FeeType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        is_hostel_fee:
          type: boolean
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - branch
      - branch_id
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    Floor:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        place:
          allOf:
          - $ref: '#/components/schemas/Place'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        place_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - place
      - place_id
    ForRolesEnum:
      enum:
      - student
      - staff
      type: string
      description: |-
        * `student` - Student
        * `staff` - Staff
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    GenderEnum:
      enum:
      - Male
      - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    GetUserBiometricData:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          type: integer
        fingerprint_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        rfid_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        face_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
      required:
      - created_by
      - face_data
      - fingerprint_data
      - id
      - modified_by
      - rfid_data
      - user
    Grade:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_present:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - exam
      - exam_id
      - id
      - modified
      - modified_by
      - user
      - user_id
    GradeType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        min_percentage:
          type: integer
          maximum: 2147483647
          minimum: 0
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        max_percentage:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - academic_year
      - academic_year_id
      - created
      - created_by
      - id
      - max_percentage
      - min_percentage
      - modified
      - modified_by
      - name
      - standard
      - standard_id
    Group:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        controlled_groups:
          type: string
          readOnly: true
        access_to_all_users:
          type: boolean
          writeOnly: true
        name:
          type: string
          maxLength: 150
        id:
          type: integer
          readOnly: true
        controlled_groups_id:
          type: array
          items:
            type: integer
          writeOnly: true
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
        permissions_id:
          type: array
          items:
            type: integer
          writeOnly: true
        staff_type:
          allOf:
          - $ref: '#/components/schemas/StaffTypeEnum'
          writeOnly: true
          default: Teaching
        group_type:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          readOnly: true
      required:
      - controlled_groups
      - group_type
      - id
      - name
      - permissions
    GroupType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        access_to_all_users:
          type: boolean
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeD37Enum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
      required:
      - created_by
      - id
      - modified_by
    Guardian:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        last_name:
          type: string
          maxLength: 100
        contact_number:
          type: string
          nullable: true
          maxLength: 128
        company_name:
          type: string
          nullable: true
          maxLength: 100
        annual_income:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        occupation:
          type: string
          maxLength: 100
        relation:
          $ref: '#/components/schemas/RelationEnum'
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          maxLength: 100
      required:
      - created
      - created_by
      - first_name
      - id
      - last_name
      - modified
      - modified_by
      - name
      - occupation
      - relation
    Holiday:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        name:
          type: string
          maxLength: 255
        reason:
          type: string
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - branch
      - date
      - id
      - name
    Homework:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        title:
          type: string
          maxLength: 255
        due_date:
          type: string
          format: date-time
          nullable: true
        period_schedule:
          allOf:
          - $ref: '#/components/schemas/PeriodSchedule'
          readOnly: true
        description:
          type: string
          nullable: true
        period_schedule_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - period_schedule
      - period_schedule_id
      - title
    HomeworkSubmission:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        homework:
          allOf:
          - $ref: '#/components/schemas/Homework'
          readOnly: true
        homework_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        submission_date:
          type: string
          format: date-time
          nullable: true
        homework_attachment:
          type: string
          format: uri
          nullable: true
        is_late:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
      required:
      - created
      - created_by
      - homework
      - homework_id
      - id
      - modified
      - modified_by
      - user
      - user_id
    HostelBlock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        branch:
          type: integer
      required:
      - branch
      - id
      - name
    HostelFloor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        block:
          allOf:
          - $ref: '#/components/schemas/HostelBlock'
          readOnly: true
        block_id:
          type: integer
          writeOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - block
      - block_id
      - id
      - name
    HostelRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        floor:
          allOf:
          - $ref: '#/components/schemas/HostelFloor'
          readOnly: true
        floor_id:
          type: integer
          writeOnly: true
        beds_count:
          type: string
          readOnly: true
        block_number:
          type: string
          readOnly: true
        block_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        number:
          type: string
          maxLength: 10
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        total_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        available_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_occupied:
          type: boolean
      required:
      - beds_count
      - block_name
      - block_number
      - floor
      - floor_id
      - id
      - name
      - number
      - room_type
    HostelRoomDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        floor:
          allOf:
          - $ref: '#/components/schemas/HostelFloor'
          readOnly: true
        beds:
          type: array
          items:
            $ref: '#/components/schemas/Bed'
          readOnly: true
        lockers:
          type: array
          items:
            $ref: '#/components/schemas/Locker'
          readOnly: true
        block_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        number:
          type: string
          maxLength: 10
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        total_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        available_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_occupied:
          type: boolean
      required:
      - beds
      - block_name
      - floor
      - id
      - lockers
      - name
      - number
      - room_type
    Inventory:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        inventory_tracking:
          type: string
          readOnly: true
        product_image:
          type: string
          format: uri
          nullable: true
        inventory_type_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/InventoryStatusEnum'
        id:
          type: integer
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        is_stationary:
          type: boolean
        bill_image:
          type: string
          format: uri
          nullable: true
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        inventory_type:
          allOf:
          - $ref: '#/components/schemas/InventoryType'
          readOnly: true
        name:
          type: string
          maxLength: 100
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        remarks:
          type: string
          nullable: true
      required:
      - branch
      - branch_id
      - created
      - created_by
      - id
      - inventory_tracking
      - inventory_type
      - inventory_type_id
      - modified
      - modified_by
      - name
    InventoryStatusEnum:
      enum:
      - Available
      - Not-Available
      type: string
      description: |-
        * `Available` - Available
        * `Not-Available` - Not-Available
    InventoryTracking:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/InventoryTrackingStatusEnum'
        standard:
          type: string
          readOnly: true
        inventory_id:
          type: integer
          writeOnly: true
        return_date:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        inventory:
          allOf:
          - $ref: '#/components/schemas/Inventory'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
      required:
      - created
      - created_at
      - created_by
      - id
      - inventory
      - inventory_id
      - modified
      - modified_by
      - quantity
      - room
      - room_id
      - standard
    InventoryTrackingStatusEnum:
      enum:
      - Issued
      - Damaged
      - Lost
      - Returned
      type: string
      description: |-
        * `Issued` - Issued
        * `Damaged` - Damaged
        * `Lost` - Lost
        * `Returned` - Returned
    InventoryType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/InventoryTypeTypeEnum'
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - branch
      - branch_id
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    InventoryTypeTypeEnum:
      enum:
      - Stationary
      - Room
      type: string
      description: |-
        * `Stationary` - Stationary
        * `Room` - Room
    Leave:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/LeaveStatusEnum'
        leave_duration:
          $ref: '#/components/schemas/LeaveDurationEnum'
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l2_approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l1_approved:
          type: boolean
          nullable: true
        l1_approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l2_approved:
          type: boolean
          nullable: true
        from_date:
          type: string
          format: date
        l1_approved_by_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        reason:
          type: string
        l2_approved_by_id:
          type: integer
          writeOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        to_date:
          type: string
          format: date
      required:
      - created
      - created_by
      - from_date
      - id
      - l1_approved_by
      - l1_approved_by_id
      - l2_approved_by
      - l2_approved_by_id
      - leave_type
      - modified
      - modified_by
      - reason
      - to_date
      - user
      - user_id
    LeaveDurationEnum:
      enum:
      - Full Day
      - Half Day
      type: string
      description: |-
        * `Full Day` - Full Day
        * `Half Day` - Half Day
    LeaveStatusEnum:
      enum:
      - Pending
      - L1_APPROVED
      - Approved
      - Rejected
      - cancelled
      type: string
      description: |-
        * `Pending` - Pending
        * `L1_APPROVED` - L1 Approved
        * `Approved` - Approved
        * `Rejected` - Rejected
        * `cancelled` - Cancelled
    LeaveTypeEnum:
      enum:
      - Casual
      - Sick
      - Earned
      - Maternity
      - Paternity
      - Compensatory
      - Special
      type: string
      description: |-
        * `Casual` - Casual
        * `Sick` - Sick
        * `Earned` - Earned
        * `Maternity` - Maternity
        * `Paternity` - Paternity
        * `Compensatory` - Compensatory
        * `Special` - Special
    Locker:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        room:
          type: integer
      required:
      - id
      - name
      - room
      - room_name
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    MealPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        day:
          $ref: '#/components/schemas/DayEnum'
        breakfast:
          type: string
          maxLength: 255
        lunch:
          type: string
          maxLength: 255
        dinner:
          type: string
          maxLength: 255
      required:
      - breakfast
      - day
      - dinner
      - id
      - lunch
    Notification:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        meta_data:
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        notification_type:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        notification_sub_type:
          $ref: '#/components/schemas/NotificationSubTypeEnum'
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - description
      - id
      - modified
      - modified_by
      - notification_sub_type
      - notification_type
      - title
    NotificationSubTypeEnum:
      enum:
      - Create
      - Update
      - Delete
      type: string
      description: |-
        * `Create` - Create
        * `Update` - Update
        * `Delete` - Delete
    NotificationUser:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_read:
          type: boolean
        notification_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - notification
      - notification_id
      - user
      - user_id
    NullEnum:
      enum:
      - null
    OccurenceEnum:
      enum:
      - Once
      - Daily
      - Weekly
      - Monthly
      type: string
      description: |-
        * `Once` - Once
        * `Daily` - Daily
        * `Weekly` - Weekly
        * `Monthly` - Monthly
    OfficialOrganisation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        alternate_phone_number:
          type: string
          nullable: true
          maxLength: 20
        alternate_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        description:
          type: string
          nullable: true
        address:
          type: string
        registration_id:
          type: string
          maxLength: 100
        tax_id:
          type: string
          nullable: true
          maxLength: 100
        gst_number:
          type: string
          nullable: true
          maxLength: 100
        website_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        org_uuid:
          type: string
          format: uuid
          readOnly: true
        organisation_slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        alternate_slugs:
          nullable: true
        domain:
          type: string
          maxLength: 100
        number_of_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 100
        OfficialOrganisation_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        feature_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationFeature'
          readOnly: true
        device_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        devices:
          type: array
          items:
            $ref: '#/components/schemas/VAI_IoTDevice'
          readOnly: true
        organisation_admin_name:
          type: string
          maxLength: 255
        organisation_admin_address:
          type: string
        org_admin_default_password:
          type: string
          maxLength: 255
        status:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pricing:
          type: string
          readOnly: true
      required:
      - address
      - created_at
      - device_ids
      - devices
      - domain
      - email
      - feature_ids
      - features
      - id
      - name
      - org_admin_default_password
      - org_uuid
      - organisation_admin_address
      - organisation_admin_name
      - organisation_slug
      - phone_number
      - pricing
      - registration_id
      - status
      - updated_at
    OrganisationCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        address:
          type: string
        registration:
          type: string
          nullable: true
          maxLength: 100
        tax_id:
          type: string
          nullable: true
          maxLength: 100
        website_url:
          type: string
          nullable: true
          format: uri
          maxLength: 100
        org_uuid:
          type: string
          format: uuid
          readOnly: true
        organisation_slug:
          type: string
          maxLength: 30
        number_of_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        url:
          type: string
          readOnly: true
          nullable: true
        database:
          type: string
          readOnly: true
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        modified_by:
          type: integer
          readOnly: true
          nullable: true
        domain:
          type: integer
        features:
          type: array
          items:
            type: integer
      required:
      - address
      - created
      - created_by
      - database
      - domain
      - email
      - id
      - modified
      - modified_by
      - name
      - org_uuid
      - organisation_slug
      - phone
      - url
    OrganisationFeature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
      required:
      - id
      - name
    OrganisationPaymentSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pricing:
          type: integer
        schedule_data:
          description: Stores list of EMIs with due_date and amount
        is_paid:
          type: boolean
        paid_on:
          type: string
          format: date
          nullable: true
        is_emi:
          type: boolean
        remarks:
          type: string
          nullable: true
        given_by:
          type: integer
          nullable: true
        collected_by:
          type: integer
          nullable: true
        organisation:
          type: string
          readOnly: true
      required:
      - id
      - organisation
      - pricing
    OrganisationPricing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        emi_plan_id:
          type: integer
          writeOnly: true
          nullable: true
        emi_plan:
          allOf:
          - $ref: '#/components/schemas/EMIPlan'
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        downpayment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        downpayment_received_on:
          type: string
          format: date
          nullable: true
        start_date:
          type: string
          format: date
        validity_date:
          type: string
          format: date
          nullable: true
        is_full_payment_done:
          type: boolean
        is_emi_enabled:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        organisation:
          type: integer
        created_by:
          type: integer
          nullable: true
        updated_by:
          type: integer
          nullable: true
      required:
      - created_at
      - emi_plan
      - id
      - organisation
      - updated_at
    PaginatedAcademicYearList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AcademicYear'
    PaginatedAllDeviceReadingsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllDeviceReadings'
    PaginatedAmenitiesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Amenities'
    PaginatedAmenitiesTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AmenitiesType'
    PaginatedAnnouncementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Announcement'
    PaginatedAnnualLeaveQuotaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnnualLeaveQuota'
    PaginatedAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    PaginatedAttendanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attendance'
    PaginatedBedList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bed'
    PaginatedBranchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedChatMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
    PaginatedDepartmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    PaginatedDesignationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Designation'
    PaginatedDeviceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    PaginatedDeviceReadingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceReading'
    PaginatedDeviceRegistryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRegistry'
    PaginatedDeviceThresholdList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceThreshold'
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedDomainList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Domain'
    PaginatedDriverList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Driver'
    PaginatedEMIPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EMIPlan'
    PaginatedEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedExamAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamAnswer'
    PaginatedExamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Exam'
    PaginatedExamScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
    PaginatedExamTypesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamTypes'
    PaginatedExpenditureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expenditure'
    PaginatedFeaturesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Features'
    PaginatedFeeConcessionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeConcession'
    PaginatedFeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
    PaginatedFeePaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeePayment'
    PaginatedFeeSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeSummary'
    PaginatedFeeTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeType'
    PaginatedFloorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Floor'
    PaginatedGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
    PaginatedGradeTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GradeType'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedGuardianList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Guardian'
    PaginatedHolidayList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Holiday'
    PaginatedHomeworkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Homework'
    PaginatedHomeworkSubmissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HomeworkSubmission'
    PaginatedHostelBlockList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HostelBlock'
    PaginatedHostelFloorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HostelFloor'
    PaginatedHostelRoomList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HostelRoom'
    PaginatedInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Inventory'
    PaginatedInventoryTrackingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InventoryTracking'
    PaginatedInventoryTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InventoryType'
    PaginatedLeaveList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Leave'
    PaginatedLockerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Locker'
    PaginatedMealPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MealPlan'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedNotificationUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationUser'
    PaginatedOfficialOrganisationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OfficialOrganisation'
    PaginatedOrganisationCreateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationCreate'
    PaginatedOrganisationFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationFeature'
    PaginatedOrganisationPaymentScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationPaymentSchedule'
    PaginatedOrganisationPricingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationPricing'
    PaginatedPeriodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Period'
    PaginatedPeriodScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PeriodSchedule'
    PaginatedPermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PaginatedPlaceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Place'
    PaginatedPlaceTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlaceType'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedQueryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Query'
    PaginatedQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PaginatedQuestionOptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
    PaginatedQuizOptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuizOption'
    PaginatedQuizQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuizQuestion'
    PaginatedReleavingDocumentCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReleavingDocumentCategory'
    PaginatedReleavingDocumentStatusList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReleavingDocumentStatus'
    PaginatedRoomList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    PaginatedRoomTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoomType'
    PaginatedSalaryCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SalaryCategory'
    PaginatedScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    PaginatedSecretList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Secret'
    PaginatedSectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Section'
    PaginatedStaffMonthlySalaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffMonthlySalary'
    PaginatedStaffSalaryTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffSalaryTemplate'
    PaginatedStandardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Standard'
    PaginatedStationaryFeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StationaryFee'
    PaginatedStationaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Stationary'
    PaginatedStationaryTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StationaryType'
    PaginatedStudentDetailsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentDetails'
    PaginatedStudentExamMarkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentExamMark'
    PaginatedSubTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubTask'
    PaginatedSwitchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Switch'
    PaginatedSyllabusList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Syllabus'
    PaginatedTaskCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskCategory'
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PaginatedTaskSubmissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskSubmission'
    PaginatedTeacherAttendanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeacherAttendance'
    PaginatedTotalFeeSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TotalFeeSummary'
    PaginatedTripList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
    PaginatedTripStopList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TripStop'
    PaginatedUserBiometricDataList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserBiometricData'
    PaginatedUserDetailTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDetailType'
    PaginatedUserDetailsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDetails'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVAI_IoTDeviceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VAI_IoTDevice'
    PaginatedVehicleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
    PaginatedVehicleTrackingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VehicleTracking'
    PaginatedVendorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
    PaginatedVisitorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Visitor'
    PatchedAcademicYear:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedAmenities:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        amenities_type:
          type: integer
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        count:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedAmenitiesType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedAnnouncement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
          nullable: true
        end_time:
          type: string
          format: time
          nullable: true
        venue:
          type: string
          nullable: true
          maxLength: 255
        pdf_attachment:
          type: string
          format: uri
          nullable: true
        external_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        modified_by:
          type: integer
          readOnly: true
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedAnnualLeaveQuota:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        total_leaves:
          type: number
          format: double
        used_leaves:
          type: number
          format: double
        remaining_leaves:
          type: string
          readOnly: true
        affects_salary:
          type: boolean
    PatchedAnswer:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        exam_answer_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        option_id:
          type: integer
          writeOnly: true
        option:
          allOf:
          - $ref: '#/components/schemas/QuestionOption'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        exam_answer:
          type: integer
        question:
          allOf:
          - $ref: '#/components/schemas/Question'
          readOnly: true
        question_id:
          type: integer
          writeOnly: true
    PatchedAttendance:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        attendance_date:
          type: string
          format: date
        period_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          readOnly: true
        attendance: {}
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedBed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_occupied:
          type: boolean
        room:
          type: integer
    PatchedBranch:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        geo_location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        is_main_branch:
          type: boolean
        address:
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        center_point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
          nullable: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedChatMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
          readOnly: true
        sender:
          type: integer
          readOnly: true
        receiver:
          type: integer
    PatchedDepartment:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        head_of_the_department:
          type: string
          readOnly: true
        access_to_all_users:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        staff_count:
          type: string
          readOnly: true
        department_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        head_of_department_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        access_to_all_user_ids:
          type: string
          readOnly: true
    PatchedDesignation:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        device_type:
          $ref: '#/components/schemas/DeviceTypeD2eEnum'
        readings:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
        device_name:
          type: string
          nullable: true
          maxLength: 100
    PatchedDeviceReading:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
          maxLength: 100
        device_type:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        timestamp:
          type: string
          format: date-time
        voltage:
          type: number
          format: double
          nullable: true
        current:
          type: number
          format: double
          nullable: true
        kw:
          type: number
          format: double
          nullable: true
        activity:
          type: boolean
          nullable: true
        other_status:
          type: boolean
          nullable: true
        relay_statuses:
          nullable: true
        voltage1:
          type: number
          format: double
          nullable: true
        voltage2:
          type: number
          format: double
          nullable: true
        voltage3:
          type: number
          format: double
          nullable: true
        voltage4:
          type: number
          format: double
          nullable: true
        voltage5:
          type: number
          format: double
          nullable: true
        voltage6:
          type: number
          format: double
          nullable: true
        current1:
          type: number
          format: double
          nullable: true
        current2:
          type: number
          format: double
          nullable: true
        current3:
          type: number
          format: double
          nullable: true
        current4:
          type: number
          format: double
          nullable: true
        current5:
          type: number
          format: double
          nullable: true
        current6:
          type: number
          format: double
          nullable: true
        power1:
          type: number
          format: double
          nullable: true
        power2:
          type: number
          format: double
          nullable: true
        power3:
          type: number
          format: double
          nullable: true
        power4:
          type: number
          format: double
          nullable: true
        power5:
          type: number
          format: double
          nullable: true
        power6:
          type: number
          format: double
          nullable: true
        load_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    PatchedDeviceRegistry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_name:
          type: string
          maxLength: 100
        device_type:
          $ref: '#/components/schemas/DeviceRegistryDeviceTypeEnum'
        organisation:
          type: integer
        organisation_slug:
          type: string
          readOnly: true
    PatchedDeviceThreshold:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device:
          type: integer
        max_kw:
          type: number
          format: double
          description: Max kW before alert is triggered
        notify_mobile:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDocument:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        document_name:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        document:
          type: string
          format: uri
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedDriver:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        license_number:
          type: string
          nullable: true
          maxLength: 50
        license_expiry_date:
          type: string
          format: date
          nullable: true
        experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        user:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedEMIPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_emi_months:
          type: integer
          maximum: 2147483647
          minimum: 0
        emi_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        interest_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        next_due_date:
          type: string
          format: date
          nullable: true
        remarks:
          type: string
          nullable: true
        amount_given_by:
          type: integer
          nullable: true
        amount_collected_by:
          type: integer
          nullable: true
    PatchedEvent:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
          readOnly: true
        end_date:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
          readOnly: true
        applies_to: {}
        staff_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        branches_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        sections_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        students_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        departments_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        image:
          type: string
          format: uri
          nullable: true
        standards_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        name:
          type: string
          maxLength: 100
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standards:
          type: array
          items:
            $ref: '#/components/schemas/Standard'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
          readOnly: true
        teachers_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
    PatchedExam:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        end_date:
          type: string
          format: date
        modified:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        start_date:
          type: string
          format: date
        exam_schedules:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_online:
          type: boolean
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        exam_types:
          type: integer
          nullable: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
          writeOnly: true
    PatchedExamAnswer:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/ExamAnswerStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedExamSchedule:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        department_id:
          type: integer
          writeOnly: true
        end_time:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        start_time:
          type: string
          format: date-time
    PatchedExamTypes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
    PatchedExpenditure:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        expence_title:
          type: string
          maxLength: 150
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        paid_to:
          type: string
          maxLength: 100
        payment_mode:
          $ref: '#/components/schemas/PaymentModeEnum'
        status:
          $ref: '#/components/schemas/ExpenditureStatusEnum'
        bill_image:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedFee:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        min_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        fee_type_id:
          type: integer
          writeOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        due_date:
          type: string
          format: date
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeType'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeConcession:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_active:
          type: boolean
        fee:
          allOf:
          - $ref: '#/components/schemas/Fee'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        fee_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedFeePayment:
      type: object
      properties:
        user_id:
          type: integer
        students_name:
          type: string
          readOnly: true
        identifier:
          type: string
          readOnly: true
        standard:
          type: string
          readOnly: true
        feetype:
          type: string
          readOnly: true
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        payment_reference:
          type: string
          nullable: true
          default: 'null'
        date:
          type: string
          format: date-time
          readOnly: true
        fee_id:
          type: integer
          readOnly: true
        fee:
          type: integer
    PatchedFeeType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        is_hostel_fee:
          type: boolean
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedFloor:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        place:
          allOf:
          - $ref: '#/components/schemas/Place'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        place_id:
          type: integer
          writeOnly: true
    PatchedGrade:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_present:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedGradeType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        min_percentage:
          type: integer
          maximum: 2147483647
          minimum: 0
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        max_percentage:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedGroup:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        controlled_groups:
          type: string
          readOnly: true
        access_to_all_users:
          type: boolean
          writeOnly: true
        name:
          type: string
          maxLength: 150
        id:
          type: integer
          readOnly: true
        controlled_groups_id:
          type: array
          items:
            type: integer
          writeOnly: true
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
        permissions_id:
          type: array
          items:
            type: integer
          writeOnly: true
        staff_type:
          allOf:
          - $ref: '#/components/schemas/StaffTypeEnum'
          writeOnly: true
          default: Teaching
        group_type:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          readOnly: true
    PatchedGuardian:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        last_name:
          type: string
          maxLength: 100
        contact_number:
          type: string
          nullable: true
          maxLength: 128
        company_name:
          type: string
          nullable: true
          maxLength: 100
        annual_income:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        occupation:
          type: string
          maxLength: 100
        relation:
          $ref: '#/components/schemas/RelationEnum'
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          maxLength: 100
    PatchedHoliday:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        name:
          type: string
          maxLength: 255
        reason:
          type: string
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedHomework:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        title:
          type: string
          maxLength: 255
        due_date:
          type: string
          format: date-time
          nullable: true
        period_schedule:
          allOf:
          - $ref: '#/components/schemas/PeriodSchedule'
          readOnly: true
        description:
          type: string
          nullable: true
        period_schedule_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedHomeworkSubmission:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        homework:
          allOf:
          - $ref: '#/components/schemas/Homework'
          readOnly: true
        homework_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        submission_date:
          type: string
          format: date-time
          nullable: true
        homework_attachment:
          type: string
          format: uri
          nullable: true
        is_late:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
    PatchedHostelBlock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        branch:
          type: integer
    PatchedHostelFloor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        block:
          allOf:
          - $ref: '#/components/schemas/HostelBlock'
          readOnly: true
        block_id:
          type: integer
          writeOnly: true
        name:
          type: string
          maxLength: 100
    PatchedHostelRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        floor:
          allOf:
          - $ref: '#/components/schemas/HostelFloor'
          readOnly: true
        floor_id:
          type: integer
          writeOnly: true
        beds_count:
          type: string
          readOnly: true
        block_number:
          type: string
          readOnly: true
        block_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        number:
          type: string
          maxLength: 10
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        total_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        available_beds:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_occupied:
          type: boolean
    PatchedInventory:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        inventory_tracking:
          type: string
          readOnly: true
        product_image:
          type: string
          format: uri
          nullable: true
        inventory_type_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/InventoryStatusEnum'
        id:
          type: integer
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        is_stationary:
          type: boolean
        bill_image:
          type: string
          format: uri
          nullable: true
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        inventory_type:
          allOf:
          - $ref: '#/components/schemas/InventoryType'
          readOnly: true
        name:
          type: string
          maxLength: 100
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        remarks:
          type: string
          nullable: true
    PatchedInventoryTracking:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/InventoryTrackingStatusEnum'
        standard:
          type: string
          readOnly: true
        inventory_id:
          type: integer
          writeOnly: true
        return_date:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        inventory:
          allOf:
          - $ref: '#/components/schemas/Inventory'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
    PatchedInventoryType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/InventoryTypeTypeEnum'
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedLeave:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/LeaveStatusEnum'
        leave_duration:
          $ref: '#/components/schemas/LeaveDurationEnum'
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l2_approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l1_approved:
          type: boolean
          nullable: true
        l1_approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        l2_approved:
          type: boolean
          nullable: true
        from_date:
          type: string
          format: date
        l1_approved_by_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        reason:
          type: string
        l2_approved_by_id:
          type: integer
          writeOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        to_date:
          type: string
          format: date
    PatchedLocker:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        room:
          type: integer
    PatchedMealPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        day:
          $ref: '#/components/schemas/DayEnum'
        breakfast:
          type: string
          maxLength: 255
        lunch:
          type: string
          maxLength: 255
        dinner:
          type: string
          maxLength: 255
    PatchedNotification:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        meta_data:
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        notification_type:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        notification_sub_type:
          $ref: '#/components/schemas/NotificationSubTypeEnum'
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedNotificationUser:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_read:
          type: boolean
        notification_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedOfficialOrganisation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        alternate_phone_number:
          type: string
          nullable: true
          maxLength: 20
        alternate_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        description:
          type: string
          nullable: true
        address:
          type: string
        registration_id:
          type: string
          maxLength: 100
        tax_id:
          type: string
          nullable: true
          maxLength: 100
        gst_number:
          type: string
          nullable: true
          maxLength: 100
        website_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        org_uuid:
          type: string
          format: uuid
          readOnly: true
        organisation_slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        alternate_slugs:
          nullable: true
        domain:
          type: string
          maxLength: 100
        number_of_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 100
        OfficialOrganisation_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        feature_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationFeature'
          readOnly: true
        device_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        devices:
          type: array
          items:
            $ref: '#/components/schemas/VAI_IoTDevice'
          readOnly: true
        organisation_admin_name:
          type: string
          maxLength: 255
        organisation_admin_address:
          type: string
        org_admin_default_password:
          type: string
          maxLength: 255
        status:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pricing:
          type: string
          readOnly: true
    PatchedOrganisationFeature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
    PatchedOrganisationPaymentSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pricing:
          type: integer
        schedule_data:
          description: Stores list of EMIs with due_date and amount
        is_paid:
          type: boolean
        paid_on:
          type: string
          format: date
          nullable: true
        is_emi:
          type: boolean
        remarks:
          type: string
          nullable: true
        given_by:
          type: integer
          nullable: true
        collected_by:
          type: integer
          nullable: true
        organisation:
          type: string
          readOnly: true
    PatchedOrganisationPricing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        emi_plan_id:
          type: integer
          writeOnly: true
          nullable: true
        emi_plan:
          allOf:
          - $ref: '#/components/schemas/EMIPlan'
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        downpayment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        downpayment_received_on:
          type: string
          format: date
          nullable: true
        start_date:
          type: string
          format: date
        validity_date:
          type: string
          format: date
          nullable: true
        is_full_payment_done:
          type: boolean
        is_emi_enabled:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        organisation:
          type: integer
        created_by:
          type: integer
          nullable: true
        updated_by:
          type: integer
          nullable: true
    PatchedPeriod:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        department_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        period_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        day:
          allOf:
          - $ref: '#/components/schemas/DayEnum'
          default: Monday
        teacher_id:
          type: integer
          writeOnly: true
        teacher:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedPeriodSchedule:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        period_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        syllabus_id:
          type: integer
          writeOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        schedule_percent:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedPlace:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        geo_location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
        place_type_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        center_point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        place_type:
          allOf:
          - $ref: '#/components/schemas/PlaceType'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedPlaceType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        purchase_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        shop_name:
          type: string
          nullable: true
          maxLength: 100
        vendor_phone:
          type: string
          nullable: true
          maxLength: 15
        availability:
          $ref: '#/components/schemas/AvailabilityEnum'
        bill_photo:
          type: string
          format: uri
          nullable: true
        product_photo:
          type: string
          format: uri
          nullable: true
        buyer_name:
          type: string
          nullable: true
          maxLength: 100
        buyer_phone:
          type: string
          nullable: true
          maxLength: 15
        product_use:
          type: string
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedQuery:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/QueryStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        description:
          type: string
        assigned_to:
          type: integer
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        comment:
          type: string
        modified:
          type: string
          format: date-time
          readOnly: true
        subject:
          type: string
          maxLength: 255
    PatchedQuestion:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        question_options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        negative_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: string
    PatchedQuestionOption:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_correct:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        question_id:
          type: integer
          writeOnly: true
    PatchedQuizOption:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_correct:
          type: boolean
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
          readOnly: true
        question_id:
          type: integer
          writeOnly: true
    PatchedQuizQuestion:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          readOnly: true
        is_active:
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuizOption'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        topic_id:
          type: integer
          writeOnly: true
        question:
          type: string
    PatchedReleavingDocumentCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
          nullable: true
        for_roles:
          $ref: '#/components/schemas/ForRolesEnum'
    PatchedReleavingDocumentStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        given_by_name:
          type: string
          readOnly: true
        is_given:
          type: boolean
        given_at:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        category:
          type: integer
        given_by:
          type: integer
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
        standard:
          type: integer
          nullable: true
        section:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
    PatchedRoom:
      type: object
      properties:
        room_id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        room_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceWithReadings'
          readOnly: true
    PatchedRoomType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedSalaryCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_deductible:
          type: boolean
    PatchedSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_id:
          type: integer
          writeOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/SimpleDevice'
          readOnly: true
        is_active:
          type: boolean
        activity:
          $ref: '#/components/schemas/ActivityEnum'
        action:
          $ref: '#/components/schemas/ActionEnum'
        occurence:
          $ref: '#/components/schemas/OccurenceEnum'
        date:
          type: string
          format: date
          nullable: true
        time:
          type: string
          format: time
          nullable: true
        day:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedSection:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        class_representative:
          type: string
          readOnly: true
        student_count:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        head_teacher_id:
          type: integer
          writeOnly: true
        head_teacher:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedStaffMonthlySalary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/BasicUser'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        month:
          type: string
          format: date
        academic_year:
          type: integer
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        gross_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        deductions:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        net_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        generated_on:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
    PatchedStaffSalaryTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/SalaryCategory'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        applicable:
          type: boolean
    PatchedStandard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        academic_year:
          type: integer
          writeOnly: true
        academic_year_display:
          type: string
          readOnly: true
        access_to_all_user_ids:
          type: string
          readOnly: true
        student_assigned_count:
          type: string
          readOnly: true
        student_total_count:
          type: string
          readOnly: true
        section_count:
          type: string
          readOnly: true
        stationary:
          type: string
          readOnly: true
        inventory:
          type: string
          readOnly: true
        sections:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified_by:
          type: string
          readOnly: true
        access_to_all_users:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        name:
          type: string
          maxLength: 100
        branch:
          type: integer
    PatchedStationary:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        inventory_tracking:
          allOf:
          - $ref: '#/components/schemas/InventoryTracking'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        stationary_type:
          allOf:
          - $ref: '#/components/schemas/StationaryType'
          readOnly: true
        is_active:
          type: boolean
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        stationary_type_id:
          type: integer
          writeOnly: true
        inventory_tracking_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedStationaryFee:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        stationaies:
          type: string
          readOnly: true
    PatchedStationaryType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentDetails:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        is_class_representative:
          type: boolean
        is_transport_required:
          type: boolean
        stationary:
          type: string
          readOnly: true
        stationary_fee_paid:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        stationary_fee_left:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        given_stationary_count:
          nullable: true
        given_stationary:
          type: array
          items:
            type: integer
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        bed:
          type: integer
          nullable: true
        is_active:
          type: boolean
        is_stationary_given:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        stationary_fee_amount_paid:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        roll_number:
          type: string
          nullable: true
          maxLength: 100
    PatchedStudentExamMark:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        exam_schedule:
          type: integer
        student:
          type: integer
        student_id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        exam_type_id:
          type: string
          readOnly: true
        exam_type_name:
          type: string
          readOnly: true
        standard_id:
          type: string
          readOnly: true
        standard_name:
          type: string
          readOnly: true
        section_id:
          type: string
          readOnly: true
        section_name:
          type: string
          readOnly: true
        department_id:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
    PatchedSubTask:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        task:
          allOf:
          - $ref: '#/components/schemas/Task'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        task_id:
          type: integer
          writeOnly: true
    PatchedSwitch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_id:
          type: integer
          writeOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/SimpleDevice'
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_on:
          type: boolean
    PatchedSyllabus:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedTask:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        category_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        title:
          type: string
          maxLength: 255
        due_date:
          type: string
          format: date-time
          nullable: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        description:
          type: string
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/TaskCategory'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedTaskCategory:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedTaskSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        task:
          type: integer
        submitted_by:
          type: integer
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        submission_notes:
          type: string
        completion_percent:
          type: integer
          maximum: 100
          minimum: 0
        submission_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        submitted_by_detail:
          type: string
          readOnly: true
        created_by_detail:
          type: string
          readOnly: true
    PatchedTeacherAttendance:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        attendance_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/TeacherAttendanceStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedTopic:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        url_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_active:
          type: boolean
        parent:
          allOf:
          - $ref: '#/components/schemas/TopicReadOnly'
          readOnly: true
        description:
          type: string
          nullable: true
        parent_id:
          type: integer
          writeOnly: true
          nullable: true
        syllabus_id:
          type: integer
          writeOnly: true
          nullable: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedTrip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        primary_driver_name:
          type: string
          readOnly: true
        secondary_driver_name:
          type: string
          readOnly: true
        vehicle_name:
          type: string
          readOnly: true
        total_passengers:
          type: string
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        stops:
          type: array
          items:
            $ref: '#/components/schemas/TripStop'
          readOnly: true
        start_point:
          type: string
          maxLength: 100
        end_point:
          type: string
          maxLength: 100
        creation_date:
          type: string
          format: date
        parking_location:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/TripStatusEnum'
        primary_driver:
          type: integer
        secondary_driver:
          type: integer
          nullable: true
        vehicle:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedTripStop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        trip:
          type: integer
        stop_name:
          type: string
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        stop_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The order of this stop in the trip
        stop_time:
          type: string
          format: time
          description: Scheduled time at this stop
    PatchedUser:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        last_name:
          type: string
          maxLength: 150
        blood_group:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Guardian'
          readOnly: true
        pen_number:
          type: string
          nullable: true
          maxLength: 100
        my_section_id:
          type: string
          readOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 128
        details:
          type: array
          items:
            $ref: '#/components/schemas/UserDetails'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        address:
          nullable: true
        date_of_releaving:
          type: string
          format: date
          nullable: true
        student_details:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        alternate_phone:
          type: string
          nullable: true
        biometric_data:
          type: array
          items:
            $ref: '#/components/schemas/GetUserBiometricData'
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        group_id:
          type: integer
          writeOnly: true
        branch_id:
          type: integer
          writeOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        date_of_joining:
          type: string
          format: date
          nullable: true
        standard_id:
          type: integer
          writeOnly: true
          nullable: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        designation:
          allOf:
          - $ref: '#/components/schemas/Designation'
          readOnly: true
        admission_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        employee_id:
          type: string
          nullable: true
          maxLength: 100
        profile_image:
          type: string
          format: uri
          nullable: true
        student_type:
          $ref: '#/components/schemas/StudentTypeEnum'
        organisation:
          type: string
          readOnly: true
        aapar_number:
          type: string
          nullable: true
          maxLength: 100
        guardian_details:
          type: array
          items:
            $ref: '#/components/schemas/Guardian'
          writeOnly: true
        designation_id:
          type: integer
          writeOnly: true
          nullable: true
        dob:
          type: string
          format: date
          nullable: true
        last_login:
          type: string
          format: date-time
          nullable: true
        department_id:
          type: integer
          writeOnly: true
          nullable: true
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        assigned_standards:
          type: array
          items:
            type: integer
        my_department_users:
          type: string
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          type: string
          readOnly: true
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        education_details:
          nullable: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
    PatchedUserBiometricData:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        fingerprint_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        rfid_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        face_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
    PatchedUserDetailType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        document_required:
          type: boolean
        is_required:
          type: boolean
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        group_id:
          type: integer
          writeOnly: true
        branch_id:
          type: integer
          writeOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
    PatchedUserDetails:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        value:
          type: string
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        document:
          type: string
          format: uri
          nullable: true
        detail_type:
          allOf:
          - $ref: '#/components/schemas/UserDetailType'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        detail_type_id:
          type: integer
          writeOnly: true
    PatchedVAI_IoTDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        device_unique_id:
          type: string
          nullable: true
          maxLength: 100
        device_type:
          $ref: '#/components/schemas/VAIIoTDeviceDeviceTypeEnum'
        description:
          type: string
        is_testing:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
        updated_by:
          type: integer
          nullable: true
    PatchedVehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        vehicle_type:
          $ref: '#/components/schemas/VehicleTypeEnum'
        registration_number:
          type: string
          nullable: true
          maxLength: 50
        joining_date:
          type: string
          format: date
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        model_name:
          type: string
          nullable: true
          maxLength: 100
        manufacturer_date:
          type: string
          format: date
          nullable: true
        total_seats:
          type: integer
          maximum: 2147483647
          minimum: 0
        owner_name:
          type: string
          nullable: true
          maxLength: 100
        registration_place:
          type: string
          nullable: true
          maxLength: 100
        fuel_type:
          type: string
          nullable: true
          maxLength: 50
        fuel_capacity:
          type: string
          nullable: true
          maxLength: 50
        mileage:
          type: string
          nullable: true
          maxLength: 50
        number_plate:
          type: string
          nullable: true
          maxLength: 50
        vehicle_id:
          type: string
          maxLength: 50
        school_side_number:
          type: string
          nullable: true
          maxLength: 50
        location:
          type: string
          nullable: true
          maxLength: 100
        vendor_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        vendor_phone:
          type: string
          nullable: true
          maxLength: 15
        registration_certificate:
          type: string
          format: uri
          nullable: true
        registration_expiry_date:
          type: string
          format: date
          nullable: true
        fitness_certificate:
          type: string
          format: uri
          nullable: true
        fitness_expiry_date:
          type: string
          format: date
          nullable: true
        insurance:
          type: string
          format: uri
          nullable: true
        insurance_expiry_date:
          type: string
          format: date
          nullable: true
        pollution_certificate:
          type: string
          format: uri
          nullable: true
        pollution_expiry_date:
          type: string
          format: date
          nullable: true
        owner_aadhar:
          type: string
          format: uri
          nullable: true
        address_proof:
          type: string
          format: uri
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
    PatchedVehicleTracking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        trip_details:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        current_location:
          type: string
          nullable: true
          maxLength: 100
        status:
          type: boolean
          nullable: true
        vehicle_tracking_status:
          type: boolean
        trip:
          type: integer
    PatchedVendor:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        gstin:
          type: string
          nullable: true
          maxLength: 100
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        address:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        phone_number:
          type: string
          maxLength: 128
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    PatchedVisitor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        student_id:
          type: integer
          writeOnly: true
        allowed_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        allowed_by_id:
          type: integer
          writeOnly: true
        name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 15
        relation:
          type: string
          maxLength: 50
        visited_date:
          type: string
          format: date
        vacated_date:
          type: string
          format: date
          nullable: true
        check_in_time:
          type: string
          format: time
        check_out_time:
          type: string
          format: time
          nullable: true
        alternative_phone:
          type: string
          nullable: true
          maxLength: 15
        profile_pic:
          type: string
          format: uri
          nullable: true
        reasons:
          type: string
          nullable: true
    PaymentModeEnum:
      enum:
      - cash
      - upi
      - bank_transfer
      type: string
      description: |-
        * `cash` - Cash
        * `upi` - UPI
        * `bank_transfer` - Bank Transfer
    PaymentTypeEnum:
      enum:
      - Cash
      - Cheque
      - Online
      type: string
      description: |-
        * `Cash` - Cash
        * `Cheque` - Cheque
        * `Online` - Online
    Period:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        department_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        period_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        day:
          allOf:
          - $ref: '#/components/schemas/DayEnum'
          default: Monday
        teacher_id:
          type: integer
          writeOnly: true
        teacher:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - department
      - department_id
      - id
      - modified
      - modified_by
      - period_number
      - section
      - section_id
      - teacher
      - teacher_id
    PeriodSchedule:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        period_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        syllabus_id:
          type: integer
          writeOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        schedule_percent:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - period
      - period_id
      - syllabus
      - syllabus_id
    Permission:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        name:
          type: string
          maxLength: 255
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        content_type:
          type: integer
        codename:
          type: string
          maxLength: 100
        operation_name:
          type: string
          readOnly: true
        type_name:
          type: string
          readOnly: true
      required:
      - codename
      - content_type
      - created_by
      - id
      - modified_by
      - name
      - operation_name
      - type_name
    Place:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        geo_location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
        place_type_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        center_point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        place_type:
          allOf:
          - $ref: '#/components/schemas/PlaceType'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - branch
      - branch_id
      - center_point
      - created
      - created_by
      - geo_location
      - id
      - modified
      - modified_by
      - name
      - place_type
      - place_type_id
    PlaceType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    PriorityEnum:
      enum:
      - Low
      - Medium
      - High
      - Critical
      type: string
      description: |-
        * `Low` - Low
        * `Medium` - Medium
        * `High` - High
        * `Critical` - Critical
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        purchase_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        shop_name:
          type: string
          nullable: true
          maxLength: 100
        vendor_phone:
          type: string
          nullable: true
          maxLength: 15
        availability:
          $ref: '#/components/schemas/AvailabilityEnum'
        bill_photo:
          type: string
          format: uri
          nullable: true
        product_photo:
          type: string
          format: uri
          nullable: true
        buyer_name:
          type: string
          nullable: true
          maxLength: 100
        buyer_phone:
          type: string
          nullable: true
          maxLength: 15
        product_use:
          type: string
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - academic_year_name
      - branch
      - branch_name
      - id
      - name
      - price
      - purchase_date
      - quantity
    Query:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        status:
          $ref: '#/components/schemas/QueryStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        description:
          type: string
        assigned_to:
          type: integer
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        comment:
          type: string
        modified:
          type: string
          format: date-time
          readOnly: true
        subject:
          type: string
          maxLength: 255
      required:
      - comment
      - created
      - created_by
      - description
      - id
      - modified
      - modified_by
      - subject
      - user
      - user_id
    QueryStatusEnum:
      enum:
      - Open
      - In Progress
      - Resolved
      - Closed
      type: string
      description: |-
        * `Open` - Open
        * `In Progress` - In Progress
        * `Resolved` - Resolved
        * `Closed` - Closed
    Question:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        question_options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        exam:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        negative_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        exam_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: string
      required:
      - created
      - created_by
      - exam
      - exam_id
      - id
      - marks
      - modified
      - modified_by
      - question
      - question_options
    QuestionOption:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_correct:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        question_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - question
      - question_id
    QuizOption:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_correct:
          type: boolean
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
          readOnly: true
        question_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - question
      - question_id
    QuizQuestion:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        marks:
          type: integer
          maximum: 2147483647
          minimum: 0
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          readOnly: true
        is_active:
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuizOption'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        topic_id:
          type: integer
          writeOnly: true
        question:
          type: string
      required:
      - created
      - created_by
      - id
      - marks
      - modified
      - modified_by
      - options
      - question
      - topic
      - topic_id
    RelationEnum:
      enum:
      - Father
      - Mother
      - Guardian
      type: string
      description: |-
        * `Father` - Father
        * `Mother` - Mother
        * `Guardian` - Guardian
    ReleavingDocumentCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
          nullable: true
        for_roles:
          $ref: '#/components/schemas/ForRolesEnum'
      required:
      - id
      - name
    ReleavingDocumentStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        given_by_name:
          type: string
          readOnly: true
        is_given:
          type: boolean
        given_at:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        category:
          type: integer
        given_by:
          type: integer
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
        standard:
          type: integer
          nullable: true
        section:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
      required:
      - academic_year
      - branch
      - category
      - given_by_name
      - id
      - user
    ResetPassword:
      type: object
      properties:
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        token:
          type: string
        email:
          type: string
          format: email
      required:
      - email
      - password1
      - password2
      - token
    Room:
      type: object
      properties:
        room_id:
          type: integer
          readOnly: true
        room_name:
          type: string
          readOnly: true
        room_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceWithReadings'
          readOnly: true
      required:
      - devices
      - room_id
      - room_name
      - room_number
    RoomType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    RoomTypeEnum:
      enum:
      - AC
      - NON-AC
      type: string
      description: |-
        * `AC` - AC
        * `NON-AC` - Non-AC
    SalaryCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_deductible:
          type: boolean
      required:
      - id
      - name
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_id:
          type: integer
          writeOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/SimpleDevice'
          readOnly: true
        is_active:
          type: boolean
        activity:
          $ref: '#/components/schemas/ActivityEnum'
        action:
          $ref: '#/components/schemas/ActionEnum'
        occurence:
          $ref: '#/components/schemas/OccurenceEnum'
        date:
          type: string
          format: date
          nullable: true
        time:
          type: string
          format: time
          nullable: true
        day:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - action
      - activity
      - device
      - device_id
      - id
      - occurence
    Secret:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        value:
          type: string
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
      required:
      - created_by
      - id
      - modified_by
      - name
      - value
    Section:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        class_representative:
          type: string
          readOnly: true
        student_count:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        head_teacher_id:
          type: integer
          writeOnly: true
        head_teacher:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - class_representative
      - created
      - created_by
      - head_teacher
      - head_teacher_id
      - id
      - modified
      - modified_by
      - name
      - standard
      - standard_id
      - student_count
    SimpleDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        device_type:
          $ref: '#/components/schemas/DeviceTypeD2eEnum'
        is_active:
          type: boolean
      required:
      - id
      - name
    StaffListID:
      type: object
      properties:
        teachers:
          type: array
          items:
            type: integer
          writeOnly: true
          minItems: 1
      required:
      - teachers
    StaffMonthlySalary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/BasicUser'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        month:
          type: string
          format: date
        academic_year:
          type: integer
          readOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        gross_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        deductions:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        net_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        generated_on:
          type: string
          format: date-time
          readOnly: true
        remarks:
          type: string
          nullable: true
      required:
      - academic_year
      - academic_year_id
      - deductions
      - generated_on
      - gross_salary
      - id
      - month
      - net_salary
      - user
      - user_id
    StaffSalaryTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/SalaryCategory'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        applicable:
          type: boolean
      required:
      - amount
      - category
      - category_id
      - id
      - user
      - user_id
    StaffTypeEnum:
      enum:
      - Teaching
      - Non-Teaching
      - Both
      type: string
      description: |-
        * `Teaching` - Teaching
        * `Non-Teaching` - Non-Teaching
        * `Both` - Both
    Standard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        academic_year:
          type: integer
          writeOnly: true
        academic_year_display:
          type: string
          readOnly: true
        access_to_all_user_ids:
          type: string
          readOnly: true
        student_assigned_count:
          type: string
          readOnly: true
        student_total_count:
          type: string
          readOnly: true
        section_count:
          type: string
          readOnly: true
        stationary:
          type: string
          readOnly: true
        inventory:
          type: string
          readOnly: true
        sections:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified_by:
          type: string
          readOnly: true
        access_to_all_users:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        name:
          type: string
          maxLength: 100
        branch:
          type: integer
      required:
      - academic_year
      - academic_year_display
      - access_to_all_user_ids
      - access_to_all_users
      - branch
      - created
      - created_by
      - id
      - inventory
      - modified
      - modified_by
      - name
      - section_count
      - sections
      - stationary
      - student_assigned_count
      - student_total_count
    Stationary:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        inventory_tracking:
          allOf:
          - $ref: '#/components/schemas/InventoryTracking'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        stationary_type:
          allOf:
          - $ref: '#/components/schemas/StationaryType'
          readOnly: true
        is_active:
          type: boolean
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        stationary_type_id:
          type: integer
          writeOnly: true
        inventory_tracking_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - branch
      - branch_id
      - created
      - created_by
      - id
      - inventory_tracking
      - inventory_tracking_id
      - modified
      - modified_by
      - name
      - stationary_type
      - stationary_type_id
    StationaryFee:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        stationaies:
          type: string
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - standard
      - standard_id
      - stationaies
    StationaryType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        description:
          type: string
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - branch
      - branch_id
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    StudentDetails:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        is_class_representative:
          type: boolean
        is_transport_required:
          type: boolean
        stationary:
          type: string
          readOnly: true
        stationary_fee_paid:
          type: boolean
        user_id:
          type: integer
          writeOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        stationary_fee_left:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        given_stationary_count:
          nullable: true
        given_stationary:
          type: array
          items:
            type: integer
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        bed:
          type: integer
          nullable: true
        is_active:
          type: boolean
        is_stationary_given:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section_id:
          type: integer
          writeOnly: true
        stationary_fee_amount_paid:
          type: integer
          maximum: 2147483647
          minimum: 0
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        roll_number:
          type: string
          nullable: true
          maxLength: 100
      required:
      - academic_year
      - academic_year_id
      - created
      - created_by
      - id
      - modified
      - modified_by
      - section
      - section_id
      - stationary
      - stationary_fee_left
      - user
      - user_id
    StudentExamMark:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        exam_schedule:
          type: integer
        student:
          type: integer
        student_id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        exam_type_id:
          type: string
          readOnly: true
        exam_type_name:
          type: string
          readOnly: true
        standard_id:
          type: string
          readOnly: true
        standard_name:
          type: string
          readOnly: true
        section_id:
          type: string
          readOnly: true
        section_name:
          type: string
          readOnly: true
        department_id:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
      required:
      - department_id
      - department_name
      - exam_schedule
      - exam_type_id
      - exam_type_name
      - id
      - section_id
      - section_name
      - standard_id
      - standard_name
      - student
      - student_id
      - student_name
    StudentListID:
      type: object
      properties:
        students:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - students
    StudentTypeEnum:
      enum:
      - Regular
      - Hostel
      type: string
      description: |-
        * `Regular` - Regular
        * `Hostel` - Hostel
    SubTask:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        task:
          allOf:
          - $ref: '#/components/schemas/Task'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        task_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - task
      - task_id
      - title
    Switch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device_id:
          type: integer
          writeOnly: true
        device:
          allOf:
          - $ref: '#/components/schemas/SimpleDevice'
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_on:
          type: boolean
      required:
      - device
      - device_id
      - id
      - name
    Syllabus:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        standard_id:
          type: integer
          writeOnly: true
        is_active:
          type: boolean
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - created
      - created_by
      - department
      - department_id
      - id
      - modified
      - modified_by
      - standard
      - standard_id
    Task:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        category_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        is_completed:
          type: boolean
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        title:
          type: string
          maxLength: 255
        due_date:
          type: string
          format: date-time
          nullable: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        description:
          type: string
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/TaskCategory'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - category_id
      - created
      - created_by
      - id
      - modified
      - modified_by
      - title
      - user
      - user_id
    TaskCategory:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
    TaskSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        task:
          type: integer
        submitted_by:
          type: integer
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        submission_notes:
          type: string
        completion_percent:
          type: integer
          maximum: 100
          minimum: 0
        submission_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        submitted_by_detail:
          type: string
          readOnly: true
        created_by_detail:
          type: string
          readOnly: true
      required:
      - created_by_detail
      - id
      - submitted_at
      - submitted_by
      - submitted_by_detail
      - task
    TeacherAttendance:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        attendance_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/TeacherAttendanceStatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - attendance_date
      - created
      - created_by
      - id
      - modified
      - modified_by
      - user
      - user_id
    TeacherAttendanceStatusEnum:
      enum:
      - Present
      - Absent
      - Half Day
      - Late
      - Leave
      type: string
      description: |-
        * `Present` - Present
        * `Absent` - Absent
        * `Half Day` - Half Day
        * `Late` - Late
        * `Leave` - Leave
    TimezoneEnum:
      enum:
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Addis_Ababa
      - Africa/Algiers
      - Africa/Asmara
      - Africa/Asmera
      - Africa/Bamako
      - Africa/Bangui
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Blantyre
      - Africa/Brazzaville
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Freetown
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Kampala
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Lome
      - Africa/Luanda
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Malabo
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Mogadishu
      - Africa/Monrovia
      - Africa/Nairobi
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Porto-Novo
      - Africa/Sao_Tome
      - Africa/Timbuktu
      - Africa/Tripoli
      - Africa/Tunis
      - Africa/Windhoek
      - America/Adak
      - America/Anchorage
      - America/Anguilla
      - America/Antigua
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/ComodRivadavia
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Aruba
      - America/Asuncion
      - America/Atikokan
      - America/Atka
      - America/Bahia
      - America/Bahia_Banderas
      - America/Barbados
      - America/Belem
      - America/Belize
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Bogota
      - America/Boise
      - America/Buenos_Aires
      - America/Cambridge_Bay
      - America/Campo_Grande
      - America/Cancun
      - America/Caracas
      - America/Catamarca
      - America/Cayenne
      - America/Cayman
      - America/Chicago
      - America/Chihuahua
      - America/Ciudad_Juarez
      - America/Coral_Harbour
      - America/Cordoba
      - America/Costa_Rica
      - America/Creston
      - America/Cuiaba
      - America/Curacao
      - America/Danmarkshavn
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Detroit
      - America/Dominica
      - America/Edmonton
      - America/Eirunepe
      - America/El_Salvador
      - America/Ensenada
      - America/Fort_Nelson
      - America/Fort_Wayne
      - America/Fortaleza
      - America/Glace_Bay
      - America/Godthab
      - America/Goose_Bay
      - America/Grand_Turk
      - America/Grenada
      - America/Guadeloupe
      - America/Guatemala
      - America/Guayaquil
      - America/Guyana
      - America/Halifax
      - America/Havana
      - America/Hermosillo
      - America/Indiana/Indianapolis
      - America/Indiana/Knox
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Tell_City
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Indianapolis
      - America/Inuvik
      - America/Iqaluit
      - America/Jamaica
      - America/Jujuy
      - America/Juneau
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Knox_IN
      - America/Kralendijk
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Louisville
      - America/Lower_Princes
      - America/Maceio
      - America/Managua
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Matamoros
      - America/Mazatlan
      - America/Mendoza
      - America/Menominee
      - America/Merida
      - America/Metlakatla
      - America/Mexico_City
      - America/Miquelon
      - America/Moncton
      - America/Monterrey
      - America/Montevideo
      - America/Montreal
      - America/Montserrat
      - America/Nassau
      - America/New_York
      - America/Nipigon
      - America/Nome
      - America/Noronha
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Nuuk
      - America/Ojinaga
      - America/Panama
      - America/Pangnirtung
      - America/Paramaribo
      - America/Phoenix
      - America/Port-au-Prince
      - America/Port_of_Spain
      - America/Porto_Acre
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Punta_Arenas
      - America/Rainy_River
      - America/Rankin_Inlet
      - America/Recife
      - America/Regina
      - America/Resolute
      - America/Rio_Branco
      - America/Rosario
      - America/Santa_Isabel
      - America/Santarem
      - America/Santiago
      - America/Santo_Domingo
      - America/Sao_Paulo
      - America/Scoresbysund
      - America/Shiprock
      - America/Sitka
      - America/St_Barthelemy
      - America/St_Johns
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Thule
      - America/Thunder_Bay
      - America/Tijuana
      - America/Toronto
      - America/Tortola
      - America/Vancouver
      - America/Virgin
      - America/Whitehorse
      - America/Winnipeg
      - America/Yakutat
      - America/Yellowknife
      - Antarctica/Casey
      - Antarctica/Davis
      - Antarctica/DumontDUrville
      - Antarctica/Macquarie
      - Antarctica/Mawson
      - Antarctica/McMurdo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Antarctica/South_Pole
      - Antarctica/Syowa
      - Antarctica/Troll
      - Antarctica/Vostok
      - Arctic/Longyearbyen
      - Asia/Aden
      - Asia/Almaty
      - Asia/Amman
      - Asia/Anadyr
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Ashkhabad
      - Asia/Atyrau
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Barnaul
      - Asia/Beirut
      - Asia/Bishkek
      - Asia/Brunei
      - Asia/Calcutta
      - Asia/Chita
      - Asia/Choibalsan
      - Asia/Chongqing
      - Asia/Chungking
      - Asia/Colombo
      - Asia/Dacca
      - Asia/Damascus
      - Asia/Dhaka
      - Asia/Dili
      - Asia/Dubai
      - Asia/Dushanbe
      - Asia/Famagusta
      - Asia/Gaza
      - Asia/Harbin
      - Asia/Hebron
      - Asia/Ho_Chi_Minh
      - Asia/Hong_Kong
      - Asia/Hovd
      - Asia/Irkutsk
      - Asia/Istanbul
      - Asia/Jakarta
      - Asia/Jayapura
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kashgar
      - Asia/Kathmandu
      - Asia/Katmandu
      - Asia/Khandyga
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Kuwait
      - Asia/Macao
      - Asia/Macau
      - Asia/Magadan
      - Asia/Makassar
      - Asia/Manila
      - Asia/Muscat
      - Asia/Nicosia
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Omsk
      - Asia/Oral
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Pyongyang
      - Asia/Qatar
      - Asia/Qostanay
      - Asia/Qyzylorda
      - Asia/Rangoon
      - Asia/Riyadh
      - Asia/Saigon
      - Asia/Sakhalin
      - Asia/Samarkand
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Srednekolymsk
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Tel_Aviv
      - Asia/Thimbu
      - Asia/Thimphu
      - Asia/Tokyo
      - Asia/Tomsk
      - Asia/Ujung_Pandang
      - Asia/Ulaanbaatar
      - Asia/Ulan_Bator
      - Asia/Urumqi
      - Asia/Ust-Nera
      - Asia/Vientiane
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yangon
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Bermuda
      - Atlantic/Canary
      - Atlantic/Cape_Verde
      - Atlantic/Faeroe
      - Atlantic/Faroe
      - Atlantic/Jan_Mayen
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/South_Georgia
      - Atlantic/St_Helena
      - Atlantic/Stanley
      - Australia/ACT
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Broken_Hill
      - Australia/Canberra
      - Australia/Currie
      - Australia/Darwin
      - Australia/Eucla
      - Australia/Hobart
      - Australia/LHI
      - Australia/Lindeman
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/NSW
      - Australia/North
      - Australia/Perth
      - Australia/Queensland
      - Australia/South
      - Australia/Sydney
      - Australia/Tasmania
      - Australia/Victoria
      - Australia/West
      - Australia/Yancowinna
      - Brazil/Acre
      - Brazil/DeNoronha
      - Brazil/East
      - Brazil/West
      - CET
      - CST6CDT
      - Canada/Atlantic
      - Canada/Central
      - Canada/Eastern
      - Canada/Mountain
      - Canada/Newfoundland
      - Canada/Pacific
      - Canada/Saskatchewan
      - Canada/Yukon
      - Chile/Continental
      - Chile/EasterIsland
      - Cuba
      - EET
      - EST
      - EST5EDT
      - Egypt
      - Eire
      - Etc/GMT
      - Etc/GMT+0
      - Etc/GMT+1
      - Etc/GMT+10
      - Etc/GMT+11
      - Etc/GMT+12
      - Etc/GMT+2
      - Etc/GMT+3
      - Etc/GMT+4
      - Etc/GMT+5
      - Etc/GMT+6
      - Etc/GMT+7
      - Etc/GMT+8
      - Etc/GMT+9
      - Etc/GMT-0
      - Etc/GMT-1
      - Etc/GMT-10
      - Etc/GMT-11
      - Etc/GMT-12
      - Etc/GMT-13
      - Etc/GMT-14
      - Etc/GMT-2
      - Etc/GMT-3
      - Etc/GMT-4
      - Etc/GMT-5
      - Etc/GMT-6
      - Etc/GMT-7
      - Etc/GMT-8
      - Etc/GMT-9
      - Etc/GMT0
      - Etc/Greenwich
      - Etc/UCT
      - Etc/UTC
      - Etc/Universal
      - Etc/Zulu
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Astrakhan
      - Europe/Athens
      - Europe/Belfast
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Chisinau
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Gibraltar
      - Europe/Guernsey
      - Europe/Helsinki
      - Europe/Isle_of_Man
      - Europe/Istanbul
      - Europe/Jersey
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Kirov
      - Europe/Kyiv
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Mariehamn
      - Europe/Minsk
      - Europe/Monaco
      - Europe/Moscow
      - Europe/Nicosia
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Saratov
      - Europe/Simferopol
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Tirane
      - Europe/Tiraspol
      - Europe/Ulyanovsk
      - Europe/Uzhgorod
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zaporozhye
      - Europe/Zurich
      - GB
      - GB-Eire
      - GMT
      - GMT+0
      - GMT-0
      - GMT0
      - Greenwich
      - HST
      - Hongkong
      - Iceland
      - Indian/Antananarivo
      - Indian/Chagos
      - Indian/Christmas
      - Indian/Cocos
      - Indian/Comoro
      - Indian/Kerguelen
      - Indian/Mahe
      - Indian/Maldives
      - Indian/Mauritius
      - Indian/Mayotte
      - Indian/Reunion
      - Iran
      - Israel
      - Jamaica
      - Japan
      - Kwajalein
      - Libya
      - MET
      - MST
      - MST7MDT
      - Mexico/BajaNorte
      - Mexico/BajaSur
      - Mexico/General
      - NZ
      - NZ-CHAT
      - Navajo
      - PRC
      - PST8PDT
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Bougainville
      - Pacific/Chatham
      - Pacific/Chuuk
      - Pacific/Easter
      - Pacific/Efate
      - Pacific/Enderbury
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Funafuti
      - Pacific/Galapagos
      - Pacific/Gambier
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Johnston
      - Pacific/Kanton
      - Pacific/Kiritimati
      - Pacific/Kosrae
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Marquesas
      - Pacific/Midway
      - Pacific/Nauru
      - Pacific/Niue
      - Pacific/Norfolk
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Palau
      - Pacific/Pitcairn
      - Pacific/Pohnpei
      - Pacific/Ponape
      - Pacific/Port_Moresby
      - Pacific/Rarotonga
      - Pacific/Saipan
      - Pacific/Samoa
      - Pacific/Tahiti
      - Pacific/Tarawa
      - Pacific/Tongatapu
      - Pacific/Truk
      - Pacific/Wake
      - Pacific/Wallis
      - Pacific/Yap
      - Poland
      - Portugal
      - ROC
      - ROK
      - Singapore
      - Turkey
      - UCT
      - US/Alaska
      - US/Aleutian
      - US/Arizona
      - US/Central
      - US/East-Indiana
      - US/Eastern
      - US/Hawaii
      - US/Indiana-Starke
      - US/Michigan
      - US/Mountain
      - US/Pacific
      - US/Samoa
      - UTC
      - Universal
      - W-SU
      - WET
      - Zulu
      type: string
      description: |-
        * `Africa/Abidjan` - Africa/Abidjan
        * `Africa/Accra` - Africa/Accra
        * `Africa/Addis_Ababa` - Africa/Addis_Ababa
        * `Africa/Algiers` - Africa/Algiers
        * `Africa/Asmara` - Africa/Asmara
        * `Africa/Asmera` - Africa/Asmera
        * `Africa/Bamako` - Africa/Bamako
        * `Africa/Bangui` - Africa/Bangui
        * `Africa/Banjul` - Africa/Banjul
        * `Africa/Bissau` - Africa/Bissau
        * `Africa/Blantyre` - Africa/Blantyre
        * `Africa/Brazzaville` - Africa/Brazzaville
        * `Africa/Bujumbura` - Africa/Bujumbura
        * `Africa/Cairo` - Africa/Cairo
        * `Africa/Casablanca` - Africa/Casablanca
        * `Africa/Ceuta` - Africa/Ceuta
        * `Africa/Conakry` - Africa/Conakry
        * `Africa/Dakar` - Africa/Dakar
        * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
        * `Africa/Djibouti` - Africa/Djibouti
        * `Africa/Douala` - Africa/Douala
        * `Africa/El_Aaiun` - Africa/El_Aaiun
        * `Africa/Freetown` - Africa/Freetown
        * `Africa/Gaborone` - Africa/Gaborone
        * `Africa/Harare` - Africa/Harare
        * `Africa/Johannesburg` - Africa/Johannesburg
        * `Africa/Juba` - Africa/Juba
        * `Africa/Kampala` - Africa/Kampala
        * `Africa/Khartoum` - Africa/Khartoum
        * `Africa/Kigali` - Africa/Kigali
        * `Africa/Kinshasa` - Africa/Kinshasa
        * `Africa/Lagos` - Africa/Lagos
        * `Africa/Libreville` - Africa/Libreville
        * `Africa/Lome` - Africa/Lome
        * `Africa/Luanda` - Africa/Luanda
        * `Africa/Lubumbashi` - Africa/Lubumbashi
        * `Africa/Lusaka` - Africa/Lusaka
        * `Africa/Malabo` - Africa/Malabo
        * `Africa/Maputo` - Africa/Maputo
        * `Africa/Maseru` - Africa/Maseru
        * `Africa/Mbabane` - Africa/Mbabane
        * `Africa/Mogadishu` - Africa/Mogadishu
        * `Africa/Monrovia` - Africa/Monrovia
        * `Africa/Nairobi` - Africa/Nairobi
        * `Africa/Ndjamena` - Africa/Ndjamena
        * `Africa/Niamey` - Africa/Niamey
        * `Africa/Nouakchott` - Africa/Nouakchott
        * `Africa/Ouagadougou` - Africa/Ouagadougou
        * `Africa/Porto-Novo` - Africa/Porto-Novo
        * `Africa/Sao_Tome` - Africa/Sao_Tome
        * `Africa/Timbuktu` - Africa/Timbuktu
        * `Africa/Tripoli` - Africa/Tripoli
        * `Africa/Tunis` - Africa/Tunis
        * `Africa/Windhoek` - Africa/Windhoek
        * `America/Adak` - America/Adak
        * `America/Anchorage` - America/Anchorage
        * `America/Anguilla` - America/Anguilla
        * `America/Antigua` - America/Antigua
        * `America/Araguaina` - America/Araguaina
        * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
        * `America/Argentina/Catamarca` - America/Argentina/Catamarca
        * `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia
        * `America/Argentina/Cordoba` - America/Argentina/Cordoba
        * `America/Argentina/Jujuy` - America/Argentina/Jujuy
        * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
        * `America/Argentina/Mendoza` - America/Argentina/Mendoza
        * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
        * `America/Argentina/Salta` - America/Argentina/Salta
        * `America/Argentina/San_Juan` - America/Argentina/San_Juan
        * `America/Argentina/San_Luis` - America/Argentina/San_Luis
        * `America/Argentina/Tucuman` - America/Argentina/Tucuman
        * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
        * `America/Aruba` - America/Aruba
        * `America/Asuncion` - America/Asuncion
        * `America/Atikokan` - America/Atikokan
        * `America/Atka` - America/Atka
        * `America/Bahia` - America/Bahia
        * `America/Bahia_Banderas` - America/Bahia_Banderas
        * `America/Barbados` - America/Barbados
        * `America/Belem` - America/Belem
        * `America/Belize` - America/Belize
        * `America/Blanc-Sablon` - America/Blanc-Sablon
        * `America/Boa_Vista` - America/Boa_Vista
        * `America/Bogota` - America/Bogota
        * `America/Boise` - America/Boise
        * `America/Buenos_Aires` - America/Buenos_Aires
        * `America/Cambridge_Bay` - America/Cambridge_Bay
        * `America/Campo_Grande` - America/Campo_Grande
        * `America/Cancun` - America/Cancun
        * `America/Caracas` - America/Caracas
        * `America/Catamarca` - America/Catamarca
        * `America/Cayenne` - America/Cayenne
        * `America/Cayman` - America/Cayman
        * `America/Chicago` - America/Chicago
        * `America/Chihuahua` - America/Chihuahua
        * `America/Ciudad_Juarez` - America/Ciudad_Juarez
        * `America/Coral_Harbour` - America/Coral_Harbour
        * `America/Cordoba` - America/Cordoba
        * `America/Costa_Rica` - America/Costa_Rica
        * `America/Creston` - America/Creston
        * `America/Cuiaba` - America/Cuiaba
        * `America/Curacao` - America/Curacao
        * `America/Danmarkshavn` - America/Danmarkshavn
        * `America/Dawson` - America/Dawson
        * `America/Dawson_Creek` - America/Dawson_Creek
        * `America/Denver` - America/Denver
        * `America/Detroit` - America/Detroit
        * `America/Dominica` - America/Dominica
        * `America/Edmonton` - America/Edmonton
        * `America/Eirunepe` - America/Eirunepe
        * `America/El_Salvador` - America/El_Salvador
        * `America/Ensenada` - America/Ensenada
        * `America/Fort_Nelson` - America/Fort_Nelson
        * `America/Fort_Wayne` - America/Fort_Wayne
        * `America/Fortaleza` - America/Fortaleza
        * `America/Glace_Bay` - America/Glace_Bay
        * `America/Godthab` - America/Godthab
        * `America/Goose_Bay` - America/Goose_Bay
        * `America/Grand_Turk` - America/Grand_Turk
        * `America/Grenada` - America/Grenada
        * `America/Guadeloupe` - America/Guadeloupe
        * `America/Guatemala` - America/Guatemala
        * `America/Guayaquil` - America/Guayaquil
        * `America/Guyana` - America/Guyana
        * `America/Halifax` - America/Halifax
        * `America/Havana` - America/Havana
        * `America/Hermosillo` - America/Hermosillo
        * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
        * `America/Indiana/Knox` - America/Indiana/Knox
        * `America/Indiana/Marengo` - America/Indiana/Marengo
        * `America/Indiana/Petersburg` - America/Indiana/Petersburg
        * `America/Indiana/Tell_City` - America/Indiana/Tell_City
        * `America/Indiana/Vevay` - America/Indiana/Vevay
        * `America/Indiana/Vincennes` - America/Indiana/Vincennes
        * `America/Indiana/Winamac` - America/Indiana/Winamac
        * `America/Indianapolis` - America/Indianapolis
        * `America/Inuvik` - America/Inuvik
        * `America/Iqaluit` - America/Iqaluit
        * `America/Jamaica` - America/Jamaica
        * `America/Jujuy` - America/Jujuy
        * `America/Juneau` - America/Juneau
        * `America/Kentucky/Louisville` - America/Kentucky/Louisville
        * `America/Kentucky/Monticello` - America/Kentucky/Monticello
        * `America/Knox_IN` - America/Knox_IN
        * `America/Kralendijk` - America/Kralendijk
        * `America/La_Paz` - America/La_Paz
        * `America/Lima` - America/Lima
        * `America/Los_Angeles` - America/Los_Angeles
        * `America/Louisville` - America/Louisville
        * `America/Lower_Princes` - America/Lower_Princes
        * `America/Maceio` - America/Maceio
        * `America/Managua` - America/Managua
        * `America/Manaus` - America/Manaus
        * `America/Marigot` - America/Marigot
        * `America/Martinique` - America/Martinique
        * `America/Matamoros` - America/Matamoros
        * `America/Mazatlan` - America/Mazatlan
        * `America/Mendoza` - America/Mendoza
        * `America/Menominee` - America/Menominee
        * `America/Merida` - America/Merida
        * `America/Metlakatla` - America/Metlakatla
        * `America/Mexico_City` - America/Mexico_City
        * `America/Miquelon` - America/Miquelon
        * `America/Moncton` - America/Moncton
        * `America/Monterrey` - America/Monterrey
        * `America/Montevideo` - America/Montevideo
        * `America/Montreal` - America/Montreal
        * `America/Montserrat` - America/Montserrat
        * `America/Nassau` - America/Nassau
        * `America/New_York` - America/New_York
        * `America/Nipigon` - America/Nipigon
        * `America/Nome` - America/Nome
        * `America/Noronha` - America/Noronha
        * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
        * `America/North_Dakota/Center` - America/North_Dakota/Center
        * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
        * `America/Nuuk` - America/Nuuk
        * `America/Ojinaga` - America/Ojinaga
        * `America/Panama` - America/Panama
        * `America/Pangnirtung` - America/Pangnirtung
        * `America/Paramaribo` - America/Paramaribo
        * `America/Phoenix` - America/Phoenix
        * `America/Port-au-Prince` - America/Port-au-Prince
        * `America/Port_of_Spain` - America/Port_of_Spain
        * `America/Porto_Acre` - America/Porto_Acre
        * `America/Porto_Velho` - America/Porto_Velho
        * `America/Puerto_Rico` - America/Puerto_Rico
        * `America/Punta_Arenas` - America/Punta_Arenas
        * `America/Rainy_River` - America/Rainy_River
        * `America/Rankin_Inlet` - America/Rankin_Inlet
        * `America/Recife` - America/Recife
        * `America/Regina` - America/Regina
        * `America/Resolute` - America/Resolute
        * `America/Rio_Branco` - America/Rio_Branco
        * `America/Rosario` - America/Rosario
        * `America/Santa_Isabel` - America/Santa_Isabel
        * `America/Santarem` - America/Santarem
        * `America/Santiago` - America/Santiago
        * `America/Santo_Domingo` - America/Santo_Domingo
        * `America/Sao_Paulo` - America/Sao_Paulo
        * `America/Scoresbysund` - America/Scoresbysund
        * `America/Shiprock` - America/Shiprock
        * `America/Sitka` - America/Sitka
        * `America/St_Barthelemy` - America/St_Barthelemy
        * `America/St_Johns` - America/St_Johns
        * `America/St_Kitts` - America/St_Kitts
        * `America/St_Lucia` - America/St_Lucia
        * `America/St_Thomas` - America/St_Thomas
        * `America/St_Vincent` - America/St_Vincent
        * `America/Swift_Current` - America/Swift_Current
        * `America/Tegucigalpa` - America/Tegucigalpa
        * `America/Thule` - America/Thule
        * `America/Thunder_Bay` - America/Thunder_Bay
        * `America/Tijuana` - America/Tijuana
        * `America/Toronto` - America/Toronto
        * `America/Tortola` - America/Tortola
        * `America/Vancouver` - America/Vancouver
        * `America/Virgin` - America/Virgin
        * `America/Whitehorse` - America/Whitehorse
        * `America/Winnipeg` - America/Winnipeg
        * `America/Yakutat` - America/Yakutat
        * `America/Yellowknife` - America/Yellowknife
        * `Antarctica/Casey` - Antarctica/Casey
        * `Antarctica/Davis` - Antarctica/Davis
        * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
        * `Antarctica/Macquarie` - Antarctica/Macquarie
        * `Antarctica/Mawson` - Antarctica/Mawson
        * `Antarctica/McMurdo` - Antarctica/McMurdo
        * `Antarctica/Palmer` - Antarctica/Palmer
        * `Antarctica/Rothera` - Antarctica/Rothera
        * `Antarctica/South_Pole` - Antarctica/South_Pole
        * `Antarctica/Syowa` - Antarctica/Syowa
        * `Antarctica/Troll` - Antarctica/Troll
        * `Antarctica/Vostok` - Antarctica/Vostok
        * `Arctic/Longyearbyen` - Arctic/Longyearbyen
        * `Asia/Aden` - Asia/Aden
        * `Asia/Almaty` - Asia/Almaty
        * `Asia/Amman` - Asia/Amman
        * `Asia/Anadyr` - Asia/Anadyr
        * `Asia/Aqtau` - Asia/Aqtau
        * `Asia/Aqtobe` - Asia/Aqtobe
        * `Asia/Ashgabat` - Asia/Ashgabat
        * `Asia/Ashkhabad` - Asia/Ashkhabad
        * `Asia/Atyrau` - Asia/Atyrau
        * `Asia/Baghdad` - Asia/Baghdad
        * `Asia/Bahrain` - Asia/Bahrain
        * `Asia/Baku` - Asia/Baku
        * `Asia/Bangkok` - Asia/Bangkok
        * `Asia/Barnaul` - Asia/Barnaul
        * `Asia/Beirut` - Asia/Beirut
        * `Asia/Bishkek` - Asia/Bishkek
        * `Asia/Brunei` - Asia/Brunei
        * `Asia/Calcutta` - Asia/Calcutta
        * `Asia/Chita` - Asia/Chita
        * `Asia/Choibalsan` - Asia/Choibalsan
        * `Asia/Chongqing` - Asia/Chongqing
        * `Asia/Chungking` - Asia/Chungking
        * `Asia/Colombo` - Asia/Colombo
        * `Asia/Dacca` - Asia/Dacca
        * `Asia/Damascus` - Asia/Damascus
        * `Asia/Dhaka` - Asia/Dhaka
        * `Asia/Dili` - Asia/Dili
        * `Asia/Dubai` - Asia/Dubai
        * `Asia/Dushanbe` - Asia/Dushanbe
        * `Asia/Famagusta` - Asia/Famagusta
        * `Asia/Gaza` - Asia/Gaza
        * `Asia/Harbin` - Asia/Harbin
        * `Asia/Hebron` - Asia/Hebron
        * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
        * `Asia/Hong_Kong` - Asia/Hong_Kong
        * `Asia/Hovd` - Asia/Hovd
        * `Asia/Irkutsk` - Asia/Irkutsk
        * `Asia/Istanbul` - Asia/Istanbul
        * `Asia/Jakarta` - Asia/Jakarta
        * `Asia/Jayapura` - Asia/Jayapura
        * `Asia/Jerusalem` - Asia/Jerusalem
        * `Asia/Kabul` - Asia/Kabul
        * `Asia/Kamchatka` - Asia/Kamchatka
        * `Asia/Karachi` - Asia/Karachi
        * `Asia/Kashgar` - Asia/Kashgar
        * `Asia/Kathmandu` - Asia/Kathmandu
        * `Asia/Katmandu` - Asia/Katmandu
        * `Asia/Khandyga` - Asia/Khandyga
        * `Asia/Kolkata` - Asia/Kolkata
        * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
        * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
        * `Asia/Kuching` - Asia/Kuching
        * `Asia/Kuwait` - Asia/Kuwait
        * `Asia/Macao` - Asia/Macao
        * `Asia/Macau` - Asia/Macau
        * `Asia/Magadan` - Asia/Magadan
        * `Asia/Makassar` - Asia/Makassar
        * `Asia/Manila` - Asia/Manila
        * `Asia/Muscat` - Asia/Muscat
        * `Asia/Nicosia` - Asia/Nicosia
        * `Asia/Novokuznetsk` - Asia/Novokuznetsk
        * `Asia/Novosibirsk` - Asia/Novosibirsk
        * `Asia/Omsk` - Asia/Omsk
        * `Asia/Oral` - Asia/Oral
        * `Asia/Phnom_Penh` - Asia/Phnom_Penh
        * `Asia/Pontianak` - Asia/Pontianak
        * `Asia/Pyongyang` - Asia/Pyongyang
        * `Asia/Qatar` - Asia/Qatar
        * `Asia/Qostanay` - Asia/Qostanay
        * `Asia/Qyzylorda` - Asia/Qyzylorda
        * `Asia/Rangoon` - Asia/Rangoon
        * `Asia/Riyadh` - Asia/Riyadh
        * `Asia/Saigon` - Asia/Saigon
        * `Asia/Sakhalin` - Asia/Sakhalin
        * `Asia/Samarkand` - Asia/Samarkand
        * `Asia/Seoul` - Asia/Seoul
        * `Asia/Shanghai` - Asia/Shanghai
        * `Asia/Singapore` - Asia/Singapore
        * `Asia/Srednekolymsk` - Asia/Srednekolymsk
        * `Asia/Taipei` - Asia/Taipei
        * `Asia/Tashkent` - Asia/Tashkent
        * `Asia/Tbilisi` - Asia/Tbilisi
        * `Asia/Tehran` - Asia/Tehran
        * `Asia/Tel_Aviv` - Asia/Tel_Aviv
        * `Asia/Thimbu` - Asia/Thimbu
        * `Asia/Thimphu` - Asia/Thimphu
        * `Asia/Tokyo` - Asia/Tokyo
        * `Asia/Tomsk` - Asia/Tomsk
        * `Asia/Ujung_Pandang` - Asia/Ujung_Pandang
        * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
        * `Asia/Ulan_Bator` - Asia/Ulan_Bator
        * `Asia/Urumqi` - Asia/Urumqi
        * `Asia/Ust-Nera` - Asia/Ust-Nera
        * `Asia/Vientiane` - Asia/Vientiane
        * `Asia/Vladivostok` - Asia/Vladivostok
        * `Asia/Yakutsk` - Asia/Yakutsk
        * `Asia/Yangon` - Asia/Yangon
        * `Asia/Yekaterinburg` - Asia/Yekaterinburg
        * `Asia/Yerevan` - Asia/Yerevan
        * `Atlantic/Azores` - Atlantic/Azores
        * `Atlantic/Bermuda` - Atlantic/Bermuda
        * `Atlantic/Canary` - Atlantic/Canary
        * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
        * `Atlantic/Faeroe` - Atlantic/Faeroe
        * `Atlantic/Faroe` - Atlantic/Faroe
        * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen
        * `Atlantic/Madeira` - Atlantic/Madeira
        * `Atlantic/Reykjavik` - Atlantic/Reykjavik
        * `Atlantic/South_Georgia` - Atlantic/South_Georgia
        * `Atlantic/St_Helena` - Atlantic/St_Helena
        * `Atlantic/Stanley` - Atlantic/Stanley
        * `Australia/ACT` - Australia/ACT
        * `Australia/Adelaide` - Australia/Adelaide
        * `Australia/Brisbane` - Australia/Brisbane
        * `Australia/Broken_Hill` - Australia/Broken_Hill
        * `Australia/Canberra` - Australia/Canberra
        * `Australia/Currie` - Australia/Currie
        * `Australia/Darwin` - Australia/Darwin
        * `Australia/Eucla` - Australia/Eucla
        * `Australia/Hobart` - Australia/Hobart
        * `Australia/LHI` - Australia/LHI
        * `Australia/Lindeman` - Australia/Lindeman
        * `Australia/Lord_Howe` - Australia/Lord_Howe
        * `Australia/Melbourne` - Australia/Melbourne
        * `Australia/NSW` - Australia/NSW
        * `Australia/North` - Australia/North
        * `Australia/Perth` - Australia/Perth
        * `Australia/Queensland` - Australia/Queensland
        * `Australia/South` - Australia/South
        * `Australia/Sydney` - Australia/Sydney
        * `Australia/Tasmania` - Australia/Tasmania
        * `Australia/Victoria` - Australia/Victoria
        * `Australia/West` - Australia/West
        * `Australia/Yancowinna` - Australia/Yancowinna
        * `Brazil/Acre` - Brazil/Acre
        * `Brazil/DeNoronha` - Brazil/DeNoronha
        * `Brazil/East` - Brazil/East
        * `Brazil/West` - Brazil/West
        * `CET` - CET
        * `CST6CDT` - CST6CDT
        * `Canada/Atlantic` - Canada/Atlantic
        * `Canada/Central` - Canada/Central
        * `Canada/Eastern` - Canada/Eastern
        * `Canada/Mountain` - Canada/Mountain
        * `Canada/Newfoundland` - Canada/Newfoundland
        * `Canada/Pacific` - Canada/Pacific
        * `Canada/Saskatchewan` - Canada/Saskatchewan
        * `Canada/Yukon` - Canada/Yukon
        * `Chile/Continental` - Chile/Continental
        * `Chile/EasterIsland` - Chile/EasterIsland
        * `Cuba` - Cuba
        * `EET` - EET
        * `EST` - EST
        * `EST5EDT` - EST5EDT
        * `Egypt` - Egypt
        * `Eire` - Eire
        * `Etc/GMT` - Etc/GMT
        * `Etc/GMT+0` - Etc/GMT+0
        * `Etc/GMT+1` - Etc/GMT+1
        * `Etc/GMT+10` - Etc/GMT+10
        * `Etc/GMT+11` - Etc/GMT+11
        * `Etc/GMT+12` - Etc/GMT+12
        * `Etc/GMT+2` - Etc/GMT+2
        * `Etc/GMT+3` - Etc/GMT+3
        * `Etc/GMT+4` - Etc/GMT+4
        * `Etc/GMT+5` - Etc/GMT+5
        * `Etc/GMT+6` - Etc/GMT+6
        * `Etc/GMT+7` - Etc/GMT+7
        * `Etc/GMT+8` - Etc/GMT+8
        * `Etc/GMT+9` - Etc/GMT+9
        * `Etc/GMT-0` - Etc/GMT-0
        * `Etc/GMT-1` - Etc/GMT-1
        * `Etc/GMT-10` - Etc/GMT-10
        * `Etc/GMT-11` - Etc/GMT-11
        * `Etc/GMT-12` - Etc/GMT-12
        * `Etc/GMT-13` - Etc/GMT-13
        * `Etc/GMT-14` - Etc/GMT-14
        * `Etc/GMT-2` - Etc/GMT-2
        * `Etc/GMT-3` - Etc/GMT-3
        * `Etc/GMT-4` - Etc/GMT-4
        * `Etc/GMT-5` - Etc/GMT-5
        * `Etc/GMT-6` - Etc/GMT-6
        * `Etc/GMT-7` - Etc/GMT-7
        * `Etc/GMT-8` - Etc/GMT-8
        * `Etc/GMT-9` - Etc/GMT-9
        * `Etc/GMT0` - Etc/GMT0
        * `Etc/Greenwich` - Etc/Greenwich
        * `Etc/UCT` - Etc/UCT
        * `Etc/UTC` - Etc/UTC
        * `Etc/Universal` - Etc/Universal
        * `Etc/Zulu` - Etc/Zulu
        * `Europe/Amsterdam` - Europe/Amsterdam
        * `Europe/Andorra` - Europe/Andorra
        * `Europe/Astrakhan` - Europe/Astrakhan
        * `Europe/Athens` - Europe/Athens
        * `Europe/Belfast` - Europe/Belfast
        * `Europe/Belgrade` - Europe/Belgrade
        * `Europe/Berlin` - Europe/Berlin
        * `Europe/Bratislava` - Europe/Bratislava
        * `Europe/Brussels` - Europe/Brussels
        * `Europe/Bucharest` - Europe/Bucharest
        * `Europe/Budapest` - Europe/Budapest
        * `Europe/Busingen` - Europe/Busingen
        * `Europe/Chisinau` - Europe/Chisinau
        * `Europe/Copenhagen` - Europe/Copenhagen
        * `Europe/Dublin` - Europe/Dublin
        * `Europe/Gibraltar` - Europe/Gibraltar
        * `Europe/Guernsey` - Europe/Guernsey
        * `Europe/Helsinki` - Europe/Helsinki
        * `Europe/Isle_of_Man` - Europe/Isle_of_Man
        * `Europe/Istanbul` - Europe/Istanbul
        * `Europe/Jersey` - Europe/Jersey
        * `Europe/Kaliningrad` - Europe/Kaliningrad
        * `Europe/Kiev` - Europe/Kiev
        * `Europe/Kirov` - Europe/Kirov
        * `Europe/Kyiv` - Europe/Kyiv
        * `Europe/Lisbon` - Europe/Lisbon
        * `Europe/Ljubljana` - Europe/Ljubljana
        * `Europe/London` - Europe/London
        * `Europe/Luxembourg` - Europe/Luxembourg
        * `Europe/Madrid` - Europe/Madrid
        * `Europe/Malta` - Europe/Malta
        * `Europe/Mariehamn` - Europe/Mariehamn
        * `Europe/Minsk` - Europe/Minsk
        * `Europe/Monaco` - Europe/Monaco
        * `Europe/Moscow` - Europe/Moscow
        * `Europe/Nicosia` - Europe/Nicosia
        * `Europe/Oslo` - Europe/Oslo
        * `Europe/Paris` - Europe/Paris
        * `Europe/Podgorica` - Europe/Podgorica
        * `Europe/Prague` - Europe/Prague
        * `Europe/Riga` - Europe/Riga
        * `Europe/Rome` - Europe/Rome
        * `Europe/Samara` - Europe/Samara
        * `Europe/San_Marino` - Europe/San_Marino
        * `Europe/Sarajevo` - Europe/Sarajevo
        * `Europe/Saratov` - Europe/Saratov
        * `Europe/Simferopol` - Europe/Simferopol
        * `Europe/Skopje` - Europe/Skopje
        * `Europe/Sofia` - Europe/Sofia
        * `Europe/Stockholm` - Europe/Stockholm
        * `Europe/Tallinn` - Europe/Tallinn
        * `Europe/Tirane` - Europe/Tirane
        * `Europe/Tiraspol` - Europe/Tiraspol
        * `Europe/Ulyanovsk` - Europe/Ulyanovsk
        * `Europe/Uzhgorod` - Europe/Uzhgorod
        * `Europe/Vaduz` - Europe/Vaduz
        * `Europe/Vatican` - Europe/Vatican
        * `Europe/Vienna` - Europe/Vienna
        * `Europe/Vilnius` - Europe/Vilnius
        * `Europe/Volgograd` - Europe/Volgograd
        * `Europe/Warsaw` - Europe/Warsaw
        * `Europe/Zagreb` - Europe/Zagreb
        * `Europe/Zaporozhye` - Europe/Zaporozhye
        * `Europe/Zurich` - Europe/Zurich
        * `GB` - GB
        * `GB-Eire` - GB-Eire
        * `GMT` - GMT
        * `GMT+0` - GMT+0
        * `GMT-0` - GMT-0
        * `GMT0` - GMT0
        * `Greenwich` - Greenwich
        * `HST` - HST
        * `Hongkong` - Hongkong
        * `Iceland` - Iceland
        * `Indian/Antananarivo` - Indian/Antananarivo
        * `Indian/Chagos` - Indian/Chagos
        * `Indian/Christmas` - Indian/Christmas
        * `Indian/Cocos` - Indian/Cocos
        * `Indian/Comoro` - Indian/Comoro
        * `Indian/Kerguelen` - Indian/Kerguelen
        * `Indian/Mahe` - Indian/Mahe
        * `Indian/Maldives` - Indian/Maldives
        * `Indian/Mauritius` - Indian/Mauritius
        * `Indian/Mayotte` - Indian/Mayotte
        * `Indian/Reunion` - Indian/Reunion
        * `Iran` - Iran
        * `Israel` - Israel
        * `Jamaica` - Jamaica
        * `Japan` - Japan
        * `Kwajalein` - Kwajalein
        * `Libya` - Libya
        * `MET` - MET
        * `MST` - MST
        * `MST7MDT` - MST7MDT
        * `Mexico/BajaNorte` - Mexico/BajaNorte
        * `Mexico/BajaSur` - Mexico/BajaSur
        * `Mexico/General` - Mexico/General
        * `NZ` - NZ
        * `NZ-CHAT` - NZ-CHAT
        * `Navajo` - Navajo
        * `PRC` - PRC
        * `PST8PDT` - PST8PDT
        * `Pacific/Apia` - Pacific/Apia
        * `Pacific/Auckland` - Pacific/Auckland
        * `Pacific/Bougainville` - Pacific/Bougainville
        * `Pacific/Chatham` - Pacific/Chatham
        * `Pacific/Chuuk` - Pacific/Chuuk
        * `Pacific/Easter` - Pacific/Easter
        * `Pacific/Efate` - Pacific/Efate
        * `Pacific/Enderbury` - Pacific/Enderbury
        * `Pacific/Fakaofo` - Pacific/Fakaofo
        * `Pacific/Fiji` - Pacific/Fiji
        * `Pacific/Funafuti` - Pacific/Funafuti
        * `Pacific/Galapagos` - Pacific/Galapagos
        * `Pacific/Gambier` - Pacific/Gambier
        * `Pacific/Guadalcanal` - Pacific/Guadalcanal
        * `Pacific/Guam` - Pacific/Guam
        * `Pacific/Honolulu` - Pacific/Honolulu
        * `Pacific/Johnston` - Pacific/Johnston
        * `Pacific/Kanton` - Pacific/Kanton
        * `Pacific/Kiritimati` - Pacific/Kiritimati
        * `Pacific/Kosrae` - Pacific/Kosrae
        * `Pacific/Kwajalein` - Pacific/Kwajalein
        * `Pacific/Majuro` - Pacific/Majuro
        * `Pacific/Marquesas` - Pacific/Marquesas
        * `Pacific/Midway` - Pacific/Midway
        * `Pacific/Nauru` - Pacific/Nauru
        * `Pacific/Niue` - Pacific/Niue
        * `Pacific/Norfolk` - Pacific/Norfolk
        * `Pacific/Noumea` - Pacific/Noumea
        * `Pacific/Pago_Pago` - Pacific/Pago_Pago
        * `Pacific/Palau` - Pacific/Palau
        * `Pacific/Pitcairn` - Pacific/Pitcairn
        * `Pacific/Pohnpei` - Pacific/Pohnpei
        * `Pacific/Ponape` - Pacific/Ponape
        * `Pacific/Port_Moresby` - Pacific/Port_Moresby
        * `Pacific/Rarotonga` - Pacific/Rarotonga
        * `Pacific/Saipan` - Pacific/Saipan
        * `Pacific/Samoa` - Pacific/Samoa
        * `Pacific/Tahiti` - Pacific/Tahiti
        * `Pacific/Tarawa` - Pacific/Tarawa
        * `Pacific/Tongatapu` - Pacific/Tongatapu
        * `Pacific/Truk` - Pacific/Truk
        * `Pacific/Wake` - Pacific/Wake
        * `Pacific/Wallis` - Pacific/Wallis
        * `Pacific/Yap` - Pacific/Yap
        * `Poland` - Poland
        * `Portugal` - Portugal
        * `ROC` - ROC
        * `ROK` - ROK
        * `Singapore` - Singapore
        * `Turkey` - Turkey
        * `UCT` - UCT
        * `US/Alaska` - US/Alaska
        * `US/Aleutian` - US/Aleutian
        * `US/Arizona` - US/Arizona
        * `US/Central` - US/Central
        * `US/East-Indiana` - US/East-Indiana
        * `US/Eastern` - US/Eastern
        * `US/Hawaii` - US/Hawaii
        * `US/Indiana-Starke` - US/Indiana-Starke
        * `US/Michigan` - US/Michigan
        * `US/Mountain` - US/Mountain
        * `US/Pacific` - US/Pacific
        * `US/Samoa` - US/Samoa
        * `UTC` - UTC
        * `Universal` - Universal
        * `W-SU` - W-SU
        * `WET` - WET
        * `Zulu` - Zulu
    Topic:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        url_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_active:
          type: boolean
        parent:
          allOf:
          - $ref: '#/components/schemas/TopicReadOnly'
          readOnly: true
        description:
          type: string
          nullable: true
        parent_id:
          type: integer
          writeOnly: true
          nullable: true
        syllabus_id:
          type: integer
          writeOnly: true
          nullable: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - parent
      - syllabus
    TopicReadOnly:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        url_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_active:
          type: boolean
        parent:
          type: integer
          nullable: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - syllabus
    TotalFeeSummary:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        admission_number:
          type: string
          readOnly: true
        academic_year:
          type: string
          readOnly: true
        academic_year_id:
          type: integer
          readOnly: true
        standard:
          type: string
          readOnly: true
        standard_id:
          type: string
          readOnly: true
        section:
          type: string
          readOnly: true
        section_id:
          type: string
          readOnly: true
        totalfee:
          type: integer
        pending_fee:
          type: integer
        transactions:
          type: string
          readOnly: true
        concessions:
          type: string
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - admission_number
      - concessions
      - pending_fee
      - section
      - section_id
      - standard
      - standard_id
      - totalfee
      - transactions
      - user_id
      - user_name
    Trip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        primary_driver_name:
          type: string
          readOnly: true
        secondary_driver_name:
          type: string
          readOnly: true
        vehicle_name:
          type: string
          readOnly: true
        total_passengers:
          type: string
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        stops:
          type: array
          items:
            $ref: '#/components/schemas/TripStop'
          readOnly: true
        start_point:
          type: string
          maxLength: 100
        end_point:
          type: string
          maxLength: 100
        creation_date:
          type: string
          format: date
        parking_location:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/TripStatusEnum'
        primary_driver:
          type: integer
        secondary_driver:
          type: integer
          nullable: true
        vehicle:
          type: integer
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - academic_year_name
      - branch
      - branch_name
      - creation_date
      - end_point
      - id
      - primary_driver
      - primary_driver_name
      - secondary_driver_name
      - start_point
      - stops
      - total_passengers
      - vehicle
      - vehicle_name
    TripStatusEnum:
      enum:
      - planned
      - started
      - In Travel
      - active
      - completed
      - cancelled
      type: string
      description: |-
        * `planned` - Planned
        * `started` - Started
        * `In Travel` - In Travel
        * `active` - Active
        * `completed` - Completed
        * `cancelled` - Cancelled
    TripStop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        trip:
          type: integer
        stop_name:
          type: string
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        stop_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The order of this stop in the trip
        stop_time:
          type: string
          format: time
          description: Scheduled time at this stop
      required:
      - id
      - latitude
      - longitude
      - stop_name
      - stop_order
      - stop_time
      - trip
    TypeD37Enum:
      enum:
      - Teaching
      - Non-Teaching
      - Both
      type: string
      description: |-
        * `Teaching` - Teaching
        * `Non-Teaching` - Non-Teaching
        * `Both` - Both
    User:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        last_name:
          type: string
          maxLength: 150
        blood_group:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Guardian'
          readOnly: true
        pen_number:
          type: string
          nullable: true
          maxLength: 100
        my_section_id:
          type: string
          readOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 128
        details:
          type: array
          items:
            $ref: '#/components/schemas/UserDetails'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        address:
          nullable: true
        date_of_releaving:
          type: string
          format: date
          nullable: true
        student_details:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        alternate_phone:
          type: string
          nullable: true
        biometric_data:
          type: array
          items:
            $ref: '#/components/schemas/GetUserBiometricData'
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        group_id:
          type: integer
          writeOnly: true
        branch_id:
          type: integer
          writeOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        date_of_joining:
          type: string
          format: date
          nullable: true
        standard_id:
          type: integer
          writeOnly: true
          nullable: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        designation:
          allOf:
          - $ref: '#/components/schemas/Designation'
          readOnly: true
        admission_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        employee_id:
          type: string
          nullable: true
          maxLength: 100
        profile_image:
          type: string
          format: uri
          nullable: true
        student_type:
          $ref: '#/components/schemas/StudentTypeEnum'
        organisation:
          type: string
          readOnly: true
        aapar_number:
          type: string
          nullable: true
          maxLength: 100
        guardian_details:
          type: array
          items:
            $ref: '#/components/schemas/Guardian'
          writeOnly: true
        designation_id:
          type: integer
          writeOnly: true
          nullable: true
        dob:
          type: string
          format: date
          nullable: true
        last_login:
          type: string
          format: date-time
          nullable: true
        department_id:
          type: integer
          writeOnly: true
          nullable: true
        standard:
          allOf:
          - $ref: '#/components/schemas/Standard'
          readOnly: true
        assigned_standards:
          type: array
          items:
            type: integer
        my_department_users:
          type: string
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        section:
          type: string
          readOnly: true
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        education_details:
          nullable: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
      required:
      - biometric_data
      - branch
      - branch_id
      - created
      - created_by
      - department
      - designation
      - details
      - email
      - first_name
      - gender
      - group
      - group_id
      - guardian_details
      - guardians
      - id
      - last_name
      - modified
      - modified_by
      - my_department_users
      - my_section_id
      - organisation
      - section
      - standard
      - student_details
    UserBiometricData:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        fingerprint_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        rfid_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
        face_data:
          type: string
          format: byte
          readOnly: true
          nullable: true
      required:
      - created_by
      - face_data
      - fingerprint_data
      - id
      - modified_by
      - rfid_data
      - user
      - user_id
    UserDetailType:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        document_required:
          type: boolean
        is_required:
          type: boolean
        academic_year_id:
          type: integer
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        group_id:
          type: integer
          writeOnly: true
        branch_id:
          type: integer
          writeOnly: true
        academic_year:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        description:
          type: string
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
      required:
      - academic_year
      - academic_year_id
      - branch
      - branch_id
      - created
      - created_by
      - group
      - group_id
      - id
      - modified
      - modified_by
      - name
    UserDetails:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        value:
          type: string
          nullable: true
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        document:
          type: string
          format: uri
          nullable: true
        detail_type:
          allOf:
          - $ref: '#/components/schemas/UserDetailType'
          readOnly: true
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        detail_type_id:
          type: integer
          writeOnly: true
      required:
      - created
      - created_by
      - detail_type
      - detail_type_id
      - id
      - modified
      - modified_by
      - user_id
    UserSubscription:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        subscription_data: {}
        user_id:
          type: integer
          writeOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
      required:
      - created_by
      - id
      - modified_by
      - user
      - user_id
    VAIIoTDeviceDeviceTypeEnum:
      enum:
      - three_phase
      - single_phase
      - BTB4Channel
      - BTB8Channel
      - BTB12Channel
      - attendance_device
      type: string
      description: |-
        * `three_phase` - Three Phase
        * `single_phase` - Single Phase
        * `BTB4Channel` - BTB 4 Channel
        * `BTB8Channel` - BTB 8 Channel
        * `BTB12Channel` - BTB 12 Channel
        * `attendance_device` - Attendance Device
    VAI_IoTDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        device_unique_id:
          type: string
          nullable: true
          maxLength: 100
        device_type:
          $ref: '#/components/schemas/VAIIoTDeviceDeviceTypeEnum'
        description:
          type: string
        is_testing:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
        updated_by:
          type: integer
          nullable: true
      required:
      - created_at
      - device_type
      - id
      - name
      - updated_at
    ValidateEmail:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Vehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        branch_name:
          type: string
          readOnly: true
        academic_year_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        vehicle_type:
          $ref: '#/components/schemas/VehicleTypeEnum'
        registration_number:
          type: string
          nullable: true
          maxLength: 50
        joining_date:
          type: string
          format: date
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        model_name:
          type: string
          nullable: true
          maxLength: 100
        manufacturer_date:
          type: string
          format: date
          nullable: true
        total_seats:
          type: integer
          maximum: 2147483647
          minimum: 0
        owner_name:
          type: string
          nullable: true
          maxLength: 100
        registration_place:
          type: string
          nullable: true
          maxLength: 100
        fuel_type:
          type: string
          nullable: true
          maxLength: 50
        fuel_capacity:
          type: string
          nullable: true
          maxLength: 50
        mileage:
          type: string
          nullable: true
          maxLength: 50
        number_plate:
          type: string
          nullable: true
          maxLength: 50
        vehicle_id:
          type: string
          maxLength: 50
        school_side_number:
          type: string
          nullable: true
          maxLength: 50
        location:
          type: string
          nullable: true
          maxLength: 100
        vendor_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        vendor_phone:
          type: string
          nullable: true
          maxLength: 15
        registration_certificate:
          type: string
          format: uri
          nullable: true
        registration_expiry_date:
          type: string
          format: date
          nullable: true
        fitness_certificate:
          type: string
          format: uri
          nullable: true
        fitness_expiry_date:
          type: string
          format: date
          nullable: true
        insurance:
          type: string
          format: uri
          nullable: true
        insurance_expiry_date:
          type: string
          format: date
          nullable: true
        pollution_certificate:
          type: string
          format: uri
          nullable: true
        pollution_expiry_date:
          type: string
          format: date
          nullable: true
        owner_aadhar:
          type: string
          format: uri
          nullable: true
        address_proof:
          type: string
          format: uri
          nullable: true
        branch:
          type: integer
        academic_year:
          type: integer
      required:
      - academic_year
      - academic_year_name
      - branch
      - branch_name
      - end_date
      - id
      - joining_date
      - name
      - start_date
      - vehicle_id
      - vehicle_type
    VehicleTracking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        trip_details:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,20})?$
        current_location:
          type: string
          nullable: true
          maxLength: 100
        status:
          type: boolean
          nullable: true
        vehicle_tracking_status:
          type: boolean
        trip:
          type: integer
      required:
      - id
      - latitude
      - longitude
      - timestamp
      - trip
      - trip_details
    VehicleTypeEnum:
      enum:
      - bus
      - van
      - auto
      type: string
      description: |-
        * `bus` - Bus
        * `van` - Van
        * `auto` - Auto
    Vendor:
      type: object
      description: |-
        A serializer mixin that takes some additional arguments that controls
        which fields should be displayed, and respective queryset optimizations.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        gstin:
          type: string
          nullable: true
          maxLength: 100
        name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        modified_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        is_active:
          type: boolean
        address:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        phone_number:
          type: string
          maxLength: 128
        created_by:
          allOf:
          - $ref: '#/components/schemas/DefaultUser'
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - created
      - created_by
      - id
      - modified
      - modified_by
      - name
      - phone_number
    Visitor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        student_id:
          type: integer
          writeOnly: true
        allowed_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        allowed_by_id:
          type: integer
          writeOnly: true
        name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 15
        relation:
          type: string
          maxLength: 50
        visited_date:
          type: string
          format: date
        vacated_date:
          type: string
          format: date
          nullable: true
        check_in_time:
          type: string
          format: time
        check_out_time:
          type: string
          format: time
          nullable: true
        alternative_phone:
          type: string
          nullable: true
          maxLength: 15
        profile_pic:
          type: string
          format: uri
          nullable: true
        reasons:
          type: string
          nullable: true
      required:
      - allowed_by
      - allowed_by_id
      - check_in_time
      - id
      - name
      - phone
      - relation
      - student
      - student_id
      - visited_date
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
